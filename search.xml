<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>VPS搭个人网盘，seafile、kodexplorer、h5ai谁更合适？</title>
    <url>/vps/60e79082.html</url>
    <content><![CDATA[<p>Vps 其中一个很实用的用途就是搭个人网盘。个人网盘的好处在于你上传的文件不用给第三方网盘审查，想存什么就存什么，搞个在线播放的小视频还是不错的。而且自己搭建网盘自主性和可控性更高。</p>
<span id="more"></span>

<p>那么问题来了，<strong>用什么工具做个人网盘更适合呢？</strong>答案有很多，如seafile、kodexplorer、H5ai等。这几个都是很优秀的工具，都可以用来做个人网盘。由于之前折腾过这几款网盘，就来介绍分析下吧。</p>
<p>不能武断的说谁优谁劣，各自都有自己的特点，选择适合自己的才是最好的。总体来说，这几款网盘的用户体验都不错，安装过程也比较简单。</p>
<p><strong>H5ai 的安装及使用详情参考：<a href="https://zhuanlan.zhihu.com/p/262266780">VPS教程：搭建个人网盘教程—H5ai </a></strong></p>
<p><strong>Seafile 的安装及使用详情参考：<a href="https://zhuanlan.zhihu.com/p/262266273">VPS教程：搭建个人网盘教程—Seafile </a></strong></p>
<p><strong>kodexplorer 的安装及使用详情参考：<a href="https://zhuanlan.zhihu.com/p/262246425">VPS教程：搭建个人网盘教程—kodexplorer </a></strong></p>
<p>适合搭网盘的 VPS：<a href="https://www.vultr.com/?ref=8346337-4F">vultr可扩展类大硬盘</a>是搭建个人网盘的不二之选</p>
<h2 id="seafile、kodexplorer、h5ai-全方位对比"><a href="#seafile、kodexplorer、h5ai-全方位对比" class="headerlink" title="seafile、kodexplorer、h5ai 全方位对比"></a>seafile、kodexplorer、h5ai 全方位对比</h2><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191622.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于 <strong>seafile</strong>，从功能上来说，无疑 seafile 是最强大，相应的它的安装配置就比较复杂，适合对个人网盘功能要求多的人使用。另外说明下，seafile 很多高级功能都是要收费的。</p>
<p>对于 <strong>kodexplorer</strong>，各方面都很不错，功能全面，基本上你需要的功能都具备了，安装也很简单。如果你不知道那款适合你或者犯了选择困难症，推荐用 kodexplorer。备注下，它的很多高级功能也是收费的。</p>
<p>对于 <strong>h5ai</strong>，功能简单，界面雅观，安装快捷。如果说你只想查看服务器上的文件，浏览下图片视频之类的，h5ai 是个很不错的选择。</p>
]]></content>
  </entry>
  <entry>
    <title>VPS教程：实现微信机器人</title>
    <url>/vps/738b3309.html</url>
    <content><![CDATA[<p>微信机器人可以说是经常用到了，比如用来拉群、群发、查看撤回消息、自动回复、推广、营销、用户管理等功能。</p>
<p>但是怎么自己实现一个呢？而且是低成本的实现呢？今天给大家介绍一款功能原理类似的微信机器人。</p>
<span id="more"></span>

<p>该微信机器人是基于 itchat python 库实现的，主要原理是监听微信号收到的信息，并模拟微信用户发送信息。基础功能除了收发信息以外，还支持发文件、图片、好友验证等功能。</p>
<p>接下来，将通过实现查看撤回消息这个小功能来介绍下 itchat 的使用方法。</p>
<p>如果希望机器人长期在线运行，建议将微信机器人跑在 vps 上，这样只要你把机器人部署好了就不用去管它了。</p>
<p>推荐使用 vultr 的基础款云服务器，月付 5 美元，均采用千兆带宽、SSD 硬盘，稳定性有保障，按小时计费，随用随停，且支持支付宝付款。而且 vultr 现在还有注册送 100 美元的活动，活动直达：<a href="https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a></p>
<p>推荐阅读：<a href="https://www.jianshu.com/p/f3a42d4b8cb5">VPS搭建教程（简单易懂）</a></p>
<p>功能实现很简单只需要运行一个 python 脚本就可以了，脚本如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*-encoding:utf-8-*-</span><br><span class="line"> </span><br><span class="line"># -*-encoding:utf-8-*-</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import shutil</span><br><span class="line">import time</span><br><span class="line">import itchat</span><br><span class="line">from itchat.content import *</span><br><span class="line"> </span><br><span class="line"># 说明：可以撤回的有文本文字、语音、视频、图片、位置、名片、分享、附件</span><br><span class="line"> </span><br><span class="line"># &#123;msg_id:(msg_from,msg_to,msg_time,msg_time_rec,msg_type,msg_content,msg_share_url)&#125;</span><br><span class="line">msg_dict &#x3D; &#123;&#125;</span><br><span class="line"> </span><br><span class="line"># 文件存储临时目录</span><br><span class="line">rev_tmp_dir &#x3D; &quot;D:&#x2F;python&#x2F;weixin&#x2F;temp&quot;</span><br><span class="line">if not os.path.exists(rev_tmp_dir): os.mkdir(rev_tmp_dir)</span><br><span class="line"> </span><br><span class="line"># 表情有一个问题 | 接受信息和接受 note 的 msg_id 不一致 巧合解决方案</span><br><span class="line">face_bug &#x3D; None</span><br><span class="line"> </span><br><span class="line"># 将接收到的消息存放在字典中，当接收到新消息时对字典中超时的消息进行清理 | 不接受不具有撤回功能的信息</span><br><span class="line"># [TEXT, PICTURE, MAP, CARD, SHARING, RECORDING, ATTACHMENT, VIDEO, FRIENDS, NOTE]</span><br><span class="line">@itchat.msg_register([TEXT, PICTURE, MAP, CARD, SHARING, RECORDING, ATTACHMENT, VIDEO])</span><br><span class="line">def handler_receive_msg(msg):</span><br><span class="line">   global face_bug</span><br><span class="line">   # 获取的是本地时间戳并格式化本地时间戳 e: 2017-04-21 21:30:08</span><br><span class="line">   msg_time_rec &#x3D; time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())</span><br><span class="line">   # 消息 ID</span><br><span class="line">   msg_id &#x3D; msg[&#39;MsgId&#39;]</span><br><span class="line">   # 消息时间</span><br><span class="line">   msg_time &#x3D; msg[&#39;CreateTime&#39;]</span><br><span class="line">   # 消息发送人昵称 | 这里也可以使用 RemarkName 备注　但是自己或者没有备注的人为 None</span><br><span class="line">   msg_from &#x3D; (itchat.search_friends(userName&#x3D;msg[&#39;FromUserName&#39;]))[&quot;NickName&quot;]</span><br><span class="line">   # 消息内容</span><br><span class="line">   msg_content &#x3D; None</span><br><span class="line">   # 分享的链接</span><br><span class="line">   msg_share_url &#x3D; None</span><br><span class="line">   if msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Text&#39; \</span><br><span class="line">           or msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Friends&#39;:</span><br><span class="line">       msg_content &#x3D; msg[&#39;Text&#39;]</span><br><span class="line">   elif msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Recording&#39; \</span><br><span class="line">           or msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Attachment&#39; \</span><br><span class="line">           or msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Video&#39; \</span><br><span class="line">           or msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Picture&#39;:</span><br><span class="line">       msg_content &#x3D; r&quot;&quot; + msg[&#39;FileName&#39;]</span><br><span class="line">       # 保存文件</span><br><span class="line">       msg[&#39;Text&#39;](rev_tmp_dir + msg[&#39;FileName&#39;])</span><br><span class="line">   elif msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Card&#39;:</span><br><span class="line">       msg_content &#x3D; msg[&#39;RecommendInfo&#39;][&#39;NickName&#39;] + r&quot; 的名片&quot;</span><br><span class="line">   elif msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Map&#39;:</span><br><span class="line">       x, y, location &#x3D; re.search(&quot;&quot; + x.__str__() + &quot; 经度-&gt;&quot; + y.__str__()</span><br><span class="line">       else:</span><br><span class="line">           msg_content &#x3D; r&quot;&quot; + location</span><br><span class="line">   elif msg[&#39;Type&#39;] &#x3D;&#x3D; &#39;Sharing&#39;:</span><br><span class="line">       msg_content &#x3D; msg[&#39;Text&#39;]</span><br><span class="line">       msg_share_url &#x3D; msg[&#39;Url&#39;]</span><br><span class="line">   face_bug &#x3D; msg_content</span><br><span class="line">   # 更新字典</span><br><span class="line">   msg_dict.update(</span><br><span class="line">       &#123;</span><br><span class="line">           msg_id: &#123;</span><br><span class="line">               &quot;msg_from&quot;: msg_from, &quot;msg_time&quot;: msg_time, &quot;msg_time_rec&quot;: msg_time_rec,</span><br><span class="line">               &quot;msg_type&quot;: msg[&quot;Type&quot;],</span><br><span class="line">               &quot;msg_content&quot;: msg_content, &quot;msg_share_url&quot;: msg_share_url</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   )</span><br><span class="line"> </span><br><span class="line"># 收到 note 通知类消息，判断是不是撤回并进行相应操作</span><br><span class="line">@itchat.msg_register([NOTE])</span><br><span class="line">def send_msg_helper(msg):</span><br><span class="line">   global face_bug</span><br><span class="line">   if re.search(r&quot;\&lt;\!\[cdata\[.*撤回了一条消息\]\]\&gt;&quot;, msg[&#39;Content&#39;]) is not None:</span><br><span class="line">       # 获取消息的 id</span><br><span class="line">       old_msg_id &#x3D; re.search(&quot;\(.*?)\&lt;\&gt;&quot;, msg[&#39;Content&#39;]).group(1)</span><br><span class="line">       old_msg &#x3D; msg_dict.get(old_msg_id, &#123;&#125;)</span><br><span class="line">       if len(old_msg_id) &lt; 11:</span><br><span class="line">           itchat.send_file(rev_tmp_dir + face_bug, toUserName&#x3D;&#39;filehelper&#39;)</span><br><span class="line">           os.remove(rev_tmp_dir + face_bug)</span><br><span class="line">       else:</span><br><span class="line">           msg_body &#x3D; &quot;告诉你一个秘密~&quot; + &quot;\n&quot; \</span><br><span class="line">                      + old_msg.get(&#39;msg_from&#39;) + &quot; 撤回了 &quot; + old_msg.get(&quot;msg_type&quot;) + &quot; 消息&quot; + &quot;\n&quot; \</span><br><span class="line">                      + old_msg.get(&#39;msg_time_rec&#39;) + &quot;\n&quot; \</span><br><span class="line">                      + &quot;撤回了什么 ⇣&quot; + &quot;\n&quot; \</span><br><span class="line">                      + r&quot;&quot; + old_msg.get(&#39;msg_content&#39;)</span><br><span class="line">           # 如果是分享存在链接</span><br><span class="line">           if old_msg[&#39;msg_type&#39;] &#x3D;&#x3D; &quot;Sharing&quot;: msg_body +&#x3D; &quot;\n 就是这个链接➣ &quot; + old_msg.get(&#39;msg_share_url&#39;)</span><br><span class="line"> </span><br><span class="line">           # 将撤回消息发送到文件助手</span><br><span class="line">           itchat.send(msg_body, toUserName&#x3D;&#39;filehelper&#39;)</span><br><span class="line">           # 有文件的话也要将文件发送回去</span><br><span class="line">           if old_msg[&quot;msg_type&quot;] &#x3D;&#x3D; &quot;Picture&quot; \</span><br><span class="line">                   or old_msg[&quot;msg_type&quot;] &#x3D;&#x3D; &quot;Recording&quot; \</span><br><span class="line">                   or old_msg[&quot;msg_type&quot;] &#x3D;&#x3D; &quot;Video&quot; \</span><br><span class="line">                   or old_msg[&quot;msg_type&quot;] &#x3D;&#x3D; &quot;Attachment&quot;:</span><br><span class="line">               file &#x3D; &#39;@fil@%s&#39; % (rev_tmp_dir + old_msg[&#39;msg_content&#39;])</span><br><span class="line">               itchat.send(msg&#x3D;file, toUserName&#x3D;&#39;filehelper&#39;)</span><br><span class="line">               os.remove(rev_tmp_dir + old_msg[&#39;msg_content&#39;])</span><br><span class="line">           # 删除字典旧消息</span><br><span class="line">           msg_dict.pop(old_msg_id)</span><br><span class="line"> </span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">   itchat.auto_login(hotReload&#x3D;True,enableCmdQR&#x3D;2)</span><br><span class="line">   itchat.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行该 python 脚本，在终端会弹出一个二维码，通过微信扫码就可以登录了。</p>
<p>另外如果二维码的格式坏了，可以换个 shell 工具试试。</p>
<p>实现效果如下</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192824.png"></p>
<p>参考：<a href="https://www.vpsjxw.com/vps_use/python_itchat/">https://www.vpsjxw.com/vps_use/python_itchat/</a></p>
]]></content>
  </entry>
  <entry>
    <title>VPS教程：搭建Ubuntu个人网盘0—owncloud</title>
    <url>/vps/a665a3db.html</url>
    <content><![CDATA[<p>owncloud是一个完全开源的的网盘（文件存储）系统，是基于 php 开发的，可以很快的在自己服务器上搭建一套 owncloud。</p>
<span id="more"></span>

<p>介绍一下 owncloud 与其它网盘系统，如<a href="https://zhuanlan.zhihu.com/p/262246425">kodexplorer</a>、<a href="https://zhuanlan.zhihu.com/p/262266273">seafile</a>相比的优势特点。</p>
<ul>
<li>首先 owncloud 是完全开源的，动手能力强的可以根据自己的需求改功能，非常灵活；</li>
<li>开源也意味着代码完全透明，所以文件的安全性和隐私还是很可靠的。</li>
<li>owncloud 除了包含网盘基础功能，还有一项很逆天的功能，就是实现了文件的多端同步。比如设置个人 PC 机上的文件夹与 owncloud 服务器中的文件同步，那么我在本地文件夹上中对文件增删改都会即时同步到 owncloud 中去。而且支持把文件同步到其它客户端，如 IOS、android、windows 设备。</li>
</ul>
<h2 id="owncloud-安装步骤"><a href="#owncloud-安装步骤" class="headerlink" title="owncloud 安装步骤"></a>owncloud 安装步骤</h2><p>因为主要用到 owncloud 的文件存储和同步，所以对服务器的访问速度、下载速度和磁盘 IO 要求相对比较高。</p>
<p>推荐使用 vultr 的云服务器，均采用千兆带宽、SSD 硬盘，自带一键部署 owncloud 功能，按小时计费，随用随停，且支持支付宝付款。而且 vultr 现在还有注册送 100 美元的活动，活动直达：<a href="https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a>)</p>
<p>推荐阅读：<a href="https://www.jianshu.com/p/f3a42d4b8cb5">VPS搭建教程（简单易懂）</a></p>
<p>是基于 Ubuntu16.04 部署的 owncloud。</p>
<p>owncloud 是基于 php+mysql 的 web 应用，搭建方式也很简单。分三步：</p>
<ol>
<li><p>部署 lamp 环境；</p>
</li>
<li><p>下载安装 owncloud；</p>
</li>
<li><p>配置 apache、owncloud 等配置项。具体步骤如下，都是使用 root 用户执行的命令</p>
</li>
</ol>
<p><strong>1 安装 lamp</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install apache2</span><br><span class="line"></span><br><span class="line">apt-get install mysql-server</span><br></pre></td></tr></table></figure>



<p>中途会让你输入 mysql 密码，需要记住该密码</p>
<p><strong>2 安装 php7 及相关扩展</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install php7.0</span><br><span class="line"></span><br><span class="line">apt-get install libapache2-mod-php7.0 php7.0-gd php7.0-mysql php7.0-curl php7.0-intl php7.0-mcrypt php-imagick php7.0-zip php7.0-xml php7.0-mbstring</span><br></pre></td></tr></table></figure>



<p><strong>3 下载 owncloud 软件包</strong></p>
<p>wget <a href="https://download.owncloud.org/community/owncloud-10.1.1.tar.bz2">https://download.owncloud.org/community/owncloud-10.1.1.tar.bz2</a></p>
<p>解压，复制到 apache 根目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar xjf owncloud-10.1.1.tar.bz2</span><br><span class="line"></span><br><span class="line">cp -r -v owncloud&#x2F; &#x2F;var&#x2F;www&#x2F;</span><br></pre></td></tr></table></figure>



<p>给权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www</span><br><span class="line"></span><br><span class="line">chmod -R 777 owncloud</span><br></pre></td></tr></table></figure>



<p><strong>4 修改 apache 配置</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;apache2&#x2F;sites-enabled&#x2F;000-default.conf</span><br></pre></td></tr></table></figure>



<p>将 DocumentRoot /var/www/html，改为 DocumentRoot /var/www/owncloud</p>
<p>重启 apache</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Service apache2 restart</span><br></pre></td></tr></table></figure>



<p>访问你服务器的 IP 地址，看到以下配置界面，说明之前的安装都没有问题</p>
<p><img src="/Users/diffxiao/Blog/blog/source/_posts/C:%5CUsers%5CAdministrator%5CDesktop%5C%E6%96%9C%E6%9D%A0%E9%9D%92%E5%B9%B4%5C1%E3%80%81%E8%BD%AF%E6%96%87%E6%8E%A8%E8%8D%90%EF%BC%88%E4%BE%B5%E5%88%A0%EF%BC%89%5C1%E3%80%81VPS%5C%E9%85%8D%E5%9B%BE%5C20201006%5C42.png"></p>
<p>然后配置你的登录帐号、mysql 信息，点击开始安装，等待几秒钟。安装完成后，进入 owncloud，主界面如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191854.png"></p>
<p>可以看到跟一般网盘差不多，文件上传、下载、共享、预览、用户组、权限控制都有。</p>
<h2 id="owncloud-文件同步"><a href="#owncloud-文件同步" class="headerlink" title="owncloud 文件同步"></a>owncloud 文件同步</h2><p>接下来体验下 owncloud 文件多端同步的功能吧。先尝试下在本地 windows PC 机与 owncloud 中文件同步。</p>
<p>首先在 owncloud 官网下载 windows 客户端，地址：<a href="https://download.owncloud.com/desktop/stable/ownCloud-2.5.4.11654.11466.msi%E3%80%82%E5%AE%89%E8%A3%85%E4%BB%A5%E5%90%8E%EF%BC%8C%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9C%B0%E5%9D%80%E3%80%82">https://download.owncloud.com/desktop/stable/ownCloud-2.5.4.11654.11466.msi。安装以后，配置服务器地址。</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191907.png"></p>
<p>填入 http://+IP，然后输入你 owncloud 的账号密码，登录成功后，设置文件同步方案</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191920.png"></p>
<p>以上设置表示将 owncloud 中我的账号中的文件同步到本地的 F：\owncloud 文件夹中。连接之后可以看到文件同步状态</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191933.png"></p>
<p>然后验证在 owncloud 中上传文件会即时同步到本地文件夹中，在本地文件夹中添加文件也能即使同步到 owncloud 中去。</p>
<p>参考:<a href="https://www.vpsjxw.com/vps_use/owncloud_intro/">https://www.vpsjxw.com/vps_use/owncloud_intro/</a></p>
]]></content>
  </entry>
  <entry>
    <title>VPS教程：搭建个人专属邮箱</title>
    <url>/vps/89cde604.html</url>
    <content><![CDATA[<p>很多人用 VPS 来自建个人邮箱，自己搭建邮件服务器主要可以用来邮件营销（edm），发邮件引流；也可以用做个人邮箱收发邮件，用带自己域名的邮箱号还是比较炫酷的。</p>
<span id="more"></span>

<p>选用<strong>ireadmail</strong>搭建的个人邮箱，有以下原因：</p>
<ul>
<li> iredmail 是邮件系统个组件的集成包，一键搭建比较快捷，功能也很丰富。</li>
<li> 支持部署在主流 linux 发行版上，如 ubuntu、centos、debian 等；</li>
<li> 部署安装快速便捷，1 分钟即可安装完成（官方这么宣传的，预计安装时间需要十几分钟吧）；</li>
<li> 支持 TSL/SSL 加密，邮件备份，抵挡垃圾邮件等功能。</li>
</ul>
<p>简单介绍下 iredmail 的原理和核心组件。</p>
<p>iredmail 核心组件包括：</p>
<ul>
<li><p>Postfix–SMTP 服务器；</p>
<p>Postfix 提供 MTA 功能，即邮件服务器，负责服务器端的收发邮件。</p>
</li>
<li><p>Dovecot– POP3/IMAP/Managesieve 服务器。</p>
<p>Dovecot 是一个开源的 IMAP 和 POP3 邮件服务器，为邮件用户代理端(MUA，用户查看操作邮件的客户端，如 foxmail、outlook)提供了一种访问服务器上存储的邮件的方法，是邮件服务端（MTA）与客户端（MUA）之间的桥梁，负责检测用户的合法性等功能。</p>
</li>
</ul>
<p>废话不多说，直接进入正题。</p>
<h2 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h2><p>1 个域名</p>
<p>1 个带公网 IP 的 VPS，内存最少 1G 以上，推荐<a href="https://www.vultr.com/?ref=8346337-4F">vultr</a>家 1.5G VPS，支持自助无限换 IP，防止 ip 被墙。（1G 内存是最小配置，虽然安装成功了，但后来有几次都提醒内存不够）。而且 vultr 现在还有注册送 100 美元的活动，活动直达：<a href="https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a></p>
<p>推荐阅读：<a href="https://zhuanlan.zhihu.com/p/258990106">2020最佳VPS Vultr选购及机房选择教程</a></p>
<p><strong>为了下文方便说明，假设你的域名是 jikeshare.com,ip 是 11.11.11.11</strong></p>
<p>以下步骤在 vultr 1G 主机、centos7 系统上验证成功</p>
<h2 id="iredmail-安装配置步骤"><a href="#iredmail-安装配置步骤" class="headerlink" title="iredmail 安装配置步骤"></a>iredmail 安装配置步骤</h2><p>最新版 iredmail（V0.9.9）兼容新列表如下，所以我们直接在 centos7 上搭建</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192529.png"></p>
<p><strong>1 配置域名，在你买的域名中加两条解析，如下所示</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主机记录    记录类型    线路类型    记录值              MX 优先级mail         A        默认       11.11.11.11.11@　　　　　　　MX       默认       mail.jikeshare.com        5</span><br></pre></td></tr></table></figure>

<p><strong>2 修改 vps 主机 host 和 hostname</strong></p>
<p>编辑<code> /etc/sysconfig/network</code>，设置 <code>hostname</code> 成我们的邮件域名<code> mail.jikeshare.com</code></p>
<p>编辑<code>/etc/hosts</code> 文件，在最上面一样加上 <code>127.0.0.1 mail.jikeshare.com mail localhost.localdomain localhost</code> 脚本，注意其中修改成我们自己的主机名。</p>
<p>注：如果 vim 出错，先安装 vim，yum intall vim</p>
<p>如果以上方法没设置不成功，用以下方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname mail.jikeshare.com</span><br></pre></td></tr></table></figure>



<p>重启 VPS 之后，再用”<code>hostname -f</code>”查看会看到当前的主机名已经是 mail.jikeshare.com 的。</p>
<p><strong>3 配置系统环境</strong></p>
<p>更新系统</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure>



<p>禁用 Selinux</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;selinux&#x2F;config</span><br></pre></td></tr></table></figure>



<p>设置 SELINUX=disabled</p>
<p>保证 vps 主机的 80、443 端口是在防火墙开放，vultr 默认没有开放，参考这篇文章开放端口：[<a href="https://www.vpsjxw.com/vps_use/vultr_open_80443/">VPS 主机配置]vultr 开启 80、443 端口及更换 ssh 端口教程 </a></p>
<p><strong>4 安装 iredmail0.9.9</strong></p>
<p>下载安装包</p>
<p>wget <a href="https://bitbucket.org/zhb/iredmail/downloads/iRedMail-0.9.9.tar.bz2">https://bitbucket.org/zhb/iredmail/downloads/iRedMail-0.9.9.tar.bz2</a></p>
<p>解压安装包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar xjf iRedMail-0.9.8.tar.bz2</span><br></pre></td></tr></table></figure>



<p>如果遇到以下报错，执行<code> yum install bzip2</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192536.png"></p>
<p>进入 iredmail 目录，执行 sh 文件安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd iRedMail-0.9.9</span><br><span class="line"></span><br><span class="line">bash iRedMail.sh</span><br></pre></td></tr></table></figure>



<p>注：其他安装文档都提示需要修改 iRedMail.sh 中的地址，因为国内访问不通。但是 vultr 上部署不用换，因为 vultr 主机本来就在国外。</p>
<p>脚本运行过程中需要手动配置一些东西，如下所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192540.png"></p>
<p>确认安装，按 yes，下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192544.png"></p>
<p>确认邮件默认存储目录，next，下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192549.png"></p>
<p>选择 web 服务器，直接用默认的 nginx 即可。注：通过空格键选择选项</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192554.png"></p>
<p>选择数据库，选择 mariadb。注：通过空格键选择选项</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192558.png"></p>
<p>设置数据库密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192603.png"></p>
<p>输入准备好的域名，如 aaa.com</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192608.png"></p>
<p>设置 iredmail 管理员密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192614.png"></p>
<p>选择 iredmail 插件功能，都选上。注：通过空格键选择选项</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192621.png"></p>
<p>确认自己配置了以下内容，然后开始安装</p>
<p>注：安装过程中会有一个让设置防火墙 iptables 和数据库的选项，iptables 选 n 数据库选择 y</p>
<p>以下是安装成功界面，包括了 web 界面地址、管理界面地址、和管理员信息。然后重启机器使所有服务生效。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192626.png"></p>
<p>登录 <a href="https://mail.aaa.com/mail">https://mail.aaa.com/mail</a> 邮件 web 客户端，跟一般的网易，QQ 邮箱功能差不多，尽情的折腾吧</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192631.png"></p>
<p>参考：<a href="https://www.vpsjxw.com/vps_use/vps_iredmail_install/">https://www.vpsjxw.com/vps_use/vps_iredmail_install/</a></p>
]]></content>
  </entry>
  <entry>
    <title>VPS教程：搭建个人网盘—H5ai.</title>
    <url>/vps/80e2ed39.html</url>
    <content><![CDATA[<p>H5ai，全称是 HTML5 Apache Index，直译就是基于 html5 的 apache 目录索引列表，但不仅支持 apache 还支持 lighttpd、nginx 、 Cherokee 等 WEB 服务器。H5ai 是一款外观优雅且非常实用的目录列表程序，适合用来做个人网盘。</p>
<span id="more"></span>

<p>最开始了解 h5ai 是看到别人通过 h5ai 分享文件，第一眼就被它简单直接的功能和简约大方的的界面吸引了。于是自己也在 vps 上安装体验了一把，总的来说，安装使用过程很流畅，用户体验很好。</p>
<h2 id="相关内容"><a href="#相关内容" class="headerlink" title="相关内容"></a>相关内容</h2><p>h5ai 主要用来查看文件内容，经常搭配使用的工具是<a href="https://www.vpsjxw.com/tag/aria2/">aria2</a>，是用来做离线下载的。一般用服务器中的 aria2 下载完文件后，用 h5ai 查看浏览，正好两个工具功能互补。</p>
<p>aria2 的使用介绍参考=&gt;<a href="https://www.vpsjxw.com/vps_use/aria_ariang/">Aria2 搭建自己的离线下载工具—高效、全能、安装快捷</a></p>
<p>h5ai 主要用来存储/浏览/播放文件，对 vps 带宽、磁盘容量、流量、网络线路有一定要求。推荐使用 vultr，按小时付费随用随停，最新活动：<a href="https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a></p>
<h2 id="H5ai-安装过程"><a href="#H5ai-安装过程" class="headerlink" title="H5ai 安装过程"></a>H5ai 安装过程</h2><p>我这里用的是<a href="https://billing.virmach.com/aff.php?aff=9506">virmach</a>的大盘鸡，500G 硬盘/1 核 CPU/500M 内存/每月 5T 流量。超大的磁盘和充足的流量，完全就是为 h5ai 这种存储型应用量身定制的。</p>
<p><strong>1 准备系统环境</strong></p>
<p>应该对操作系统没什么要求，任何发行版的 linux 和 windows 都行，只要可以运行 apache 就可以。我用的是 ubuntu14.04.</p>
<p><strong>2 搭建 apache+php 环境</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apache2sudo apt-get install php5 libapache2-mod-php5 php5-curl</span><br></pre></td></tr></table></figure>

<p><strong>3 安装 h5ai</strong></p>
<p>执行以下命令。下载 h5ai 压缩包，将 _h5ai 文件放到 apache 根目录下,我的 apache 根目录为/var/www/html/。也可以通过 ftp 等工具上传。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;release.larsjung.de&#x2F;h5ai&#x2F;h5ai-0.29.0.zipunzip h5ai-0.29.0.zipcp -r _h5ai  &#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br></pre></td></tr></table></figure>

<p><strong>4 检查是否安装正确</strong></p>
<p>访问 <a href="http://your-domain.tld/_h5ai/public/index.php%EF%BC%8C%E6%A3%80%E6%9F%A5%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E6%98%AF%E5%90%A6%E5%AE%8C%E5%85%A8%E6%AD%A3%E7%A1%AE%E3%80%82">http://YOUR-DOMAIN.TLD/_h5ai/public/index.php，检查系统环境是否完全正确。</a></p>
<p>首先会看到登录界面，如下图所示。初始密码为空，可以在 _h5ai/private/conf/options.json 中修改密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192051.png"></p>
<p>进去之后可以看到，还差 php 的 gd 库、系统的 avconv、convert、zip 工具没安装。需要我们手动安装。</p>
<p><img src="/Users/diffxiao/Blog/blog/source/_posts/C:%5CUsers%5CAdministrator%5CDesktop%5C%E6%96%9C%E6%9D%A0%E9%9D%92%E5%B9%B4%5C1%E3%80%81%E8%BD%AF%E6%96%87%E6%8E%A8%E8%8D%90%EF%BC%88%E4%BE%B5%E5%88%A0%EF%BC%89%5C1%E3%80%81VPS%5C%E9%85%8D%E5%9B%BE%5C20201006%5C36.png"></p>
<p>修复系统环境过程</p>
<p><strong>4.1 安装 php GD 扩展库</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install php5-gdservice apache2 restart</span><br></pre></td></tr></table></figure>

<p><strong>4.2 安装 avconv 工具</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install libav-tools</span><br></pre></td></tr></table></figure>

<p><strong>4.3 安装 convert 工具</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install imagemagick</span><br></pre></td></tr></table></figure>

<p><strong>4.4 安装 zip 工具</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install zip</span><br></pre></td></tr></table></figure>

<p><strong>5 配置 h5ai</strong></p>
<p>将/_h5ai/public/index.php 设为目录默认打开文件。不同的操作系统、不同的 web 服务器可能设置都不一样，我用的是 ubuntu 和 apache。</p>
<p>在/etc/apache2/mods-available/dir.conf 中加入/_h5ai/public/index.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mod_dir.c&gt;      DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm &#x2F;_h5ai&#x2F;public&#x2F;index.php&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure>

<p>再重启 apache，sudo service apache2 restart</p>
<p><strong>6 安装结束</strong></p>
<p>配置到这里就完成了，总的来说还是很简单的。访问 <a href="http://your-domain.tld/_h5ai%EF%BC%8C%E5%AE%89%E8%A3%85%E6%AD%A3%E5%B8%B8%E7%9A%84%E8%AF%9D%EF%BC%8C%E4%B8%BB%E7%95%8C%E9%9D%A2%E5%A6%82%E4%B8%8B">http://YOUR-DOMAIN.TLD/_h5ai，安装正常的话，主界面如下</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192117.png"></p>
<h2 id="H5ai-支持的特性及使用体验"><a href="#H5ai-支持的特性及使用体验" class="headerlink" title="H5ai 支持的特性及使用体验"></a>H5ai 支持的特性及使用体验</h2><p>根据官网的介绍，h5ai 的核心功能在于目录列表。其他特性包括排序、切换浏览模式、语言本地化、面包屑导航、目录树结构、自定义界面头部与底部、过滤与搜索、文件夹大小、自动刷新、打包下载、生成二维码、缩略图、图片文本音频视频播放浏览。</p>
<p>亮点在于界面，简约而不简单。目录的查看与文件预览播放体验很好，但是并不支持上传功能。</p>
<p>另外，放点小姐姐的视频也是安逸的很~</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192132.png"></p>
<p>注 ：另一款优秀个人网盘 kodexplorer的介绍=&gt;<a href="https://zhuanlan.zhihu.com/p/262246425">VPS教程：搭建个人网盘教程—kodexplorer</a></p>
<p>参考：<a href="https://www.vpsjxw.com/vps_use/h5ai_intro/">https://www.vpsjxw.com/vps_use/h5ai_intro/</a></p>
<h4 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h4><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/98643478">《VPS是什么？》</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/98645292">《VPS有哪些用途？》</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/262044507">《VPS的有趣用途》</a></p>
<p><a href="https://www.jianshu.com/p/f3a42d4b8cb5">《VPS搭建教程（简单易懂）》</a> </p>
<p><a href="https://zhuanlan.zhihu.com/p/258990106">《2020最佳VPS Vultr选购及机房选择教程》</a> </p>
</blockquote>
<p><em><strong>更多干货？欢迎关注我的知乎专栏：<a href="https://zhuanlan.zhihu.com/vps-1">VPS</a></strong></em></p>
]]></content>
  </entry>
  <entry>
    <title>VPS教程：搭建个人网盘—seafile</title>
    <url>/vps/ee2a4252.html</url>
    <content><![CDATA[<p>最近经常听到有人推荐 seafile 个人网盘，由于本人之前一直用 kodexplorer 作个人网盘就没有太关注。今天偶然发现 seafile 与 kodexplorer 差别还挺大的，特意来体验一下。</p>
<span id="more"></span>

<p>准备先体验下 seafile 的在线 DEMO，但是访问 demo 地址，提示页面不存在，那只好在服务器上自己动手搭一个吧，反正手头上吃灰的 VPS 多，而且 seafile 的搭建过程很简单方便。</p>
<p>本次用的是<a href="https://www.vultr.com/?ref=8346337-4F">vultr</a>的 1G 内存的 VPS，因为只是体验下 seafile，所以不需要太好的配置。vultr可以按小时付费随用随停，最新活动：<a href="https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a></p>
<h2 id="通过-docker-安装-seafile"><a href="#通过-docker-安装-seafile" class="headerlink" title="通过 docker 安装 seafile"></a>通过 docker 安装 seafile</h2><p>有三种安装方式，包括通过 docker 安装、一键脚本安装、手动安装配置。官方推荐用 docker 安装，那我们就选择 docker 安装吧（其实是一键脚本安装坑太多啊~）。</p>
<p>Docker 安装 seafile 很简单方便，而且现在很多应用的部署发布都逐渐采用 docker，以后应该是应用部署的趋势。</p>
<p>安装 docker 要求系统内核版本高于 3.0，可以通过 uname -r 来查看当前系统内核版本。我的系统是 contos7.4，安装 docker 的步骤如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -fsSL https:&#x2F;&#x2F;get.docker.com&#x2F; | sh</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl status docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure>

<p>安装完后，运行以下命令。该命令可以下载 seafile docker 镜像，运行 seafile 容器即 seafile 服务。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d --name seafile \ </span><br><span class="line">        -e SEAFILE_SERVER_HOSTNAME&#x3D; seafile.example.com \  </span><br><span class="line">        -v &#x2F;opt&#x2F;seafile-data:&#x2F;shared \  </span><br><span class="line">        -p 80:80 \  </span><br><span class="line">        seafileltd&#x2F;seafile:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后等几分钟访问 seafile.example.com，就可以看到登录界面了。默认账号/密码为 <a href="mailto:&#x6d;&#x65;&#64;&#x65;&#120;&#x61;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;">&#x6d;&#x65;&#64;&#x65;&#120;&#x61;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;</a>/asecret</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192256.png"></p>
<p>然后就可以愉快的玩耍了</p>
<p>最后还是要强烈推荐下 docker 安装方法，用一键脚本安装花了快 2 小时没搞定，docker 只用了 10 分钟不到就搞定了，业界良心啊。</p>
<h2 id="seafile-功能亮点"><a href="#seafile-功能亮点" class="headerlink" title="seafile 功能亮点"></a>seafile 功能亮点</h2><p>seafile 除了包含传统网盘应有的存储、访问、备份、共享、管理、写作等核心功能，还包括许多很优秀的特性，给我印象很深的是跨平台文件同步、挂载盘客户端这两个功能，因为之前需要在不同电脑上办公，文件同步的问题很让人头疼。</p>
<p>跨平台文件同步，可以实现 windows、linux、mac 多个平台的文件同步，性能极佳，1 分钟内可以同步数万个小文件。但需要在各平台安装客户端。</p>
<p>挂载盘客户端，可以实现不用同步就可以访问远程文件，就像把远程磁盘挂载在本地一样。</p>
<p>还有其他如在线编辑、版本管理、安全与加密等其他很不错的功能，但我暂时用不上，就不一一介绍了。官网有详细的信息。</p>
<h2 id="seafile-与-kodexplorer-简单对比"><a href="#seafile-与-kodexplorer-简单对比" class="headerlink" title="seafile 与 kodexplorer 简单对比"></a>seafile 与 kodexplorer 简单对比</h2><p>这两款存储工具都很适合做个人网盘，但侧重点不同。Kodexplorer 的界面和办公功能做的很完美，而 seafile 更注重文件同步、跨平台和性能方面。下面是 seafile 和 kodexplorer 的主机面，Kodexplorer的教程请参考<a href="https://zhuanlan.zhihu.com/p/262246425">《VPS教程：搭建个人网盘教程—kodexplorer》</a></p>
<p>Kodexplorer：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192304.png"></p>
<p>Seafile：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192311.png"></p>
<p>参考：<a href="https://www.vpsjxw.com/vps_use/seafile_intro/">https://www.vpsjxw.com/vps_use/seafile_intro/</a></p>
]]></content>
  </entry>
  <entry>
    <title>VPS教程：搭建个人网盘教程—kodexplorer</title>
    <url>/vps/cb981a71.html</url>
    <content><![CDATA[<p>kodexplorer网盘系统。Kodexplorer，也叫芒果云、可道云、kodcloud，总之名字改了不少。但其本身作为一个网盘文件系统，还是有很多可圈可点的地方。</p>
<span id="more"></span>

<p>seafile、h5ai、kodexplorer 三者的特点优劣势分析比较，参考<a href="https://zhuanlan.zhihu.com/p/262267678">《VPS 搭个人网盘，seafile、kodexplorer、h5ai 谁更合适？》</a></p>
<h2 id="特点及优势"><a href="#特点及优势" class="headerlink" title="特点及优势"></a>特点及优势</h2><p>界面优美，基本上是仿 windows 的操作界面，而且有各种皮肤和语言可以选择，用起来很顺手，看起来很顺眼。</p>
<p>安装简单，基于 php 环境，无需安装数据库，几分钟即可安装成功。</p>
<p>功能丰富，除了一般网盘应有的功能，还包括 office 文件和文本文件在线编辑，文件共享，视频音频 office 等文件浏览，离线下载，用户系统等等。可以说相当不错了。</p>
<h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><p>Apache/nginx+php 的 web 环境，可以参考<a href="https://zhuanlan.zhihu.com/p/262189089">一键安装脚本搭建LNMP/LAMP环境</a></p>
<p>内存最小 512M，如果用来做个人网盘，建议磁盘空间大一点。</p>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>我用的是<a href="https://billing.virmach.com/aff.php?aff=9506">virmach</a>的存储型 vps，500G 磁盘仅需 3.5 刀每月。操作系统是 ubuntu14.04</p>
<p>安装过程如下</p>
<p>1、安装 Apache、php 及 php 相关扩展，重启 apache</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apache2</span><br><span class="line"></span><br><span class="line">sudo apt-get install php5 libapache2-mod-php5 php5-gd</span><br><span class="line"></span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;apache2 restart</span><br></pre></td></tr></table></figure>



<p>2、下载 KodExplorer 安装包到 Apache web 根目录/var/www/html，解压，更改读写权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line"></span><br><span class="line">wget http:&#x2F;&#x2F;static.kodcloud.com&#x2F;update&#x2F;download&#x2F;kodexplorer4.25.zip</span><br><span class="line"></span><br><span class="line">unzip -d .&#x2F;kodexplorer kodexplorer4.25.zip</span><br><span class="line"></span><br><span class="line">chmod -R 777 kodexplorer</span><br></pre></td></tr></table></figure>



<p>3、重启 apache</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure>



<p>4、访问 ip，或 ip+”/kodexlorer”，出现以下界面表示安装成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192415.png"></p>
<p>主界面如下图所示</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428192419.png"></p>
<h2 id="去除版权及屏蔽自动更新"><a href="#去除版权及屏蔽自动更新" class="headerlink" title="去除版权及屏蔽自动更新"></a>去除版权及屏蔽自动更新</h2><p>很多人在安装完后，问怎么去版权，频闭自动更新。我在网上查了几种方法还是可行的。</p>
<p><strong>去版权</strong></p>
<p>css 文件/static/style/login.css，第 87 行，改为：<br><code>.common_footer&#123;display:none;&#125;</code></p>
<p>css 文件/static/style/common.css，在最后添加：<br><code>.version_vip&#123;.version_vip&#123;display:none !important;&#125;</code></p>
<p>css 文件/static/style/common.css，在最后添加：<br><code>.old_common_footer&#123;.common_footer&#123; display:none !important;&#125;</code></p>
<p>template/common/footer.html 文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;”common_footer”&gt;&lt;div class&#x3D;”old_common_footer”&gt;【原来的版权信息】&lt;&#x2F;div&gt;，&lt;div class&#x3D;”new_common_footer”&gt;新的版权信息&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>



<p>另外还有标题栏的版权字样，可以通过修改 html 代码实现，进入/template 文件夹，去除所有页面中“$L[‘kod_power_by’]”内容，即可。</p>
<p><strong>频闭自动更新</strong></p>
<p>在 config/version.php 中将 4.25 这个值改为更大的值就可以了。</p>
<p>另外，我本人就用的 kodexplorer 做个人网盘，做了不少修改，大家有不懂的可以留言。</p>
<p>参考：<a href="https://www.vpsjxw.com/vps_use/vps_install_kodexplorer/">https://www.vpsjxw.com/vps_use/vps_install_kodexplorer/</a></p>
]]></content>
  </entry>
  <entry>
    <title>VPS新手教程：centos系统VPS服务器挂载数据盘</title>
    <url>/vps/5da8b25e.html</url>
    <content><![CDATA[<p>很多网友在购买拿到VPS服务器之后会直接安装环境使用，在使用一段时间后会发现数据已占满系统盘，而数据盘却没有挂载利用起来。</p>
<p>所以安装环境前我们先进行数据盘挂载，做分区和格式化操作。</p>
<span id="more"></span>

<p><strong>由于挂载操作会清空数据，已经有数据一定要注意确认挂载盘内无重要数据：</strong></p>
<ol>
<li> 站点数据备份，因为数据盘挂载会清空挂载目录数据，如果你挂载数据盘到站点文件目录，一定先备份好数据。</li>
<li> 如果挂载数据盘到站点目录，先搞清楚自己站点根目录是什么。</li>
</ol>
<p>以下是 VPS服务器 centos系统分区、数据盘挂载详细步骤：</p>
<p>先用远程连接工具SSH Secure Shell Client或者Xshell 5连接上服务器。如果你对命令不太了解，可点击下面地址 <a href="https://www.cnblogs.com/diffx/p/13820356.html">Linux中常用操作命令</a>     </p>
<h4 id="一、查看数据盘"><a href="#一、查看数据盘" class="headerlink" title="一、查看数据盘"></a><strong>一、查看数据盘</strong></h4><p>[root@win23 /]# fdisk -l</p>
<p>通常我们是用“df –h”命令查看服务器磁盘，但是在没有分区和格式化数据盘之前，使用 “df –h”命令是无法看到数据盘的，因此我们要使用“fdisk -l”（注意是字母l，而不是数字1）命令进行查看。</p>
<p>磁盘的命名规则为/dev/vd(a-z），系统盘默认是/dev/vda。我们需要找到系统以外多的磁盘/dev/vdb。（注意不要挂错盘，从而导致把系统盘格式化！）</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193432.png" alt="img"> </p>
<h4 id="二、对数据盘进行分区"><a href="#二、对数据盘进行分区" class="headerlink" title="二、对数据盘进行分区"></a><strong>二、对数据盘进行分区</strong></h4><p>[root@win23 /]# fdisk /dev/vdb</p>
<p>执行“fdisk /dev/vdb”命令，对数据盘进行分区。根据提示，依次输入“n”、“p”、“1”、两次回车，分区就开始了，很快就会完成。然后输入“p”可查看到刚才的分区结果。此时我们可以看到，新的分区vdb1已建立完成。</p>
<p>确认分区成功后，输入“w”保存分区设置</p>
<p> <img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193449.png" alt="img"></p>
<h4 id="三、格式化新建的分区"><a href="#三、格式化新建的分区" class="headerlink" title="三、格式化新建的分区"></a><strong>三、格式化新建的分区</strong></h4><p>[root@win23 /]# mkfs.ext4 /dev/vdb1</p>
<p>以ext4为例（可自主决定选用其它文件格式，如ext3等）：使用“mkfs.ext4 /dev/vdb1”命令对新分区vdb1进行格式化（注意：格式化新建的/dev/vdb1，不要写成/dev/vdb），格式化的时间根据硬盘大小有所不同。</p>
<p> <img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193457.png" alt="img"></p>
<h4 id="四、创建挂载目录，挂载新分区"><a href="#四、创建挂载目录，挂载新分区" class="headerlink" title="四、创建挂载目录，挂载新分区"></a><strong>四、创建挂载目录，挂载新分区</strong></h4><p>[root@win23 /]# mkdir /hdd</p>
<p>[root@win23 /]# mount /dev/vdb1 /hdd/</p>
<p>[root@win23 /]# cd /hdd/ </p>
<p>[root@win23 hdd]# ls</p>
<p>1、输入命令“mkdir /hdd“创建挂载目录hdd（可自定义）；</p>
<p>2、执行“mount /dev/vbd1 /hdd/”命令，将新分区vdb1挂载到hdd目录下；</p>
<p>3、“cd”进入/hdd目录，然后执行命令“ls”查看目录下的文件，查看到lost+found 表示挂载成功。</p>
<p> <img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193506.png" alt="img"></p>
<p>[root@win23 hdd]# df -h</p>
<p>然后用“df -h”命令查看，出现以下信息就说明挂载成功，可以开始使用新的分区了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193512.png" alt="img"></p>
<h4 id="五、设置开机启动自动挂载"><a href="#五、设置开机启动自动挂载" class="headerlink" title="五、设置开机启动自动挂载"></a><strong>五、设置开机启动自动挂载</strong></h4><p>磁盘挂载后重启服务器挂载就会失效，因此我们需要写入硬盘启动信息，下次重启后自动挂载数据盘。</p>
<p>1.输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;&#x2F;dev&#x2F;vdb1   &#x2F;hdd     ext4       defaults  0 0&quot; &gt;&gt;&#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure>

<p>2.输入命令：cat /etc/fstab进行查看，如果出现下列信息，表示硬盘启动信息已写入完成。</p>
<p> <img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193518.png" alt="img"></p>
<p>  至此，CentOS系统下的数据盘挂载完成。</p>
<p>接下来就是VPS服务器部署 WEB 应用时安装 LAMP/LNMP 环境或者宝塔面板了，个人比较喜欢和推荐安装宝塔面板，因为对于都是代码操作的Linux系统来说，宝塔面板可以在可视界面中实现为服务器安装应用、同步文件、定期执行代码、管理服务，非常方便。</p>
<blockquote>
<p>参考教程：</p>
<p><a href="https://zhuanlan.zhihu.com/p/262189089">《一键安装脚本搭建LNMP/LAMP环境》</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/259403543">《VPS新手建站必备系列-宝塔面板安装教程》</a></p>
</blockquote>
<p>以上就是Linux VPS服务器centos系统挂载数据盘操作。</p>
<blockquote>
<p> 参考链接：<a href="https://www.cnblogs.com/wangchuanyang/p/6380970.html">https://www.cnblogs.com/wangchuanyang/p/6380970.html</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>VPS是什么？</title>
    <url>/vps/2215e17d.html</url>
    <content><![CDATA[<p>VPS是一种网络托管形式，最近几年越来越受欢迎。现在网络托管方式有很多种，到底应该选择哪一个，主要看自己的使用需求。</p>
<p>那么VPS主机到底是什么，它有哪些优缺点，以及什么样的人在使用这种主机。如果你对VPS托管感到困惑，那么这篇文章应该可以提供一些帮助！</p>
<span id="more"></span>

<p><strong>VPS是什么</strong></p>
<p>全称为Virtual Private Server，意思是虚拟专用服务器，也就是将一台物理服务器分区成多个虚拟的专享服务器，它可以跟独立服务器一样有自己的操作系统、磁盘空间、独立的IP地址、网络带宽以及运行各种应用服务。</p>
<p>在使用的时候，VPS就像是一台真实的物理服务器，你在使用的时候对它完全独立的控制能力，可以与其他的用户相隔离，使数据更加的安全，在对数据进行迁移或者升级时都不需要暂停相关服务，数据也有着很好的备份以及恢复的功能。总之你还可以根据的喜好进行定制。</p>
<p>VPS一般分为两种：非管理型（Unmanaged）和全管理型（Managed）。</p>
<ul>
<li>非管理型（Unmanaged）VPS相当于一台裸机，只提供一个原生操作系统，所有的软件都需要你自己安装。这种VPS适合专业的开发人员，拥有很高的自由度。</li>
<li>全管理型（Managed）VPS已经安装好了各种建站软件，只需在后台点几个按钮就可以建好一个网站。这种VPS适合不懂程序开发的站长，这样可以专注于自己的业务，让托管商来帮你解决一切技术问题；但缺点也很明显：基本上只能用来建设网站。</li>
</ul>
<p><strong>VPS的优点</strong></p>
<p>当你寻找最好的托管服务时，最重要的是权衡每项服务的优缺点，下面是VPS的一些常见好处：</p>
<ul>
<li>比专用服务器更便宜，还不需要费心硬件维护带宽等之类的问题；</li>
<li>每个VPS都可以分配独立IP、独立操作系统、独立超大空间、独立内存、独立CPU资源、独立执行程序和独立系统配置等，它的运行和管理跟独立服务器一样，使用时可以独享它的全部资源并拥有完全的操作权限，总之可以自己的需求来灵活定制；</li>
<li>你可以更好地控制托管环境，除了搭建web，数据库，ftp等之外还有更多的用途；</li>
<li>随着需求的增加，VPS可以随着你的网站一起扩展；</li>
<li>VPS客服支持人员非常有帮助，可以帮你解决复杂的技术问题。</li>
</ul>
<p><strong>VPS的缺点</strong></p>
<p>当然，VPS并不完美，与其他托管服务一样，能够满足你需求的服务才是最好的。</p>
<ul>
<li>最大的缺点可能是成本，VPS比独立服务器便宜不过通常比共享虚拟主机更贵，并且需要更多的知识和经验；</li>
<li>由于VPS的现有市场较小，你使用的主机可能完全分配到所需的服务器资源；</li>
<li>一些公司会过度使用他们的服务器，并寄希望于上面的所有站点都能有高峰流量；</li>
<li>扩展性不强，一旦达到最大VPS存储空间，就必须购买配置更高的方案。</li>
</ul>
<p><strong>哪些人使用VPS</strong><br>虚拟主机通常用于最基本的网站，但随着时间的推移，你的需求和流量将逐步提升就需要升级到VPS这种更高级的托管环境。</p>
<p>VPS可以提供更多的自定义和控制选项，如果你是一位经验丰富的开发人员，那么<strong>非管理型VPS（unmanaged）</strong>可以让你尽情发挥所长，你能实现的功能完全取决于你的想象力，因为这是你的服务器，比如搭建私人云盘、个人媒体中心 （图片电影之类的）、个人博客等等。</p>
<p>当然，如果你不懂技术，那么<strong>管理型VPS（managed）</strong>可以提供人工服务完成所有的幕后工作，你只需专注于建设网站，就是价格贵。</p>
]]></content>
  </entry>
  <entry>
    <title>VPS有哪些用途？</title>
    <url>/vps/2780a969.html</url>
    <content><![CDATA[<p>[VPS（虚拟专用服务器）](<a href="http://vps688.com/2021/04/28/VPS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BE%88%E5%A5%BD%E7%9A%84%E7%BD%91%E7%BB%9C%E6%89%98%E7%AE%A1%E5%B9%B3%E5%8F%B0%EF%BC%8C%E4%BD%86%E5%AF%B9%E5%BE%88%E5%A4%9A%E5%85%B6%E4%BB%96%E4%B8%9C%E8%A5%BF%E4%B9%9F%E5%BE%88%E6%9C%89%E7%94%A8%E3%80%82%E7%AE%80%E5%8D%95%E6%9D%A5%E8%AF%B4%EF%BC%8CVPS%E6%98%AF%E4%B8%80%E5%8F%B0%E6%B0%B8%E8%BF%9C%E5%9C%A8%E7%BA%BF%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E8%83%BD%E5%A4%9F%E8%BF%90%E8%A1%8C%E5%87%A0%E4%B9%8E%E4%BB%BB%E4%BD%95%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%8C%E5%B9%B6%E4%B8%94%E4%BD%A0%E9%9A%8F%E6%97%B6%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%B8%8E%E5%85%B6%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5%E3%80%82">http://vps688.com/2021/04/28/VPS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/是一个很好的网络托管平台，但对很多其他东西也很有用。简单来说，VPS是一台永远在线的远程服务器，能够运行几乎任何操作系统，并且你随时都可以与其建立连接。</a></p>
<p>最主要的功能就是托管网站，除此之外，我们看看VPS还能在哪些方面发挥所长。</p>
<span id="more"></span>

<p><strong>1. 创建私人同步服务</strong></p>
<p>我们都喜欢<a href="https://link.zhihu.com/?target=https://onedrive.live.com/">OneDrive</a>、<a href="https://link.zhihu.com/?target=https://www.dropbox.com/">Dropbox</a>等云盘服务，它们让数字生活变得更轻松。但有时候，你可能并不想把私人数据存储在第三方服务器上，虽然有一个像<a href="https://link.zhihu.com/?target=https://www.amazon.com/dp/B00G23HHXM/">Transporter</a>这样的私人解决方案，但价格过于昂贵，而且没有云盘那么灵活。</p>
<p><a href="https://link.zhihu.com/?target=https://www.resilio.com/individuals-sync/">Resilio Sync</a>是一种私有云盘服务，允许用户在多个设备之间同步数据 —— 就像<a href="https://link.zhihu.com/?target=https://onedrive.live.com/">OneDrive</a>一样。但是如果没有云组件，系统就缺乏与互联网的永远连接。在VPS上安装Resilio Sync会创建一个与OneDrive功能类似的同步云平台，而不会出现隐私问题。</p>
<p><strong>2. 部署个人云</strong></p>
<p>云计算包含的功能比数据同步更多 —— 协同合作、联系人、日程同样重要。<a href="https://link.zhihu.com/?target=https://owncloud.org/">ownCloud</a>应用程序能够处理数据同步，通过也包含日程、画廊、任务管理、文档编辑等功能。通过在VPS上托管ownCloud，你可以随时随地进行操作，不仅方便快捷、数据安全，而且完全在你的控制之下。</p>
<p><strong>3. 加密网络连接</strong></p>
<p>当你出门在外时，连接到公共无线网络可能非常危险：你永远不知道邻桌的同伴是否在拦截你的数据。<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/VPN">虚拟专用网络</a>会加密设备与服务器之间的连接，使得任何人都无法拦截并获取数据。</p>
<p>作为额外奖励，这种方法还可以让你连接到互联网上被阻止的内容。虽然我们不建议你在工作中使用，但这是一种解开区域锁定的简单方式。</p>
<p><strong>4. 运行业务分析</strong></p>
<p>如果你希望自行托管网站分析，而不是依赖<a href="https://link.zhihu.com/?target=https://analytics.google.com/">Google Analytics</a>等服务，那么<a href="https://link.zhihu.com/?target=https://matomo.org/">Matomo</a>可以实现你的目的。这是一个功能丰富的网络分析工具，包含GA的很多有用功能，例如实时统计、地理定位、访客跟踪、引荐分析等等。</p>
<p>不过，网络分析只是冰山一角，你还可以使用VPS运行业务分析，以处理大规模数据，而无需借助专门的服务器。<a href="https://link.zhihu.com/?target=https://jupyter.org/">Jupyter</a>是一个很好的应用程序示例，允许你使用<a href="https://link.zhihu.com/?target=https://www.python.org/">Python</a>进行交互式计算。</p>
<p><strong>5. 远程项目管理</strong></p>
<p>如果你经营一家小型企业，并且雇用远程工作人员，那么通过网络来管理项目是很有必要的。<a href="https://link.zhihu.com/?target=https://www.projectlibre.com/">ProjectLibre</a>是一个功能丰富的开源项目管理工具，在2013年被评为十大开源项目之一。</p>
<p><strong>6. 开发和测试代码</strong></p>
<p>对于以技术为中心的在线业务，<a href="http://vps688.com/2021/04/28/VPS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/">VPS</a>实际上提供了完美的开发环境。你可以使用VPS的资源运行正在使用的任何开发工具，从而使远程开发变得轻而易举。更重要的是，你可以轻松模拟应用程序的测试环境，以便在上线之前彻底排除错误和故障。</p>
<p><strong>7. 管理物联网设备</strong></p>
<p>你的企业是否使用大量嵌入式传感器和智能设备？VPS可以作为管理这些设备的中心。各个设备收集的数据可以轻松推送到你的服务器，然后通过特定的管理工具进行分析。</p>
<p><strong>8. 运行VoIP服务器</strong></p>
<p>你是否需要为几个快速呼叫设置<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/VoIP">VoIP</a>服务，但又不想为基础设施支付长期费用？借助VPS，你可以自行安装VoIP应用程序，而无需购买任何额外的硬件和服务。</p>
<p><strong>9. 自动化一切</strong></p>
<p>你是否拥有自动化管理的游戏或媒体服务器？在你的VPS上运行机器人，或者设置轻量级聊天客户端，你的用户（或同事）可以据此来保持彼此间的联系。</p>
]]></content>
  </entry>
  <entry>
    <title>VPS的有趣用途</title>
    <url>/vps/d2194e30.html</url>
    <content><![CDATA[<p>一般来说，大家买 vps 都是用来<a href="https://www.vpsjxw.com/tag/build_website/">建网站</a>、搭梯子。但是仅仅只用来建站扶墙的话，简直太浪费 VPS 主机资源了。给大家汇总一下 VPS 都有哪些冷门却很实用的用途。</p>
<span id="more"></span>

<h2 id="1-搭建个人网盘系统"><a href="#1-搭建个人网盘系统" class="headerlink" title="1 搭建个人网盘系统"></a>1 搭建个人网盘系统</h2><p>很多 VPS 商家都提供大硬盘、大流量的 VPS 套餐，很适合用来存放文件。而且也有很多开源的网盘系统可以部署在 VPS 上，部署起来很方便。</p>
<p><strong>Kodexplorer</strong>，国产网盘系统，基于 php 开发，界面和交互是参照 windows 实现的，很炫酷。</p>
<p>参考：<a href="https://zhuanlan.zhihu.com/p/262246425">《VPS教程：搭建个人网盘教程—kodexplorer》</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428184358.png"></p>
<p><strong>Seafile</strong>，是企业级网盘系统，支持 docker 容器部署，不仅包括网盘应有的基础功能，还包括多客户端、文件同步、磁盘挂载等高级特性。扩展性非常好，预留了各种高级配置接口，如集群部署、对接 AD、支持各种存储后端、病毒扫描和 office 文件预览等等</p>
<p>参考：<a href="https://zhuanlan.zhihu.com/p/262266273">《VPS教程：搭建个人网盘教程—Seafile》 </a></p>
<p><strong>H5ai</strong>，轻量级网盘，目录列表系统，功能全面，安装部署很简单，界面很简洁。</p>
<p>参考：<a href="https://zhuanlan.zhihu.com/p/262266780">《VPS教程：搭建个人网盘教程—H5ai》 </a></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428173211.png" alt="开发 VPS 新玩法，汇总 VPS 的 N 种有趣用途"></p>
<h2 id="2-实现离线下载，各大视频站的视频下载"><a href="#2-实现离线下载，各大视频站的视频下载" class="headerlink" title="2 实现离线下载，各大视频站的视频下载"></a>2 实现离线下载，各大视频站的视频下载</h2><p>通过离线下载或各大视频站的视频下载工具将文件下载到 vps 上后，在搭配网盘系统，就可以直接播放、共享、管理文件了，真棒！</p>
<p>Youtube_dl 视频下载工具：<a href="https://www.vpsjxw.com/vps_use/youtube_dl/">Vps 安装 youtube_dl 实现 youtube、优酷、pr*nhub 等视频下载</a></p>
<p>Aria2 离线下载工具：<a href="https://www.vpsjxw.com/vps_use/aria_ariang/">Aria2 搭建自己的离线下载工具—高效、全能、安装快捷</a></p>
<h2 id="3-文件多端同步"><a href="#3-文件多端同步" class="headerlink" title="3 文件多端同步"></a>3 文件多端同步</h2><p>Owncloud，国外完全开源文件存储系统，亮点功能在于可以实现远程 owncloud 网盘系统与 windows、ios、Android、linux 等客户端之间文件实时同步。</p>
<p>教程: <a href="https://www.vpsjxw.com/vps_use/owncloud_intro/">Ubuntu 搭建 owncloud 个人网盘，体验文件多端同步功能</a></p>
<h2 id="4QQ-机器人-微信机器人"><a href="#4QQ-机器人-微信机器人" class="headerlink" title="4QQ 机器人/微信机器人"></a>4QQ 机器人/微信机器人</h2><p>通过机器人，可以扩展 QQ 和微信的聊天方式，实现更强大的功能。如通过 QQ 机器人实现自动群管理、客服、精准推广、Q 群小游戏等等，通过微信机器人可以实现查看撤回消息、自动聊天、消息群发、清除好友等高级功能。</p>
<p>QQ 机器人教程：<a href="https://www.vpsjxw.com/vps_use/kuq_python_demo/">酷 Q 机器人+vps+python 实现功能强大的 QQ 机器人</a></p>
<p>下图是实现的一个 QQ 翻译机器人。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428184129.png" alt="开发 VPS 新玩法，汇总 VPS 的 N 种有趣用途"></p>
<p>微信机器人教程：<a href="https://www.vpsjxw.com/vps_use/python_itchat/">Python+itchat 实现微信机器人，轻松搞定查看撤回消息、消息群发、清除好友高级功能</a></p>
<p>下图是查看消息撤回功能截图<img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428173057.jpg" alt="开发 VPS 新玩法，汇总 VPS 的 N 种有趣用途"></p>
<h2 id="5-挂机赚钱"><a href="#5-挂机赚钱" class="headerlink" title="5 挂机赚钱"></a>5 挂机赚钱</h2><p>如果有闲置或低价搞到的 VPS，可以用来挂机赚钱，回回本，一般每月可以刷个 1-3 刀。</p>
<p>Alexamaster 挂机教程：<a href="https://www.vpsjxw.com/vps_use/guaji-alexamaster/">VPS 挂机赚美刀详细介绍–Alexamaster 操作流程</a></p>
<p>流量宝挂机教程：<a href="https://www.vpsjxw.com/vps_use/vps_make_money_by_liuliangbao/">vps 挂流量宝赚点数–赚钱变现教程</a></p>
<h2 id="6vps-python-实现各种实用小工具"><a href="#6vps-python-实现各种实用小工具" class="headerlink" title="6vps+python 实现各种实用小工具"></a>6vps+python 实现各种实用小工具</h2><p>Python 是一门简单的编程语言，可以很快的实现一些实用的小工具。Vps 可以为这些工具提供稳定的运行环境。</p>
<p>折扣机票监控教程：<a href="https://www.vpsjxw.com/vps_use/vps_python_hangban/">vps+python 实现 24 小时机票监控，折扣机票即时通知</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428184224.png" alt="开发 VPS 新玩法，汇总 VPS 的 N 种有趣用途"></p>
<h2 id="7-自建邮局，搭建个人专属的邮箱系统"><a href="#7-自建邮局，搭建个人专属的邮箱系统" class="headerlink" title="7 自建邮局，搭建个人专属的邮箱系统"></a>7 自建邮局，搭建个人专属的邮箱系统</h2><p>自己搭建邮件服务器可以用来邮件营销（edm），发邮件引流；也可以用做个人邮箱收发邮件，用带自己域名的邮箱号还是比较炫酷的。参考：[<a href="https://www.vpsjxw.com/vps_use/vps_iredmail_install/">自建邮局]vps+iredmail 搭建个人专属邮箱–手把手教程、亲测有效 </a></p>
<h2 id="8-通过-huginn-实现全网数据监控与通知工具"><a href="#8-通过-huginn-实现全网数据监控与通知工具" class="headerlink" title="8 通过 huginn 实现全网数据监控与通知工具"></a>8 通过 huginn 实现全网数据监控与通知工具</h2><p>可以实现跟没有 RSS 的网站定制 RSS 种子；监控知乎、微博、贴吧等平台指定的信息；监控各大购物平台商品信息</p>
<p>参考=&gt;<a href="https://www.vpsjxw.com/vps_use/huginn_intro/">huginn|全网数据监控与通知工具—安装教程、全方位介绍</a></p>
<h2 id="9-通过-leanote-搭建个人专属云笔记服务"><a href="#9-通过-leanote-搭建个人专属云笔记服务" class="headerlink" title="9 通过 leanote 搭建个人专属云笔记服务"></a>9 通过 leanote 搭建个人专属云笔记服务</h2><p>不担心笔记被别人泄露丢失，无广告、无限制、免费使用，支持笔记多端同步及 markdown 语法</p>
<p>leanote：<a href="https://link.zhihu.com/?target=https://www.vpsjxw.com/vps_use/leanote_intro/">leanote 蚂蚁笔记+vps 搭建个人云笔记服务器，支持多端同步和 markdown</a></p>
<h2 id="10TODO-LIST"><a href="#10TODO-LIST" class="headerlink" title="10TODO LIST"></a><strong>10TODO LIST</strong></h2><p>Vps 搭建游戏加速器</p>
<p>Vps 优化访问速度和下载速度</p>
]]></content>
  </entry>
  <entry>
    <title>VPS网络优化各种方法汇总</title>
    <url>/vps/73daf904.html</url>
    <content><![CDATA[<p>大家的大部分VPS都是放在国外的，在国外的服务器上因为受各种因素影响，即使国外的服务器都是百兆共享或者G口到国内下载速度都不是很让人满意，而大部分的朋友们都用的廉价Linux VPS，毕竟方便便宜，这里为大家介绍一下几种网络优化的软件。</p>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194135.jpg" alt="vps"></p>
<h2 id="一、BBR"><a href="#一、BBR" class="headerlink" title="一、BBR"></a>一、BBR</h2><h3 id="秋水脚本"><a href="#秋水脚本" class="headerlink" title="秋水脚本"></a>秋水脚本</h3><p>效果褒贬不一，有人说比锐速好，有人说比锐速差。，本人不予评价。</p>
<p><a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly90ZWRkeXN1bi5jb20vNDg5Lmh0bWw=">秋水逸冰</a>一键安装脚本：</p>
<blockquote>
<p>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+</p>
<p>虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware 等</p>
<p>内存要求：≥128M</p>
<p>日期　　：2017 年 05 月 15 日</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https:&#x2F;&#x2F;github.com&#x2F;teddysun&#x2F;across&#x2F;raw&#x2F;master&#x2F;bbr.sh</span><br><span class="line"></span><br><span class="line">chmod +x bbr.sh</span><br><span class="line"></span><br><span class="line">.&#x2F;bbr.sh</span><br></pre></td></tr></table></figure>



<p>检测是否安装成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr  &#x2F;&#x2F;返回值有 tcp_bbr 模块即说明bbr已启动。</span><br></pre></td></tr></table></figure>



<h3 id="Debian9"><a href="#Debian9" class="headerlink" title="Debian9"></a>Debian9</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;net.core.default_qdisc&#x3D;fq&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line"></span><br><span class="line">echo &quot;net.ipv4.tcp_congestion_control&#x3D;bbr&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"></span><br><span class="line">\#net.ipv4.tcp_available_congestion_control &#x3D; bbr cubic reno 显示这个即为开启</span><br><span class="line"></span><br><span class="line">lsmod | grep bbr</span><br><span class="line"></span><br><span class="line">\#tcp_bbr                20480  14 显示以下即启动成功</span><br></pre></td></tr></table></figure>



<p>Via：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly93d3cubW9lcmF0cy5jb20vYXJjaGl2ZXMvMjk3Lw==">https://www.moerats.com/archives/297/</a></p>
<h2 id="二、锐速"><a href="#二、锐速" class="headerlink" title="二、锐速"></a>二、锐速</h2><p>锐速是老牌子的收费网络加速软件了，其有WIN版本和LINUX版本，在BBR出来之前是最火的网络加速软件（出来之后就倒闭了），以前曾经提供过免费的20M网络加速，现在没了，所以就出现了无数破解版。</p>
<p><a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9tb2VjbHViLm9yZy8yMDE3LzAzLzA4LzE0Lw==">Vicer</a>一键安装脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -qO &#x2F;tmp&#x2F;appex.sh &quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;0oVicero0&#x2F;serverSpeeder_Install&#x2F;master&#x2F;appex.sh&quot; &amp;&amp; bash &#x2F;tmp&#x2F;appex.sh &#39;install&#39;</span><br></pre></td></tr></table></figure>



<p><a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly93d3cuOTF5dW4ub3JnL2FyY2hpdmVzLzY4Mw==">91yun</a>一键安装脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;github.com&#x2F;91yun&#x2F;serverspeeder&#x2F;raw&#x2F;master&#x2F;serverspeeder.sh &amp;&amp; bash serverspeeder.sh</span><br></pre></td></tr></table></figure>



<h2 id="三、BBR魔改版"><a href="#三、BBR魔改版" class="headerlink" title="三、BBR魔改版"></a>三、BBR魔改版</h2><p>前几天刚刚LOC位大佬修改后的BBR（BBR开源的），使其具有侵略性，我试了试，效果很不错，本人在Virmach上的小鸡测试，下载同一文件时，锐速20M/S。BBR魔改接近80M/S。注意：使用魔改版过度可能会封号。</p>
<p><a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9tb2VjbHViLm9yZy8yMDE3LzA2LzI0LzI3OC8=">Vicer</a>一键安装脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -qO &#39;BBR.sh&#39; &#39;https:&#x2F;&#x2F;moeclub.org&#x2F;attachment&#x2F;LinuxShell&#x2F;BBR.sh&#39; &amp;&amp; chmod a+x BBR.sh &amp;&amp; bash BBR.sh -f</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -qO &#39;BBR_POWERED.sh&#39; &#39;https:&#x2F;&#x2F;moeclub.org&#x2F;attachment&#x2F;LinuxShell&#x2F;BBR_POWERED.sh&#39; &amp;&amp; chmod a+x BBR_POWERED.sh &amp;&amp; bash BBR_POWERED.sh</span><br></pre></td></tr></table></figure>



<p><a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly95bHdzLm1lL3RlY2gvNjguaHRtbA==">落雨无声</a>一键安装脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;FunctionClub&#x2F;YankeeBBR&#x2F;master&#x2F;bbr.sh &amp;&amp; bash bbr.sh install</span><br><span class="line"></span><br><span class="line">bash bbr.sh start</span><br></pre></td></tr></table></figure>



<p>以上均只支持<strong>Debian8 / Ubuntu16 +。</strong>如需其他系统，可考虑编译安装</p>
<p>地址：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cDovLzUxLnJ1eW8ubmV0L3AvNDQxNS5odG1s">http://51.ruyo.net/p/4415.html</a></p>
<p>魔改BBR原帖：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cDovL3d3dy5ob3N0bG9jLmNvbS90aHJlYWQtMzcyMjc3LTEtMi5odG1s">http://www.hostloc.com/thread-372277-1-2.html</a>  然我们一起膜拜。</p>
<h2 id="四、Scalable-RE-Scalable-Reactive-一个实验性的单边加速算法"><a href="#四、Scalable-RE-Scalable-Reactive-一个实验性的单边加速算法" class="headerlink" title="四、Scalable-RE (Scalable-Reactive) : 一个实验性的单边加速算法"></a>四、Scalable-RE (Scalable-Reactive) : 一个实验性的单边加速算法</h2><p>鉴于BAT、CNCache等一干大型IT企业压榨国内骨干网的手法愈加精纯，若不牺牲一点公平性，在业务网络上使用所谓的单边加速措施，未免有些不合国情。 既然是用于生产环境，锐速之流的<strong>国产闭源</strong>模块自然是不在考虑内的; 那么G家所开源的拥塞避免算法 (Congestion Avoidance Algorithms，下称CA) ——<em>BBR</em> (<em>Bottleneck Bandwidth and RTT</em>)本应成为兼顾效率与网络公平性的最优解， 然而赵国的网络环境实在险恶。</p>
<p>开发Scalable-RE的大佬就是BBR魔改版的大佬开发的，目前还没有一键安装脚本。有兴趣可以编译安装。7月9日更新，作者更新了安装方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export MOD&#x3D;scalable-reapt-get install make gcc-4.9 -ywget -O .&#x2F;tcp_$MOD.c https:&#x2F;&#x2F;gist.github.com&#x2F;anonymous&#x2F;c7ff1090fe2991b1f39f2fedf566dfc0&#x2F;raw&#x2F;3af99ec379aad9a6f2b32ef463a4bde9e97390db&#x2F;tcp_scalable-re.cecho &quot;obj-m:&#x3D;tcp_$MOD.o&quot; &gt; Makefilemake -C &#x2F;lib&#x2F;modules&#x2F;$(uname -r)&#x2F;build M&#x3D;&#96;pwd&#96; modules CC&#x3D;&#x2F;usr&#x2F;bin&#x2F;gcc-4.9insmod tcp_$MOD.ko min_target&#x3D;22 max_tolerance&#x3D;1sysctl net.ipv4.tcp_congestion_control&#x3D;$MOD</span><br></pre></td></tr></table></figure>



<p>大佬原贴：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cDovL3d3dy5ob3N0bG9jLmNvbS90aHJlYWQtMzc0MTE3LTEtMS5odG1s">http://www.hostloc.com/thread-374117-1-1.html</a></p>
<h2 id="五、其他推荐"><a href="#五、其他推荐" class="headerlink" title="五、其他推荐"></a>五、其他推荐</h2><p>以上使用的比较多的/方便的/高效率的单边加速软件，下面再为大家介绍其他的</p>
<p>1、Net-Speeder （据说使用后速度提升不大，但支持OVZ）</p>
<p>2、FinalSpeed （最快速的方案，他能把共享的几乎所有的带宽全部占用来多倍发包，可能会封号，双边加速，不太方便，安卓/IOS不支持）</p>
<p>3、KCP （也是双边加速多倍发包，但速度并没有FinallSpeed快，比较稳定，安卓支持，IOS目前有一款付费APP支持）</p>
<p>4、UDPspeeder</p>
<h2 id="六、BBRPLUS（更新）"><a href="#六、BBRPLUS（更新）" class="headerlink" title="六、BBRPLUS（更新）"></a>六、BBRPLUS（更新）</h2><p>Centos：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget &quot;https:&#x2F;&#x2F;github.com&#x2F;cx9208&#x2F;bbrplus&#x2F;raw&#x2F;master&#x2F;ok_bbrplus_centos.sh&quot; &amp;&amp; chmod +x ok_bbrplus_centos.sh &amp;&amp; .&#x2F;ok_bbrplus_centos.sh</span><br></pre></td></tr></table></figure>



<p>原帖地址：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly93d3cuaG9zdGxvYy5jb20vdGhyZWFkLTUwNzE2NS0xLTEuaHRtbA==">https://www.hostloc.com/thread-507165-1-1.html</a></p>
<h2 id="七、四合一脚本"><a href="#七、四合一脚本" class="headerlink" title="七、四合一脚本"></a>七、四合一脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget &quot;https:&#x2F;&#x2F;github.com&#x2F;cx9208&#x2F;Linux-NetSpeed&#x2F;raw&#x2F;master&#x2F;tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; .&#x2F;tcp.sh</span><br></pre></td></tr></table></figure>



<p>原帖地址：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly93d3cuaG9zdGxvYy5jb20vdGhyZWFkLTUwODAxNS0xLTEuaHRtbA==">https://www.hostloc.com/thread-508015-1-1.html</a></p>
<p>项目地址：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9naXRodWIuY29tL2N4OTIwOC9MaW51eC1OZXRTcGVlZA==">https://github.com/cx9208/Linux-NetSpeed</a></p>
<h2 id="八、TCPA"><a href="#八、TCPA" class="headerlink" title="八、TCPA"></a>八、TCPA</h2><p>没意思，单列无聊</p>
<p><a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly9saW51eC5xcS5jb20vP3A9MjM4">https://linux.qq.com/?p=238</a></p>
<h2 id="九、BBR2"><a href="#九、BBR2" class="headerlink" title="九、BBR2"></a>九、BBR2</h2><p>Google BBRv2有点意思，还在测试。再看看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -q -O bbr2.sh &quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;yeyingorg&#x2F;bbr2.sh&#x2F;master&#x2F;bbr2.sh&quot; &amp;&amp; chmod +x bbr2.sh &amp;&amp; bash bbr2.sh</span><br></pre></td></tr></table></figure>



<p>地址：<a href="https://www.cokemine.com/wp-content/themes/begin/go.php?url=aHR0cHM6Ly93d3cuaG9zdGxvYy5jb20vdGhyZWFkLTU5OTkxOC0xLTEuaHRtbA==">https://www.hostloc.com/thread-599918-1-1.html</a></p>
<h2 id="收费单边加速软件"><a href="#收费单边加速软件" class="headerlink" title="收费单边加速软件"></a>收费单边加速软件</h2><p>1、TCPEdge（号称国内最快，目测锐速马甲）</p>
<p>2、FlashTCP（号称世界最快，有免费试用）</p>
]]></content>
  </entry>
  <entry>
    <title>VPS配置教程（简单易懂）</title>
    <url>/vps/8af4fe59.html</url>
    <content><![CDATA[<hr>
<p><strong>本文更新于2020.10.15，从注册到搭建都不难，一步步操作就行！</strong></p>
<hr>
<h3 id="搭建VPS教程很简单，整个教程分三步："><a href="#搭建VPS教程很简单，整个教程分三步：" class="headerlink" title="搭建VPS教程很简单，整个教程分三步："></a>搭建VPS教程很简单，整个教程分三步：</h3><p>第一步：购买VPS服务器</p>
<p>第二步：部署VPS服务器</p>
<p>第三步：加速VPS服务器</p>
<hr>
<span id="more"></span>

<h2 id="第一步：购买VPS服务器"><a href="#第一步：购买VPS服务器" class="headerlink" title="第一步：购买VPS服务器"></a>第一步：购买VPS服务器</h2><p>VPS服务器需要选择国外的，首选国际知名的vultr，速度不错、稳定且性价比高，按小时计费，能够随时开通和删除服务器，新服务器即是新ip。</p>
<p><strong>首先是vultr注册地址： <a href="https://www.vultr.com/?ref=8346335">https://www.vultr.com</a></strong><br>（全球有17个数据中心可选，kvm框架。）</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170247.png" alt="2vultr注册.png"></p>
<p>虽然是英文界面，但是现在的浏览器都有网页翻译功能，鼠标点击右键，选择网页翻译即可翻译成中文。</p>
<p>注册并邮件激活账号，充值后即可购买服务器。充值方式是支付宝或paypal，使用paypal有银行卡（包括信用卡）即可。paypal注册地址：<a href="https://www.paypal.com/">https://www.paypal.com</a> （paypal是国际知名的第三方支付服务商，注册一下账号，绑定银行卡即可购买国外商品）</p>
<p>2.5美元/月的服务器配置信息：单核 512M内存 20G SSD硬盘 带宽峰值100M 500G流量/月 (<strong>不推荐，仅提供ipv6 ip，不推荐</strong>)</p>
<p>3.5美元/月的服务器配置信息：单核 512M内存 20G SSD硬盘 带宽峰值100M 500G流量/月 (<strong>推荐</strong>)</p>
<p>5美元/月的服务器配置信息： 单核 1G内存 25G SSD硬盘 带宽峰值100M 1000G流量/月 (<strong>推荐</strong>)</p>
<p>10美元/月的服务器配置信息： 单核 2G内存 40G SSD硬盘 带宽峰值100M 2000G流量/月</p>
<p>20美元/月的服务器配置信息： 2cpu 4G内存 60G SSD硬盘 带宽峰值100M 3000G流量/月</p>
<p>40美元/月的服务器配置信息： 4cpu 8G内存 100G SSD硬盘 带宽峰值100M 4000G流量/月</p>
<p><strong>注意：2.5美元套餐只提供ipv6 ip，一般的电脑用不了，所以建议选择3.5美元及以上的套餐。</strong></p>
<p>vultr实际上是折算成小时来计费的，比如服务器是5美元1个月，那么每小时收费为5/30/24=0.0069美元 会自动从账号中扣费，只要保证账号有钱即可。如果你部署的服务器实测后速度不理想，你可以把它删掉（destroy），重新换个地区的服务器来部署，方便且实用。因为新的服务器就是新的ip，所以当ip被墙时这个方法很有用。当ip被墙时，为了保证新开的服务器ip和原先的ip不一样，先开新服务器，开好后再删除旧服务器即可。在账号的Billing选项里可以看到账户余额。</p>
<p><strong>账号充值如图：</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170241.png" alt="image"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170235.png" alt="image"></p>
<p><strong>开通服务器步骤如图：</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170228.png" alt="image"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170220.png" alt="image"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170215.png" alt="image"></p>
<h3 id="点击图中的CentOS几个字，会弹出centos6，然后选中centos6！-（不要选默认的centos8，脚本不支持centos8！）"><a href="#点击图中的CentOS几个字，会弹出centos6，然后选中centos6！-（不要选默认的centos8，脚本不支持centos8！）" class="headerlink" title="点击图中的CentOS几个字，会弹出centos6，然后选中centos6！ （不要选默认的centos8，脚本不支持centos8！）"></a>点击图中的CentOS几个字，会弹出centos6，然后选中centos6！ （不要选默认的centos8，脚本不支持centos8！）</h3><p><strong>开通服务器时，当出现了ip，不要立马去ping或者用xshell去连接，再等5分钟之后，有个缓冲时间。完成购买后，找到系统的密码记下来，部署服务器时需要用到。vps系统（推荐centos6）的密码获取方法如下图：</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170209.png" alt="image"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170205.png" alt="image"></p>
<p><strong>删掉服务器步骤如下图：</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170159.png" alt="image"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170154.png" alt="image"></p>
<p>一个被墙ip的vps被删掉后，其ip并不会消失，会随机分配给下一个在这个服务器位置新建服务器的人，这就是为什么开新服务器会有一定几率开到被墙的ip。被墙是指在国内地区无法ping通服务器，但在国外是可以ping通的，vultr是面向全球服务，如果这个被墙ip被国外的人开到了，它是可以被正常使用的，半年或1年后这个被墙的ip可能会被国内防火墙解封，那么这就是一个良性循环。</p>
<hr>
<h2 id="第二步：部署VPS服务器"><a href="#第二步：部署VPS服务器" class="headerlink" title="第二步：部署VPS服务器"></a>第二步：部署VPS服务器</h2><p>购买服务器后，需要部署一下。因为你买的是虚拟东西，而且又远在国外，我们需要一个叫Xshell的软件来远程部署。Xshell windows版下载地址：</p>
<p><a href="http://108.61.224.82/lib5/Xshell_setup_wm.exe">国外云盘下载</a></p>
<p>如果你是苹果电脑操作系统，更简单，无需下载xshell，系统可以直接连接VPS。打开<strong>终端</strong>（Terminal），输入ssh root@ip 其中“ip”替换成你VPS的ip, 按回车键，然后复制粘贴密码，按回车键即可登录。粘贴密码时有可能不显示密码，但不影响， <a href="http://www.cnblogs.com/ghj1976/archive/2013/04/19/3030159.html">参考设置方法</a>如果不能用MAC自带的终端连接的话，直接网上搜“MAC连接SSH的软件”，有很多，然后通过软件来连接vps服务器就行，具体操作方式参考windows xshell。</p>
<hr>
<p>部署教程：</p>
<p>下载windows xshell软件并安装后，打开软件</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170147.png" alt="image"></p>
<p>选择文件，新建</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170140.png" alt="image"></p>
<p>随便取个名字，然后把你的服务器ip填上</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170133.png" alt="image"></p>
<p>连接国外ip即服务器时，软件会先后提醒你输入用户名和密码，用户名默认都是root，密码是你购买的服务器系统的密码。</p>
<h3 id="如果xshell连不上服务器，没有弹出让你输入用户名和密码的输入框，表明你开到的ip是一个被墙的ip，遇到这种情况，重新开新的服务器，直到能用xshell连上为止，耐心点哦！如果同一个地区开了多台服务器还是不行的话，可以换其它地区。"><a href="#如果xshell连不上服务器，没有弹出让你输入用户名和密码的输入框，表明你开到的ip是一个被墙的ip，遇到这种情况，重新开新的服务器，直到能用xshell连上为止，耐心点哦！如果同一个地区开了多台服务器还是不行的话，可以换其它地区。" class="headerlink" title="如果xshell连不上服务器，没有弹出让你输入用户名和密码的输入框，表明你开到的ip是一个被墙的ip，遇到这种情况，重新开新的服务器，直到能用xshell连上为止，耐心点哦！如果同一个地区开了多台服务器还是不行的话，可以换其它地区。"></a>如果xshell连不上服务器，没有弹出让你输入用户名和密码的输入框，表明你开到的ip是一个被墙的ip，遇到这种情况，重新开新的服务器，直到能用xshell连上为止，耐心点哦！如果同一个地区开了多台服务器还是不行的话，可以换其它地区。</h3><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170109.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170120.png" alt="image"></p>
<p>连接成功后，会出现如上图所示，之后就可以部署你想要的任何服务了。</p>
<hr>
<h2 id="第三步：一键加速VPS服务器"><a href="#第三步：一键加速VPS服务器" class="headerlink" title="第三步：一键加速VPS服务器"></a>第三步：一键加速VPS服务器</h2><h3 id="配置BBR加速"><a href="#配置BBR加速" class="headerlink" title="配置BBR加速"></a>配置BBR加速</h3><h3 id="什么是BBR："><a href="#什么是BBR：" class="headerlink" title="什么是BBR："></a>什么是BBR：</h3><p>TCP BBR是谷歌出品的TCP拥塞控制算法。BBR目的是要尽量跑满带宽，并且尽量不要有排队的情况。BBR可以起到单边加速TCP连接的效果。</p>
<p>Google提交到Linux主线并发表在ACM queue期刊上的TCP-BBR拥塞控制算法。继承了Google“先在生产环境上部署，再开源和发论文”的研究传统。TCP-BBR已经再YouTube服务器和Google跨数据中心的内部广域网(B4)上部署。由此可见出该算法的前途。</p>
<p>TCP-BBR的目标就是最大化利用网络上瓶颈链路的带宽。一条网络链路就像一条水管，要想最大化利用这条水管，最好的办法就是给这跟水管灌满水。</p>
<p>BBR解决了两个问题：</p>
<ul>
<li>在有一定丢包率的网络链路上充分利用带宽。非常适合高延迟，高带宽的网络链路。</li>
<li>降低网络链路上的buffer占用率，从而降低延迟。非常适合慢速接入网络的用户。</li>
</ul>
<p>Google 在 2016年9月份开源了他们的优化网络拥堵算法BBR，最新版本的 Linux内核(4.9-rc8)中已经集成了该算法。</p>
<p>对于TCP单边加速，并非所有人都很熟悉，不过有另外一个大名鼎鼎的商业软件“锐速”，相信很多人都清楚。特别是对于使用国外服务器或者VPS的人来说，效果更佳。</p>
<p>BBR项目地址：</p>
<blockquote>
<p><a href="https://github.com/google/bbr">https://github.com/google/bbr</a></p>
</blockquote>
<p><strong>升级内核，第一步首先是升级内核到支持BBR的版本：</strong></p>
<p>1.yum更新系统版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>
<p>2.查看系统版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@server ~]# cat &#x2F;etc&#x2F;redhat-release </span><br><span class="line">CentOS Linux release 7.4.1708 (Core) </span><br><span class="line">[root@server ~]# </span><br></pre></td></tr></table></figure>

<p>3.安装elrepo并升级内核：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@server ~]# rpm --import https:&#x2F;&#x2F;www.elrepo.org&#x2F;RPM-GPG-KEY-elrepo.org</span><br><span class="line">[root@server ~]# rpm -Uvh http:&#x2F;&#x2F;www.elrepo.org&#x2F;elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line">[root@server ~]# yum --enablerepo&#x3D;elrepo-kernel install kernel-ml -y</span><br></pre></td></tr></table></figure>

<p>4.更新grub文件并重启系统：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@server ~]# egrep ^menuentry &#x2F;etc&#x2F;grub2.cfg | cut -f 2 -d \&#39;</span><br><span class="line">CentOS Linux 7 Rescue 8619ff5e1306499eac41c02d3b23868e (4.14.14-1.el7.elrepo.x86_64)</span><br><span class="line">CentOS Linux (4.14.14-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-693.11.6.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (0-rescue-c73a5ccf3b8145c3a675b64c4c3ab1d4) 7 (Core)</span><br><span class="line">[root@server ~]# grub2-set-default 0</span><br><span class="line">[root@server ~]# reboot</span><br></pre></td></tr></table></figure>

<p>5.重启完成后查看内核是否已更换为4.14版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@server ~]# uname -r</span><br><span class="line">4.14.14-1.el7.elrepo.x86_64</span><br><span class="line">[root@server ~]#</span><br></pre></td></tr></table></figure>

<p>6.开启bbr：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@server ~]# vim &#x2F;etc&#x2F;sysctl.conf    # 在文件末尾添加如下内容</span><br><span class="line">net.core.default_qdisc &#x3D; fq</span><br><span class="line">net.ipv4.tcp_congestion_control &#x3D; bbr</span><br></pre></td></tr></table></figure>

<p>7.加载系统参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@vultr ~]# sysctl -p</span><br><span class="line">net.ipv6.conf.all.accept_ra &#x3D; 2</span><br><span class="line">net.ipv6.conf.eth0.accept_ra &#x3D; 2</span><br><span class="line">net.core.default_qdisc &#x3D; fq</span><br><span class="line">net.ipv4.tcp_congestion_control &#x3D; bbr</span><br><span class="line">[root@vultr ~]#</span><br></pre></td></tr></table></figure>

<p>如上，输出了我们添加的那两行配置代表正常。</p>
<p>8.确定bbr已经成功开启：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@vultr ~]# sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">net.ipv4.tcp_available_congestion_control &#x3D; bbr cubic reno</span><br><span class="line">[root@vultr ~]# lsmod | grep bbr</span><br><span class="line">tcp_bbr                20480  2 </span><br><span class="line">[root@vultr ~]# </span><br></pre></td></tr></table></figure>
<p>输出内容如上，则表示bbr已经成功开启。</p>
]]></content>
  </entry>
  <entry>
    <title>2020最佳VPS Vultr选购及机房选择教程</title>
    <url>/vps/6d043a47.html</url>
    <content><![CDATA[<p><strong>VULTR</strong> 是一家来自美国的 VPS 商家，官网**<a href="https://www.vultr.com/?ref=8346337-4F">https://www.vultr.com</a>**，其母公司 Choopa 是一家拥有很多自己的数据中心、实力非常雄厚的公司。</p>
<p>可以说是今年最好的国外VPS，经常有非常大的优惠，比如最新的限时活动： <a href="https://www.vultr.com/?ref=8376265-6G">充10赠送$100</a>。</p>
<span id="more"></span>

<p><strong>VPS注册及搭建教程可查看《<a href="http://vps688.com/2021/04/28/VPS%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B%EF%BC%88%E7%AE%80%E5%8D%95%E6%98%93%E6%87%82%EF%BC%89/">VPS搭建教程（简单易懂）</a>》</strong></p>
<p>在服务器领域，VULTR 目前主营便宜 VPS、高性能 VPS、专用 VDS 和独立服务器业务，<strong>共有17个数据中心</strong>并提供了不同配置方案可供大家选择，具体可详见下表的两类Vultr VPS配置方案：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194951.png"></p>
<h3 id="一、便宜VPS方案汇总【Cloud-Compute】"><a href="#一、便宜VPS方案汇总【Cloud-Compute】" class="headerlink" title="一、便宜VPS方案汇总【Cloud Compute】"></a>一、便宜VPS方案汇总【Cloud Compute】</h3><table>
<thead>
<tr>
<th align="left">方案</th>
<th align="left">月价格</th>
<th align="left">小时价格</th>
<th align="left">CPU</th>
<th align="left">内存</th>
<th align="left">硬盘</th>
<th align="left">流量</th>
<th align="left">购买</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">$2.50</td>
<td align="left">$0.004</td>
<td align="left">1核</td>
<td align="left">512 MB</td>
<td align="left">10 GB</td>
<td align="left">500 GB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">$3.50</td>
<td align="left">$0.005</td>
<td align="left">1核</td>
<td align="left">512MB</td>
<td align="left">10GB</td>
<td align="left">500GB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">$5</td>
<td align="left">$0.007</td>
<td align="left">1核</td>
<td align="left">1 GB</td>
<td align="left">25 GB</td>
<td align="left">1TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">4</td>
<td align="left">$10</td>
<td align="left">$0.015</td>
<td align="left">1核</td>
<td align="left">2 GB</td>
<td align="left">55 GB</td>
<td align="left">2TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">5</td>
<td align="left">$20</td>
<td align="left">$0.030</td>
<td align="left">2核</td>
<td align="left">4GB</td>
<td align="left">80GB</td>
<td align="left">3TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
</tbody></table>
<p><strong>PS:上述 $2.5/月 的套餐只提供 IPv6 地址，不提供IPv4，故不建议使用。</strong></p>
<h3 id="二、高性能VPS方案汇总【High-Frequency】"><a href="#二、高性能VPS方案汇总【High-Frequency】" class="headerlink" title="二、高性能VPS方案汇总【High Frequency】"></a>二、高性能VPS方案汇总【High Frequency】</h3><table>
<thead>
<tr>
<th align="left">方案</th>
<th align="left">月价格</th>
<th align="left">小时价格</th>
<th align="left">CPU</th>
<th align="left">内存</th>
<th align="left">硬盘</th>
<th align="left">流量</th>
<th align="left">购买</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">$6</td>
<td align="left">$0.009</td>
<td align="left">1核</td>
<td align="left">1GB</td>
<td align="left">32GB</td>
<td align="left">1TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">$12</td>
<td align="left">$0.018</td>
<td align="left">1核</td>
<td align="left">2GB</td>
<td align="left">64GB</td>
<td align="left">2TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">$24</td>
<td align="left">$0.036</td>
<td align="left">2核</td>
<td align="left">4 GB</td>
<td align="left">128GB</td>
<td align="left">3TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">4</td>
<td align="left">$48</td>
<td align="left">$0.071</td>
<td align="left">3核</td>
<td align="left">8 GB</td>
<td align="left">256GB</td>
<td align="left">4TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
<tr>
<td align="left">5</td>
<td align="left">$96</td>
<td align="left">$0.143</td>
<td align="left">4核</td>
<td align="left">16GB</td>
<td align="left">384GB</td>
<td align="left">5TB/月</td>
<td align="left"><a href="https://www.vultr.com/?ref=8346337-4F">直达链接</a></td>
</tr>
</tbody></table>
<p>更多配置方案可以前往<a href="https://www.vultr.com/?ref=8346337-4F">Vultr官网</a>查看，大家可以依照自己的需求选择合适的方案，初次接触Vultr的网友，<strong>如果注册购买及VPS的搭建，可以参照这篇文章：《<a href="http://vps688.com/2021/04/28/VPS%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B%EF%BC%88%E7%AE%80%E5%8D%95%E6%98%93%E6%87%82%EF%BC%89/">VPS搭建教程（简单易懂）</a>》</strong></p>
<h3 id="三、Vultr机房推荐"><a href="#三、Vultr机房推荐" class="headerlink" title="三、Vultr机房推荐"></a>三、Vultr机房推荐</h3><p>目前 Vultr 提供的机房共计 17 个，覆盖了亚洲、欧洲、美国、澳洲等地区，有日本、韩国、新加坡、美国、法国等国家都有，以下仅为建议，最好还是根据自己的具体情况进行测试选择，找到最适合自己的数据中心， 2020 年 Vultr 最新机房测速地址及测速方法可前往<a href="https://www.jianshu.com/p/19d9fb029f04">Vultr机房测速</a>了解测试</p>
<ul>
<li> 移动用户机房推荐</li>
</ul>
<p>移动用户推荐使用东京（Tokyo）、新加坡（Singapore）、洛杉矶（Los Angeles）机房。</p>
<ul>
<li>联通用户机房推荐</li>
</ul>
<p>联通用户推荐使用东京（Tokyo）、洛杉矶（Los Angeles）、硅谷（Silicon Valley）、西雅图（Seattle）、新加坡（Singapore）机房。</p>
<ul>
<li>电信用户机房推荐</li>
</ul>
<p>电信用户推荐使用洛杉矶（Los Angeles）、硅谷（Silicon Valley）、西雅图（Seattle）机房。</p>
<h3 id="四、Vultr官方测速地址"><a href="#四、Vultr官方测速地址" class="headerlink" title="四、Vultr官方测速地址"></a>四、Vultr官方测速地址</h3><p> 以下是2020 年 Vultr 最新机房测速地址，具体可前往<a href="https://www.jianshu.com/p/19d9fb029f04">Vultr机房测速</a>了解测试</p>
<table>
<thead>
<tr>
<th>地理位置</th>
<th>官方测试服务器地址</th>
<th>文件下载测试地址</th>
</tr>
</thead>
<tbody><tr>
<td>(Asia)Seoul, Korea[韩国 首尔]</td>
<td><a href="http://ping.chinaz.com/sel-kor-ping.vultr.com">sel-kor-ping.vultr.com</a></td>
<td><a href="http://sel-kor-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://sel-kor-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>(Asia)Tokyo, Japan[日本 东京]</td>
<td><a href="http://ping.chinaz.com/hnd-jp-ping.vultr.com">hnd-jp-ping.vultr.com</a></td>
<td><a href="http://hnd-jp-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://hnd-jp-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Singapore[新加坡]</td>
<td><a href="http://ping.chinaz.com/sgp-ping.vultr.com">sgp-ping.vultr.com</a></td>
<td><a href="http://sgp-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://sgp-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>(AU) Sydney, Australia[悉尼]</td>
<td><a href="http://ping.chinaz.com/syd-au-ping.vultr.com">syd-au-ping.vultr.com</a></td>
<td><a href="http://syd-au-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://syd-au-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>(EU) Frankfurt, DE[德国 法兰克福]</td>
<td><a href="http://ping.chinaz.com/fra-de-ping.vultr.com">fra-de-ping.vultr.com</a></td>
<td><a href="http://fra-de-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://fra-de-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>(EU) Amsterdam, NL[荷兰 阿姆斯特丹]</td>
<td><a href="http://ping.chinaz.com/ams-nl-ping.vultr.com">ams-nl-ping.vultr.com</a></td>
<td><a href="http://ams-nl-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://ams-nl-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>(EU) London, UK[英国 伦敦]</td>
<td><a href="http://ping.chinaz.com/lon-gb-ping.vultr.com">lon-gb-ping.vultr.com</a></td>
<td><a href="http://lon-gb-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://lon-gb-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>(EU) Paris, France[法国 巴黎]</td>
<td><a href="http://ping.chinaz.com/par-fr-ping.vultr.com">par-fr-ping.vultr.com</a></td>
<td><a href="http://par-fr-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://par-fr-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Seattle, Washington[美东 华盛顿州 西雅图]</td>
<td><a href="http://ping.chinaz.com/wa-us-ping.vultr.com">wa-us-ping.vultr.com</a></td>
<td><a href="http://wa-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://wa-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Silicon Valley, Ca[美西 加州 硅谷]</td>
<td><a href="http://ping.chinaz.com/sjo-ca-us-ping.vultr.com">sjo-ca-us-ping.vultr.com</a></td>
<td><a href="http://sjo-ca-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://sjo-ca-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Los Angeles, Ca[美西 加州 洛杉矶]</td>
<td><a href="http://ping.chinaz.com/lax-ca-us-ping.vultr.com">lax-ca-us-ping.vultr.com</a></td>
<td><a href="http://lax-ca-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://lax-ca-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Chicago, Illinois[美东 芝加哥]</td>
<td><a href="http://ping.chinaz.com/il-us-ping.vultr.com">il-us-ping.vultr.com</a></td>
<td><a href="http://il-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://il-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Dallas, Texas[美中 德克萨斯州 达拉斯]</td>
<td><a href="http://ping.chinaz.com/tx-us-ping.vultr.com">tx-us-ping.vultr.com</a></td>
<td><a href="http://tx-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://tx-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>New York / New Jersey[美东 新泽西]</td>
<td><a href="http://ping.chinaz.com/nj-us-ping.vultr.com">nj-us-ping.vultr.com</a></td>
<td><a href="http://nj-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://nj-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Atlanta, Georgiaa[美东 乔治亚州 亚特兰大]</td>
<td><a href="http://ping.chinaz.com/ga-us-ping.vultr.com">ga-us-ping.vultr.com</a></td>
<td><a href="http://ga-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://ga-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
<tr>
<td>Miami, Florida[美东 佛罗里达州 迈阿密]</td>
<td><a href="http://ping.chinaz.com/fl-us-ping.vultr.com">fl-us-ping.vultr.com</a></td>
<td><a href="http://fl-us-ping.vultr.com/vultr.com.100MB.bin">100MB</a> <a href="http://fl-us-ping.vultr.com/vultr.com.1000MB.bin">1GB</a></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Windows 和Linux 不同操作系统的VPS有哪些区别,选择哪种？</title>
    <url>/vps/29b55da6.html</url>
    <content><![CDATA[<p>经常有很多用户在选择国外VPS的时候会发现Windows VPS很少，几乎90%的主机商提供的都是Linux的VPS，而且价格普遍比Linux VPS价格高。那么这两种不同操作系统的VPS有哪些区别呢？</p>
<span id="more"></span>

<blockquote>
<p>推荐阅读：<br><a href="https://www.jianshu.com/p/f3a42d4b8cb5">VPS搭建教程（简单易懂. </a></p>
</blockquote>
<h3 id="一、区别："><a href="#一、区别：" class="headerlink" title="一、区别："></a>一、区别：</h3><h4 id="1-Windows-VPS成本高"><a href="#1-Windows-VPS成本高" class="headerlink" title="1.Windows VPS成本高"></a>1.Windows VPS成本高</h4><p>虽然大部分人都是用免费的Windows系统，但是Windows不是开源的，是要收费的，国外版权意识很强，所以使用Window VPS是需要版权的，那么相对应的成本自然就增加了。</p>
<p>Linux作为开源性的操作系统，在使用上是免费的，而Windows系统的使用则需要支付版权费用，也就是说，如果用户选择Windows虚拟主机的话，将额外支付该系统的版权费用。</p>
<h4 id="2-国外-Windows-VPS用户需求少"><a href="#2-国外-Windows-VPS用户需求少" class="headerlink" title="2.国外 Windows VPS用户需求少"></a>2.国外 Windows VPS用户需求少</h4><p>虽然国内有很多的开发者都是在Windows上开发的，但是国外80%的开发人员都是基于 Linux 平台的，所以国外的用户需求几乎都是Linux VPS，因此主机商不可能去追求一小部分用户的需求还增加不少成本。</p>
<h4 id="3-控制台不同"><a href="#3-控制台不同" class="headerlink" title="3.控制台不同"></a><strong>3.控制台不同</strong></h4><p>Linux系统主要适用cPanel控制面板，Windows系统主要适用Plesk控制面板，不同面板的操作风格不同，提供的功能也会有所差异。</p>
<h4 id="4-程序代码不同"><a href="#4-程序代码不同" class="headerlink" title="4.程序代码不同"></a>4.程序代码不同</h4><p>Linux虚拟主机与Windows虚拟主机突出的不同点就是，Linux支持的语言环境是PHP，而Windows所运行的是ASP。</p>
<p>不同程序代码拥有不同的兼容性，也造成了不同应用程式在虚拟主机上的不同体现，例如受广大站长喜爱的CMS系统WordPress，在Linux上运行就更合适。</p>
<h4 id="5-稳定性不同"><a href="#5-稳定性不同" class="headerlink" title="5.稳定性不同"></a>5.稳定性不同</h4><p>使用Linux系统的用户很少会遇到系统崩溃的情况，甚至在运行多年也不会出现重大事故。</p>
<p>即使出现什么安全漏洞，作为开源系统的Linux，也会有人迅速修复，稳定性比Windows相对要高一些。</p>
<blockquote>
<p>推荐阅读</p>
<p><a href="https://zhuanlan.zhihu.com/p/98645292">《VPS有哪些用途？》</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/262044507">《VPS的有趣用途》</a></p>
</blockquote>
<h3 id="二、选择-Windows-VPS还是Linux-VPS？"><a href="#二、选择-Windows-VPS还是Linux-VPS？" class="headerlink" title="二、选择 Windows VPS还是Linux VPS？"></a>二、选择 Windows VPS还是Linux VPS？</h3><h4 id="Microsoft-Windows"><a href="#Microsoft-Windows" class="headerlink" title="Microsoft Windows"></a>Microsoft Windows</h4><p>如果您使用的是C#、ASP.net、ASP、MSSQL、MS ACCESS、Visual Basic其中任何一种语言或框架，那么Windows是您的最佳选择，不过现在.NET Core已经支持跨平台了，.NET 程序也能在Linux平台运行了。而如果你的程序是Python、PHP、Java等等都是可以运行在Linux平台的，并且Linux作为服务器的性能绝对是比Windows要出色的。</p>
<p>如今Windows系统是一个家喻户晓的操作系统，因此对于许多人来说，它与Linux相比最大的优点之一就是它学习曲线非常低，可以很容易配置。</p>
<p>虽然Windows在桌面上很熟悉也很受欢迎，但在主机方面，Windows主机占有率却比较少。如果需要运行的站点是用ASP、ASP.net编码的，或者需要MSSQL数据库来满足网站托管的需求，现在Linux也可以执行相同的任务，并且可以以略低的系统资源需求完成这些任务。而Windows每月还需要支付一笔版权费，所以运行Windows服务器的成本是比Linux高的。</p>
<p><strong>总结：</strong></p>
<ol>
<li><p>Windows为用户提供了一个易于使用的界面。</p>
</li>
<li><p>建议Windows作为OS的新手，因为它不如Linux复杂。</p>
</li>
<li><p>Windows比Linux提供更全面的功能集。</p>
</li>
<li><p>Windows使用反斜杠表示文件夹的分隔，而Linux使用正斜杠。</p>
</li>
<li><p>Windows提供完整的硬件支持，而Linux提供部分硬件支持。</p>
</li>
<li><p>Windows需要防病毒软件。</p>
</li>
<li><p>Windows已支付了支持以及在线社区论坛，您可以在其中获得免费支持。</p>
</li>
<li><p>Windows在游戏玩家和小型公司中更受欢迎，而Linux在大型公司中使用更多。</p>
</li>
</ol>
<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>如果您使用的是MySQL、Python、PHP、Ruby、Perl其中任何一种语言或框架，那么Linux是您的最佳选择。所以如果你是一个Python、PHP、Java的程序员还是用Linux VPS吧，性能高还便宜，唯一的区别就是你没有操作习惯。</p>
<p>Linux是用汇编语言C制成的，使用BASH命令行。Linux是一种开放源代码操作系统，自1990年代中期以来一直可用，它为从家用电器到智能手机的多种设备提供动力。Linux由各种不同的发行版组成，例如Ubuntu，CentOS和Linux Mint。每个发行版在家用PC的台式机和整个用户环境中都有其自己的特色，但是，如果将Linux用于服务器，则主要使用终端或外壳接口。像所有操作系统一样，Linux有许多不同的命令，可以从外壳或终端接口内部使用。</p>
<p><strong>总结：</strong></p>
<ol>
<li><p>Linux使用命令行，而Windows不使用（技术上Windows确实具有命令行，但是它需要额外的步骤来访问它. 。</p>
</li>
<li><p>Linux有免费许可证，而Windows的许可证是有限许可证。</p>
</li>
<li><p>Linux比Windows快一点。</p>
</li>
<li><p>Linux的安全性是强项。Linux非常稳定且难以破解。该操作系统不会获取用户信息，这有助于使其更加安全。Windows安全性虽然不够强大，但是绝对可以肯定的是，由于安全部门取得了进步，Windows安全性得到了最大的提高。</p>
</li>
<li><p>Linux提供了许多不同的发行版，而Windows没有。</p>
</li>
<li><p>Linux允许您随时进行更新，而Windows则不然。</p>
</li>
<li><p>Linux支持几乎所有平台，而Windows在此领域受到的限制更大。</p>
</li>
<li><p>众所周知，Linux比Windows提供更多的自定义选项和灵活性。</p>
</li>
<li><p>Linux是开源的，而Windows不是。</p>
</li>
</ol>
<p>总的来说 ，两个系统没有好坏之分，在选择时更多的还是看使用的环境和应用的功能，可以根据自己的网站情况进行合理的选择。</p>
<p>如果需要国外 Windows VPS，可以查看<a href="https://zhuanlan.zhihu.com/p/265501426">便宜靠谱的国外Windows VPS 推荐</a>。</p>
]]></content>
  </entry>
  <entry>
    <title>linux常用命令.</title>
    <url>/vps/8df92976.html</url>
    <content><![CDATA[<blockquote>
<p>linux常用命令备忘录，记得收藏~</p>
</blockquote>
<span id="more"></span>

<h3 id="1、cd命令"><a href="#1、cd命令" class="headerlink" title="1、cd命令"></a>1、cd命令</h3><p>这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;root&#x2F;Docements # 切换到目录&#x2F;root&#x2F;Docements</span><br><span class="line">cd .&#x2F;path          # 切换到当前目录下的path目录中，“.”表示当前目录  </span><br><span class="line">cd ..&#x2F;path         # 切换到上层目录中的path目录中，“..”表示上一层目录</span><br></pre></td></tr></table></figure>

<h3 id="2、ls命令"><a href="#2、ls命令" class="headerlink" title="2、ls命令"></a>2、ls命令</h3><p>这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，下面就列出一些我常用的参数吧，如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-l ：列出长数据串，包含文件的属性与权限数据等</span><br><span class="line">-a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）</span><br><span class="line">-d ：仅列出目录本身，而不是列出目录的文件数据</span><br><span class="line">-h ：将文件容量以较易读的方式（GB，kB等）列出来</span><br><span class="line">-R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来</span><br></pre></td></tr></table></figure>

<p><strong>注：这些参数也可以组合使用</strong>，下面举两个例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls -l #以长数据串的形式列出当前目录下的数据文件和目录</span><br><span class="line">ls -lR #以长数据串的形式列出当前目录下的所有文件</span><br></pre></td></tr></table></figure>

<h3 id="3、grep命令"><a href="#3、grep命令" class="headerlink" title="3、grep命令"></a>3、grep命令</h3><p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep [-acinv] [--color&#x3D;auto] &#39;查找字符串&#39; filename</span><br></pre></td></tr></table></figure>



<p>它的常用参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-a ：将binary文件以text文件的方式查找数据</span><br><span class="line">-c ：计算找到‘查找字符串’的次数</span><br><span class="line">-i ：忽略大小写的区别，即把大小写视为相同</span><br><span class="line">-v ：反向选择，即显示出没有‘查找字符串’内容的那一行</span><br><span class="line"># 例如：</span><br><span class="line"># 取出文件&#x2F;etc&#x2F;man.config中包含MANPATH的行，并把找到的关键字加上颜色</span><br><span class="line">grep --color&#x3D;auto &#39;MANPATH&#39; &#x2F;etc&#x2F;man.config</span><br><span class="line"># 把ls -l的输出中包含字母file（不区分大小写）的内容输出</span><br><span class="line">ls -l | grep -i file</span><br></pre></td></tr></table></figure>

<h3 id="4、find命令"><a href="#4、find命令" class="headerlink" title="4、find命令"></a>4、find命令</h3><p>find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find [PATH] [option] [action]</span><br><span class="line"></span><br><span class="line"># 与时间有关的参数：</span><br><span class="line">-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；</span><br><span class="line">-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；</span><br><span class="line">-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；</span><br><span class="line">-newer file : 列出比file还要新的文件名</span><br><span class="line"># 例如：</span><br><span class="line">find &#x2F;root -mtime 0 # 在当前目录下查找今天之内有改动的文件</span><br><span class="line"></span><br><span class="line"># 与用户或用户组名有关的参数：</span><br><span class="line">-user name : 列出文件所有者为name的文件</span><br><span class="line">-group name : 列出文件所属用户组为name的文件</span><br><span class="line">-uid n : 列出文件所有者为用户ID为n的文件</span><br><span class="line">-gid n : 列出文件所属用户组为用户组ID为n的文件</span><br><span class="line"># 例如：</span><br><span class="line">find &#x2F;home&#x2F;ljianhui -user ljianhui # 在目录&#x2F;home&#x2F;ljianhui中找出所有者为ljianhui的文件</span><br><span class="line"></span><br><span class="line"># 与文件权限及名称有关的参数：</span><br><span class="line">-name filename ：找出文件名为filename的文件</span><br><span class="line">-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件</span><br><span class="line">-tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、</span><br><span class="line">             目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；</span><br><span class="line">-perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；</span><br><span class="line">-perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示</span><br><span class="line">-perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示</span><br><span class="line"># 例如：</span><br><span class="line">find &#x2F; -name passwd # 查找文件名为passwd的文件</span><br><span class="line">find . -perm 0755 # 查找当前目录中文件权限的0755的文件</span><br><span class="line">find . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte</span><br></pre></td></tr></table></figure>

<h3 id="5、cp命令"><a href="#5、cp命令" class="headerlink" title="5、cp命令"></a>5、cp命令</h3><p>该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下， 它的常用参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-a ：将文件的特性一起复制</span><br><span class="line">-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份</span><br><span class="line">-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行</span><br><span class="line">-r ：递归持续复制，用于目录的复制行为</span><br><span class="line">-u ：目标文件与源文件有差异时才会复制</span><br></pre></td></tr></table></figure>

<p>例如 ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2</span><br><span class="line">cp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中</span><br></pre></td></tr></table></figure>

<h3 id="6、mv命令"><a href="#6、mv命令" class="headerlink" title="6、mv命令"></a>6、mv命令</h3><p>该命令用于移动文件、目录或更名，move之意，它的常用参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖-i ：若目标文件已经存在，就会询问是否覆盖-u ：若目标文件已经存在，且比目标文件新，才会更新</span><br></pre></td></tr></table></figure>

<p><strong>注：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。</strong></p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv file1 file2 file3 dir # 把文件file1、file2、file3移动到目录dir中mv file1 file2 # 把文件file1重命名为file2</span><br></pre></td></tr></table></figure>

<h3 id="7、rm命令"><a href="#7、rm命令" class="headerlink" title="7、rm命令"></a>7、rm命令</h3><p>该命令用于删除文件或目录，remove之间，它的常用参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-f ：就是force的意思，忽略不存在的文件，不会出现警告消息-i ：互动模式，在删除前会询问用户是否操作-r ：递归删除，最常用于目录删除，它是一个非常危险的参数</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -i file # 删除文件file，在删除之前会询问是否进行该操作rm -fr dir # 强制删除目录dir中的所有文件</span><br></pre></td></tr></table></figure>

<h3 id="8、ps命令"><a href="#8、ps命令" class="headerlink" title="8、ps命令"></a>8、ps命令</h3><p>该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-A ：所有的进程均显示出来-a ：不与terminal有关的所有进程-u ：有效用户的相关进程-x ：一般与a参数一起使用，可列出较完整的信息-l ：较长，较详细地将PID的信息列出</span><br></pre></td></tr></table></figure>

<p>其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps aux # 查看系统所有的进程数据ps ax # 查看不与terminal有关的所有进程ps -lA # 查看系统所有的进程数据ps axjf # 查看连同一部分进程树状态</span><br></pre></td></tr></table></figure>

<h3 id="9、kill命令"><a href="#9、kill命令" class="headerlink" title="9、kill命令"></a>9、kill命令</h3><p>该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill -signal PID</span><br></pre></td></tr></table></figure>

<p>signal的常用参数如下：</p>
<p>注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1：SIGHUP，启动被终止的进程2：SIGINT，相当于输入ctrl+c，中断一个程序的进行9：SIGKILL，强制中断一个进程的进行15：SIGTERM，以正常的结束进程方式来终止进程17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 以正常的结束进程方式来终于第一个后台工作，可用jobs命令查看后台中的第一个工作进程kill -SIGTERM %1 # 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进行筛选获得kill -SIGHUP PID</span><br></pre></td></tr></table></figure>

<h3 id="10、killall命令"><a href="#10、killall命令" class="headerlink" title="10、killall命令"></a>10、killall命令</h3><p>该命令用于向一个命令启动的进程发送一个信号，它的一般语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">killall [-iIe] [command name]</span><br></pre></td></tr></table></figure>

<p>它的参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-i ：交互式的意思，若需要删除时，会询问用户-e ：表示后面接的command name要一致，但command name不能超过15个字符-I ：命令名称忽略大小写# 例如：killall -SIGHUP syslogd # 重新启动syslogd</span><br></pre></td></tr></table></figure>

<h3 id="11、file命令"><a href="#11、file命令" class="headerlink" title="11、file命令"></a>11、file命令</h3><p>该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file filename#例如：file .&#x2F;test</span><br></pre></td></tr></table></figure>

<h3 id="12、tar命令"><a href="#12、tar命令" class="headerlink" title="12、tar命令"></a>12、tar命令</h3><p>该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-c ：新建打包文件-t ：查看打包文件的内容含有哪些文件名-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中-j ：通过bzip2的支持进行压缩&#x2F;解压缩-z ：通过gzip的支持进行压缩&#x2F;解压缩-v ：在压缩&#x2F;解压缩过程中，将正在处理的文件名显示出来-f filename ：filename为要处理的文件-C dir ：指定压缩&#x2F;解压缩的目录dir</span><br></pre></td></tr></table></figure>

<p>上面的解说可以已经让你晕过去了，但是通常我们只需要记住下面三条命令即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称查询：tar -jtv -f filename.tar.bz2解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</span><br></pre></td></tr></table></figure>

<p><strong>注：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2</strong></p>
<h3 id="13、cat命令"><a href="#13、cat命令" class="headerlink" title="13、cat命令"></a>13、cat命令</h3><p>该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat text | less # 查看text文件中的内容# 注：这条命令也可以使用less text来代替</span><br></pre></td></tr></table></figure>

<h3 id="14、chgrp命令"><a href="#14、chgrp命令" class="headerlink" title="14、chgrp命令"></a>14、chgrp命令</h3><p>该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chgrp [-R] dirname&#x2F;filename-R ：进行递归的持续对所有文件和子目录更改# 例如：chgrp users -R .&#x2F;dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users</span><br></pre></td></tr></table></figure>

<h3 id="15、chown命令"><a href="#15、chown命令" class="headerlink" title="15、chown命令"></a>15、chown命令</h3><p>该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。</p>
<h3 id="16、chmod命令"><a href="#16、chmod命令" class="headerlink" title="16、chmod命令"></a>16、chmod命令</h3><p>该命令用于改变文件的权限，一般的用法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod [-R] xyz 文件或目录-R：进行递归的持续更改，即连同子目录下的所有文件都会更改</span><br></pre></td></tr></table></figure>

<p>同时，chmod还可以使用u（user）、g（group）、o（other）、a（all）和+（加入）、-（删除）、=（设置）跟rwx搭配来对文件的权限进行更改。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 例如：chmod 0755 file # 把file的文件权限改变为-rxwr-xr-xchmod g+w file # 向file的文件权限中加入用户组可写权限</span><br></pre></td></tr></table></figure>

<h3 id="18、vim命令"><a href="#18、vim命令" class="headerlink" title="18、vim命令"></a>18、vim命令</h3><p>该命令主要用于文本编辑，它接一个或多个文件名作为参数，如果文件存在就打开，如果文件不存在就以该文件名创建一个文件。vim是一个非常好用的文本编辑器，它里面有很多非常好用的命令，在这里不再多说。可以参考这篇文章： <a href="https://www.cnblogs.com/smartjourneys/articles/9151832.html">vim常用操作</a></p>
<h3 id="19、gcc命令"><a href="#19、gcc命令" class="headerlink" title="19、gcc命令"></a>19、gcc命令</h3><p>对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-o ：output之意，用于指定生成一个可执行文件的文件名-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序-I ：增加编译时搜索头文件的路径-L ：增加编译时搜索静态连接库的路径-S ：把源文件生成汇编代码文件-lm：表示标准库的目录中名为libm.a的函数库-lpthread ：连接NPTL实现的线程库-std&#x3D; ：用于指定把使用的C语言的版本# 例如：# 把源文件test.c按照c99标准编译成可执行程序testgcc -o test test.c -lm -std&#x3D;c99#把源文件test.c转换为相应的汇编程序源文件test.sgcc -S test.c</span><br></pre></td></tr></table></figure>



<p>-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序 </p>
<p>-I ：增加编译时搜索头文件的路径 </p>
<p>-L ：增加编译时搜索静态连接库的路径 </p>
<p>-S ：把源文件生成汇编代码文件 </p>
<p>-lm：表示标准库的目录中名为libm.a的函数库 -lpthread ：连接NPTL实现的线程库 </p>
<p>-std= ：用于指定把使用的C语言的版本  # 例如： # 把源文件test.c按照c99标准编译成可执行程序test gcc -o test test.c -lm -std=c99 #把源文件test.c转换为相应的汇编程序源文件test.s gcc -S test.c </p>
<h3 id="20、time命令"><a href="#20、time命令" class="headerlink" title="20、time命令"></a>20、time命令</h3><p>该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">time .&#x2F;processtime ps aux</span><br></pre></td></tr></table></figure>

<p>在程序或命令运行结束后，在最后输出了三个时间，它们分别是：</p>
<ul>
<li><p>user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；</p>
</li>
<li><p>system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；</p>
</li>
<li><p>real：实际时间，从command命令行开始执行到运行终止的消逝时间；</p>
</li>
</ul>
<p><strong>注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。</strong>实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。</p>
]]></content>
  </entry>
  <entry>
    <title>windows vps有哪些？</title>
    <url>/vps/bd1fb9ac.html</url>
    <content><![CDATA[<p>我们都知道Windows系统国外VPS很少有支持的，有些价格也比较贵，所以针对这种情况，考虑到知名度、商家口碑、售后体验、价格、网络条件等方面，通过对大量海外VPS进行对比，筛选了一些便宜好用靠谱的Windows VPS</p>
<span id="more"></span>

<blockquote>
<p>推荐阅读：<br><a href="https://www.jianshu.com/p/f3a42d4b8cb5">VPS搭建教程（简单易懂）</a></p>
</blockquote>
<h2 id="hostwinds-com-，速度快，推荐指数：★★★★"><a href="#hostwinds-com-，速度快，推荐指数：★★★★" class="headerlink" title="**hostwinds.com**，速度快，推荐指数：★★★★"></a>**<a href="https://www.hostwinds.com/7600.html">hostwinds.com</a>**，速度快，推荐指数：★★★★</h2><p>成立于2010年的美国商家，他们家规模做得很大而且特别照顾中国用户，很多国外主机商都不支持支付宝付款方式，但是他们家是支持支付宝付款，不仅如此，他们除了拥有独享IP外，只要是国内用户还能够自己在后台控制面板操作免费换IP，另外他们家VPS特点主要是速度快，拥有1000Mbps带宽，而且价格比较便宜，除此之外他们家服务做得非常好，24小时都有客服在线，国外口碑非常好，<strong>以Unmanaged业务的价格给你提供FULLY MANAGED的产品服务</strong>。</p>
<p> Hostwinds 支持的数据中心有：西雅图、达拉斯、阿姆斯特丹，所以需要美国VPS和欧洲VPS的用户都比较适合，在速度上西雅图节点是最快的。</p>
<h2 id="www-vultr-com（个人最推荐，且现在活动送100-）-，16个可选机房，-推荐指数★★★★★"><a href="#www-vultr-com（个人最推荐，且现在活动送100-）-，16个可选机房，-推荐指数★★★★★" class="headerlink" title="www.vultr.com（个人最推荐，且现在活动送100$） ，16个可选机房， 推荐指数★★★★★"></a><strong><a href="https://www.vultr.com/?ref=8346337-4F">www.vultr.com（个人最推荐，且现在活动送100$）</a></strong> ，16个可选机房， 推荐指数★★★★★</h2><p>choopa旗下VPS品牌，目前在全球有<strong>16个机房</strong>（包括日本、新加坡、美国等），基于KVM虚拟，1000M端口，纯SSD硬盘，免费50G备份，后台允许购买Windows系统的VPS，免费50G备份空间，支持支付宝、PayPal等。</p>
<p><strong>活动直达：<a href="https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a></strong></p>
<h2 id="www-bacloud-com-，推荐指数：★★★★（性能强悍，还有不限流量系列）"><a href="#www-bacloud-com-，推荐指数：★★★★（性能强悍，还有不限流量系列）" class="headerlink" title="**www.bacloud.com**，推荐指数：★★★★（性能强悍，还有不限流量系列）"></a>**<a href="https://www.bacloud.com/aff.php?aff=269">www.bacloud.com</a>**，推荐指数：★★★★（性能强悍，还有不限流量系列）</h2><p>立陶宛商家，自己家的独立机房，主要业务是独立服务器和VPS，其中VPS有立陶宛和美国芝加哥机房，有Windows系统；如果你需要资源资源不超卖、性能强悍的高质量VPS，可以考虑bacloud。已经接入PayPal、支付宝、信用卡等付款！</p>
<h2 id="www-raksmart-com，推荐指数：★★★★★"><a href="#www-raksmart-com，推荐指数：★★★★★" class="headerlink" title="www.raksmart.com，推荐指数：★★★★★"></a><a href="https://billing.raksmart.com/whmcs/aff.php?aff=2711">www.raksmart.com</a>，推荐指数：★★★★★</h2><p>美籍华人公司，支持中英双语，支持支付宝，<strong>售后客服态度相当友好</strong>；从2000年运作至今，主要运作主机业务，包括：VPS、独立服务器出租（<strong>高防、大流量、站群等</strong>）、硬件托管；数据中心有美国洛杉矶，中国香港；线路有BGP+CN2，国内访问速度非常快，支持支付宝付款，支持中英双语交流。</p>
<h2 id="www-hosteons-com，推荐指数：★★★"><a href="#www-hosteons-com，推荐指数：★★★" class="headerlink" title="www.hosteons.com，推荐指数：★★★"></a><a href="https://my.hosteons.com/aff.php?aff=1060">www.hosteons.com</a>，推荐指数：★★★</h2><p>主要运作美国洛杉矶数据中心的VPS，1Gbps带宽，每个VPS给100Mbps带宽并且不限制流量，solusvm面板管理，支持Windows server 2003、2008、2012、2016，其中2008支持中文版；免费提供20Gbps防御，额外购买IP每个仅需1美元！支持<strong>支付宝</strong></p>
<h2 id="www-hostdare-com，推荐指数：★★★"><a href="#www-hostdare-com，推荐指数：★★★" class="headerlink" title="www.hostdare.com，推荐指数：★★★"></a><a href="https://manage.hostdare.com/aff.php?aff=2083">www.hostdare.com</a>，推荐指数：★★★</h2><p>成立于2016年的国外商家，主要运作美国西海岸的主机业务，特别是亚洲优化线路，包括：虚拟主机、VPS、服务器等，支持“<strong>支付宝</strong>、PayPal、微信 等”付款，<strong>CN2 GIA高端网络，</strong>对国内效果友好，速度非常快！提供Windows系统</p>
<h2 id="sugarhosts-com-，-推荐指数：★★★"><a href="#sugarhosts-com-，-推荐指数：★★★" class="headerlink" title="sugarhosts.com ， 推荐指数：★★★"></a><a href="https://www.sugarhosts.com/members/aff.php?aff=3255">sugarhosts.com</a> ， 推荐指数：★★★</h2><p>sugarhosts，英国知名主机商家，也提供VPS（机械盘和SSD，基于XEN，也有windows），洛杉矶MC机房（高速网络，国内访问快），也有中国香港机房的VPS.网站<strong>支持中文</strong>，方便！</p>
]]></content>
  </entry>
  <entry>
    <title>一键安装脚本搭建LNMPLAMP环境</title>
    <url>/vps/b8dc433f.html</url>
    <content><![CDATA[<p>在 VPS 上部署 WEB 应用时经常会用到 LAMP/LNMP 环境，即 linux+apache/nginx+mysql+php 集成环境。</p>
<span id="more"></span>

<p>比如常用的 wordpress 博客系统、discuz 论坛、kodexplorer 网盘程序等等都是基于 PHP+mysql 环境运行的。</p>
<p>还有其他数不胜数的 web 应用都是依赖于此，可以说搭建 lamp/lnmp 环境是玩 linux 的基本操作和必备技能。</p>
<p>有些 vps 主机是支持一键安装 LNMP/LAMP 的，如<a href="https://www.vultr.com/?ref=8346337-4F">vultr</a>。</p>
<p>但更多主机是不支持一键安装 LNMP/LAMP，这就需要我们手动安装了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194725.jpg" alt="服务器运维必备技能—一键安装脚本搭建 LNMP/LAMP 环境"></p>
<h2 id="三种-LNMP-LAMP-部署方法"><a href="#三种-LNMP-LAMP-部署方法" class="headerlink" title="三种 LNMP/LAMP 部署方法"></a>三种 LNMP/LAMP 部署方法</h2><p>1 通过 linux 自带的包管理器（apt、yum）下载 apache+mysql+php 安装包，自动安装配置。这种方法比较简单，只要输入几行命令。但是难以指定各软件的版本，而且软件的版本也会随系统升级而升级。</p>
<p>2 手动下载 apache+mysql+php 安装包，手动编译安装配置。虽然麻烦，但是自定义程度高，而且稳定。</p>
<p>3 采用 lamp/lnmp 一键安装脚本安装。可以指定各软件的版本号。原理是通过脚本下载安装包，再编译安装。主要优点就是快，这也是今天我主要介绍的安装方法。</p>
<p>一键安装脚本，直接就用军哥的 LNMP。LNMP 一键安装脚本在圈内名声很大很权威，很多人生产环境都是用 LNMP 脚本搭建的。支持 CentOS/RHEL/Fedora/Debian/Ubuntu 等主流 linux 发行版。建议最小安装内存 128M，最小磁盘大小 10G，建站推荐<a href="https://bandwagonhost.com/aff.php?aff=55740">搬瓦工</a>作为首选主机。脚本从 2009 年发布以来，已经迭代了 15 个版本了，最近一个版本 V1.5 发布于 2018 年 6 月 1 日。个人觉得 LNMP 脚本是很稳定、健壮、扩展性良好的，强烈推荐。</p>
<h2 id="一键安装脚本使用步骤"><a href="#一键安装脚本使用步骤" class="headerlink" title="一键安装脚本使用步骤"></a>一键安装脚本使用步骤</h2><p>一键安装 lnmp 环境</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;soft.vpser.net&#x2F;lnmp&#x2F;lnmp1.5.tar.gz -cO lnmp1.5.tar.gz &amp;&amp; tar zxf lnmp1.5.tar.gz &amp;&amp; cd lnmp1.5 &amp;&amp; .&#x2F;install.sh lnmp</span><br></pre></td></tr></table></figure>



<p>一键安装 lamp 环境</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;soft.vpser.net&#x2F;lnmp&#x2F;lnmp1.5.tar.gz -cO lnmp1.5.tar.gz &amp;&amp; tar zxf lnmp1.5.tar.gz &amp;&amp; cd lnmp1.5 &amp;&amp; .&#x2F;install.sh lamp</span><br></pre></td></tr></table></figure>



<h4 id="以-lamp-为例"><a href="#以-lamp-为例" class="headerlink" title="以 lamp 为例"></a>以 lamp 为例</h4><p>执行安装命令后，会让你选择安装 mysql 版本、mysql 默认密码、php 版本、apache 版本等，如果不确定怎么选择，可以选默认项。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194756.png" alt="服务器运维必备技能—一键安装脚本搭建 LNMP/LAMP 环境"></p>
<p>测试主机的系统是 ubuntu14.04，配置是 1 核 512M 内存 10G 磁盘。一共耗时 37 分钟安装完成，成功截图如下。整个安装过程很顺利没出现问题和卡顿。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194808.png" alt="服务器运维必备技能—一键安装脚本搭建 LNMP/LAMP 环境"></p>
<p>其中 apache 和 mysql 是由 lnmp 命令统一管理的。通过<code> lnmp start|stop|reload|restart|kill|status</code> 管理 apache 和 mysql 状态。</p>
<p>另外，还提供 lnmp 离线一键安装包。离线安装包里面包含了 apache、mysql、php 等所需的软件包，支持主机在不联网的情况下安装 LNMP/LAMP 环境。</p>
]]></content>
  </entry>
  <entry>
    <title>为什么有些VPS的CPU非常差？</title>
    <url>/vps/2f4a1a73.html</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428215012.jpg" alt="vps"></p>
<span id="more"></span>



<h2 id="一、VPS的CPU是共享的"><a href="#一、VPS的CPU是共享的" class="headerlink" title="一、VPS的CPU是共享的"></a>一、VPS的CPU是共享的</h2><p>我们要明确一点，VPS的CPU都是共享的，每一个人都有权利使用。</p>
<p>一台服务器开的VPS数目多，在高峰期的时候用的人多，那么分配到你的任何的资源就少，那自然会出现编译程序等死慢死慢的情况。所以，价格是门槛啊！</p>
<h2 id="二、真相，core不是核"><a href="#二、真相，core不是核" class="headerlink" title="二、真相，core不是核"></a>二、真相，core不是核</h2><p>VPS是虚拟环境下大家共享资源，硬件的CPU已经固定死了，不能改变的；</p>
<p>但是，VPS显示给你看的<strong>“core”</strong>是个可变参数，商家可以改的。core可以是线程，甚至还可以虚拟到更差的地步… </p>
<p>经常看见e3vx写8core，对吧，你应该遇见过… 你也应该知道一台e3的VPS母鸡开几十个VPS，每个VPS都写的1“core”对吧？我这里说的是VPS，不是VDS，不要抬杠说VPS是给独立CPU的核！</p>
<h2 id="三、CPU是可以限频的"><a href="#三、CPU是可以限频的" class="headerlink" title="三、CPU是可以限频的"></a>三、CPU是可以限频的</h2><p>你或许有时候买的VPS给了四五“core”，但是，跑起来甚至效果还不如别人一二“core”；一个脚本跑来发现CPU被限制了XHz，有这种情况吧？</p>
<h2 id="四、为什么有些便宜VPS的CPU性能可以非常好？"><a href="#四、为什么有些便宜VPS的CPU性能可以非常好？" class="headerlink" title="四、为什么有些便宜VPS的CPU性能可以非常好？"></a>四、为什么有些便宜VPS的CPU性能可以非常好？</h2><p>有些商家有预处理脚本的，给你适当放宽允许跑CPU到一定程度，允许跑一定的时间，一旦你超过这个限制时间就会给你强制suspended或者重启，让你的任务直接挂了！</p>
]]></content>
  </entry>
  <entry>
    <title>云托管Vultr服务器类型</title>
    <url>/vps/ace32bcf.html</url>
    <content><![CDATA[<p>云服务器托管类型分为很多种，各大平台都有些细微的区别，搞得有些朋友不知道选哪个。</p>
<p>其实这个类型名字虽然有区别，但本质是一样的。</p>
<p>下面以著名的<a href="https://www.vultr.com/?ref=8346337-4F">Vultr</a>云托管服务器类型来说明。</p>
<span id="more"></span>

<h3 id="一、云计算"><a href="#一、云计算" class="headerlink" title="一、云计算"></a>一、云计算</h3><p>Vultr的Cloud Compute实例是具有共享CPU的VPS（虚拟专用服务器）。VPS是在物理服务器上运行的虚拟机（VM），它使用虚拟机监控程序软件（例如KVM）来划分CPU，RAM资源和磁盘空间，从而运行许多VPS实例。这是托管公司中最常见的入门级服务器。</p>
<p>每个VM都有固定数量的RAM和磁盘空间来运行自己的操作系统。客户具有对自己的VPS的root访问权限，并且可以安装他们认为合适的几乎所有服务器软件。缺点是CPU时间与其他VM共享。如果VPS实例突然获得大量流量，则可能会影响在同一物理服务器上运行的其他VPS实例的性能。这被称为嘈杂邻居效应。</p>
<h3 id="二、高频计算"><a href="#二、高频计算" class="headerlink" title="二、高频计算"></a>二、高频计算</h3><p>Vultr的高频计算实例是Cloud Compute的高级版本。它配备了3 GHz + CPU和NVMe SSD，可实现出色的快速性能。</p>
<h3 id="三、专用云"><a href="#三、专用云" class="headerlink" title="三、专用云"></a>三、专用云</h3><p>Vultr的专用云实例是具有专用CPU的VPS。它专为CPU密集型工作负载而设计，例如CI / CD，视频编码，机器学习，游戏服务器，数据库，数据挖掘和繁忙的应用程序服务器。</p>
<h3 id="四、裸机"><a href="#四、裸机" class="headerlink" title="四、裸机"></a>四、裸机</h3><p>裸机服务器也称为专用服务器，是单个租户物理服务器。裸机服务器未运行虚拟机监控程序，也未进行虚拟化。客户具有对服务器上所有资源的独占访问权。</p>
<h2 id="vultr的其他功能"><a href="#vultr的其他功能" class="headerlink" title="vultr的其他功能"></a>vultr的其他功能</h2><ul>
<li>所有VPS实例均已100％KVM虚拟化。</li>
<li>所有服务器类型上均为100％SSD。高频计算配备了超快速的NVMe SSD。</li>
<li>100％正常运行时间SLA。</li>
<li>最低1 Gbit / s的端口速度。全球IPv4和IPv6流量的低延迟。</li>
<li>每小时计费。无需预付整个月的费用。</li>
<li>免费无限快照。</li>
<li>全球16个数据中心位置。</li>
<li>适用于CoreOS，Debian，Ubuntu，CentOS，Fedora，Arch Linux，Alpine Linux，OpenSUSE，FreeBSD，OpenBSD，Windows等的OS模板。</li>
<li>支持上传RAW格式的自定义ISO图像或外部快照图像。</li>
<li>一键式应用程序。您可以一键安装一些常见的Web应用程序，例如CPanel，Plesk，WordPress，Magento等。</li>
<li>自动每日备份</li>
</ul>
<h4 id="如何在Vultr上创建和管理服务器？"><a href="#如何在Vultr上创建和管理服务器？" class="headerlink" title="如何在Vultr上创建和管理服务器？"></a>如何在Vultr上创建和管理服务器？</h4><blockquote>
<p>参考：<a href="https://www.jianshu.com/p/f3a42d4b8cb5">《VPS搭建教程（简单易懂）》</a></p>
</blockquote>
<p>在<a href="https://www.vultr.com/?ref=8346337-4F">Vultr管理控制台</a>中，可以通过单击蓝色的大加号按钮来部署新服务器。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193201.png" alt="vultr免费试用版2019"></p>
<p>然后，需要选择要使用的服务器类型。云计算是默认设置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193207.png" alt="vultr礼物代码"></p>
<p>接下来，可以选择服务器位置和Linux发行版。您还可以选择使用操作系统安装预配置的Web应用程序，上传自定义ISO映像或还原快照。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193214.png" alt="Vultr服务器类型"></p>
<p>之后，可以配置其他功能，例如启用IPv6，启用自动备份和专用网络。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193219.png" alt="附加功能"></p>
<p>如果有启动脚本或SSH密钥，则可以将其添加到服务器中。如果没有它们，只需将它们留空。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193224.png" alt="vultr启动脚本"></p>
<p>最后，给服务器一个主机名和一个标签，然后单击<code>Deploy Now</code>按钮。</p>
<h4 id="如何通过SSH登录到服务器"><a href="#如何通过SSH登录到服务器" class="headerlink" title="如何通过SSH登录到服务器"></a>如何通过SSH登录到服务器</h4><p>服务器运行后，可以通过SSH协议登录到服务器。在<code>overview tab</code>服务器实例的中，您可以看到用于登录的IP地址，用户名和密码。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193229.png" alt="vultr ssh"></p>
<p>如果在计算机上使用Linux或MacOS，则只需打开一个终端窗口并运行以下命令即可登录到服务器。将12.34.56.78替换为服务器的IP地址。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh root@ 12.34.56.78</span><br></pre></td></tr></table></figure>

<p>输入密码。</p>
<p>OK，一切搞定。</p>
]]></content>
  </entry>
  <entry>
    <title>什么是外汇VPS？</title>
    <url>/vps/8aba77a2.html</url>
    <content><![CDATA[<h3 id="外汇VPS是什么？"><a href="#外汇VPS是什么？" class="headerlink" title="外汇VPS是什么？"></a>外汇VPS是什么？</h3><p>外汇VPS是指虚拟服务器，将一台服务器分割成多个虚拟专用服务器。每个VPS主机都可以分配独立的操作系统、超大存储空间，独立RAM、独立CPU资源、和独立系统配置等，在功能与使用方法上与物理服务器一模一样。同时因为这些虚拟环境的硬件、网络和维护成本会分摊到很多使用者身上，所以最终每个人的使用成本会降到最低。</p>
<span id="more"></span>

<p>外汇VPS支持EA交易员进行自动交易，最大程度地缩减MT4客户终端和MT4服务器之间的延迟。通过使用安全位置的数据中心系统，客户可以100%地利用上线时间，体验更快的执行速度，获得更高的交易量，避免错过机会。</p>
<h3 id="为什么使用外汇交易EA要用到VPS？"><a href="#为什么使用外汇交易EA要用到VPS？" class="headerlink" title="为什么使用外汇交易EA要用到VPS？"></a>为什么使用外汇交易EA要用到VPS？</h3><p>凡是用过自动化交易系统(EA)的投资者都知道，电脑配置、网络环境、网络稳定是非常重要的。要让软件帮你进行自动化交易并保持交易的连贯，你的电脑必须保持24小时、一周五天连续运转的状态，不能停电，不能感染病毒，要保证时刻连通交易服务器。此外，如果你的电脑距离交易服务器较近，在运行EA程序时，你能享受到很低的网络延迟和更快的报价，执行速度变快，滑点也会因此减少。</p>
<p>但是由于大部分外汇平台的服务器都在国外，而国内网络限制所以经常会有卡盘掉线情况出现，由此导致行业报价和订单成交存在一定的差异，外汇市场瞬息万变，变化非常快，对外汇交易者来说，订单的执行速度关系到交易的盈亏，尤其是在交易者使用自动交易系统的情况下，速度延迟通常导致订单错过最好的成交时机，这也意味着错过了最好的赚钱机会。</p>
<blockquote>
<p>推荐阅读：<br><a href="https://www.jianshu.com/p/f3a42d4b8cb5">VPS搭建教程（简单易懂）</a></p>
</blockquote>
<p>所以交易员在家中或是公司的电脑上使用EA是存在一定风险的，他们无法保证不掉线、不停电、不遇到硬件故障。而用了外汇VPS就可以很好地避免这样的情况，在外汇VPS上运行交易软件可以进行全天24小时的交易而不会受到上述的干扰，特别是自动化程序操作的时候，会对点位进场要求很高。此外，不同国家之间的网络稳定性各有不同，这会给依赖于当地网络的交易员带来不利影响，在虚拟机上进行交易可以享受到稳定的环境和快速的交易流程，从而可以提供更流畅和更稳定的用户体验。</p>
<h3 id="使用外汇VPS的一些好处："><a href="#使用外汇VPS的一些好处：" class="headerlink" title="使用外汇VPS的一些好处："></a>使用外汇VPS的一些好处：</h3><ul>
<li><p><strong>交易灵活性：</strong>交易者可以在不同的设备（电脑、笔记本、手机等）和有网络连接的任何地方（包括网吧）连接到交易平台，更具有灵活性。</p>
</li>
<li><p><strong>全天候运行：</strong>VPS在性能和配置上，尤其网速上都远远高于家里的个人电脑，所以24小时都能正常运行你的EA程序，因为VPS上你只运行了MT4、专家信号系统、自助跟单系统，所以负担是很轻的，并不会出现卡机、断网的现象，并且交易者的电脑关闭后依然可以执行交易。习惯用EA交易外汇（智能化交易）的朋友都知道，EA是需要全天24小时运行的，而对于我们大多数人家里的电脑来说，这个是很大的负担，因为配置性能的原因，而且如家里只有一台电脑的话，我们可能还会用来看看新闻，看看电影等等，这都会降低电脑的运行速度和网速，而这个对我们MT4和EA的正常运行是有很大影响的，可能在运行一段时间后就会出现卡机，甚至断网的情况，这样就必须重启电脑，重新启动MT4和我们的EA。 </p>
</li>
<li><p><strong>增加安全性：</strong>VPS系统提供了一些最稳健的安全级别，管理中心的VPS服务器会定期受到检查以确保其功能正常，大多数服务提供商会保证99.99％的正常运行时间，同时还提供杀毒软件和其他软件，以确保交易者的系统免受冲击。</p>
</li>
<li><p><strong>减少交易滑点：</strong>  对于交易者来说，订单成交速度是最为重视的因素之一，VPS可以比交易者的计算机更快地执行交易者的所有交易，因为它在自动发送订单方面速度明显更快，减少了延误和滑点等会增加损失和不可预测性事件的发生。。</p>
</li>
<li><p><strong>低延迟：</strong>延迟是指发送消息至经纪商/流动性提供方服务器所需时间的计算，通常是以毫秒为计量单位。如果你在使用业界比较流行的EA交易策略，可能在你下单的同时有着成千上万的用户在用同样的EA交易策略进行自动化操作。即便你不是MT4的EA用户，在标的市场出现显著行情的时候，你在平台手动操控的同时也可能有许多用户在进行同样的操作。 </p>
</li>
</ul>
<p>因此对于外汇或差价合约市场而言，在标的市场因波动而扩大点差前，通常只存在相对有限的流动空间供零售客户抓取，此时如果你的延迟越低，你的订单将有更大可能性成交于相对最好的价格，从而更容易实现交易的盈利。</p>
<p>市场上的服务器供应商提供的外汇VPS收费大约在每月10-100美元之间，方便进行管理，交易者可以获得很高的连接速度，因此也保证了订单的执行速度。同时价格的差异因素包括在硬件软件级别划分、带宽速度、正常运行时间和服务器的位置以及安全性等。</p>
<h3 id="VPS的选择"><a href="#VPS的选择" class="headerlink" title="VPS的选择"></a>VPS的选择</h3><p>外汇VPS在国外VPS服务器中推荐选择性价比极高的<a href="https://www.vultr.com/?ref=8376265-6G">Vultr</a>，Vultr VPS有便宜和高性能两大类配置选择（最便宜低至每月2.5美元），均采用千兆带宽、SSD 硬盘，稳定性有保障，按小时计费，随用随停，且支持支付宝付款。今年Vultr 还有注册送 100 美元的活动，活动直达：<a href="https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a></p>
<blockquote>
<p>推荐阅读<br><a href="https://zhuanlan.zhihu.com/p/258990106">2020最佳VPS Vultr选购及机房选择教程</a> </p>
</blockquote>
<p>外汇VPS当然并不是适合每一个交易者，但是如果是自动化交易，使用外汇VPS还是可以带来很多帮助的。</p>
]]></content>
  </entry>
  <entry>
    <title>如何使用SolusVM管理VPS？</title>
    <url>/vps/6e3e24ae.html</url>
    <content><![CDATA[<p>Solus Virtual Manager (SolusVM）作为一个简洁、功能强大的VPS管理面板，主要有开机、关机、重启、重装、重设root密码、修改主机名、终端、IP地址管理、快速备份、流量统计等，一些朋友可能对VPS使用的以下问题不是很清楚：</p>
<ul>
<li>怎么看VPS系统的详细情况？</li>
<li>怎么看资源使用情况？</li>
<li>怎么重启、关机</li>
<li>如果玩坏了VPS怎么重装系统？</li>
<li>如果密码太弱VPS被黑了，怎么自己改？</li>
</ul>
<span id="more"></span>

<h5 id="接下来就对VPS管理软件SolusVM做一些简单介绍和使用说明"><a href="#接下来就对VPS管理软件SolusVM做一些简单介绍和使用说明" class="headerlink" title="接下来就对VPS管理软件SolusVM做一些简单介绍和使用说明"></a>接下来就对VPS管理软件SolusVM做一些简单介绍和使用说明</h5><h4 id="一、登录SolusVM界面（可设置为中文）会看到以下界面："><a href="#一、登录SolusVM界面（可设置为中文）会看到以下界面：" class="headerlink" title="一、登录SolusVM界面（可设置为中文）会看到以下界面："></a>一、登录SolusVM界面（可设置为中文）会看到以下界面：</h4><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194309.jpg" alt="SVM1"></p>
<p>My Account可以修改用户资料及solusvm的登录密码：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194314.jpg"></p>
<h3 id="二、点击相应VPS后面的“Manage”就可以开始管理VPS"><a href="#二、点击相应VPS后面的“Manage”就可以开始管理VPS" class="headerlink" title="二、点击相应VPS后面的“Manage”就可以开始管理VPS:"></a>二、点击相应VPS后面的“Manage”就可以开始管理VPS:</h3><p>不同类型的虚拟主机的界面稍有不同，但都大同小异，以下有三种不同类型的虚拟主机界中可以自行对照，对VPS的基本操作都可以通过点击鼠标轻松完成.</p>
<h4 id="1-KVM-VPS"><a href="#1-KVM-VPS" class="headerlink" title="(1)KVM VPS"></a>(1)KVM VPS</h4><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194320.jpg" alt="SVM5"></p>
<p>常用的KVM 类型VPS后面一部分也说明下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194326.png"></p>
<p>Settings：启动顺序、网卡驱动、硬盘驱动等的设置</p>
<p>CDRom：一般是提供ISO等多种可供选择的操作系统之类的</p>
<p>Drivers：驱动，根据需要选择</p>
<p>Hostname：随便修改</p>
<p>提一下：clock，有时候服务器时间不准，在这里点击设置一下很简单而不需要你去服务器上使劲儿折腾；</p>
<p>Root/Admin Password：用来修改root密码的</p>
<p>VPC password：修改VNC登录密码</p>
<p>Network：里面包含了你的IP地址，还有是否可以设置rdns之类的</p>
<p>Statistics：一般都是硬盘I/O、网络带宽等使用的细节</p>
<h4 id="2-OpenVZ-VPS"><a href="#2-OpenVZ-VPS" class="headerlink" title="(2)OpenVZ VPS"></a>(2)OpenVZ VPS</h4><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194332.jpg" alt="SVM3"></p>
<h4 id="3-XEN-VPS"><a href="#3-XEN-VPS" class="headerlink" title="(3)XEN VPS"></a>(3)XEN VPS</h4><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194337.jpg" alt="SVM4"></p>
<h2 id="三、几点说明"><a href="#三、几点说明" class="headerlink" title="三、几点说明"></a>三、几点说明</h2><h3 id="1-关于VPS重装系统"><a href="#1-关于VPS重装系统" class="headerlink" title="1. 关于VPS重装系统"></a>1. 关于VPS重装系统</h3><p>点击Reinstall后，只需选择想要安装的Linux模板，然后点击页面底部红色的“Reinstall”按钮就可以了。通常需要等10分钟左右（一般也要不了10分钟），等提示安装完成，并且VPS的状态变为Online就完成了。XEN VPS和KVM VPS允许加载不同的Linux镜像文件，如需用此功能，则需相应地修改Boot Order参数。</p>
<h3 id="2-关于VPS修改root密码（记得定期修改！！）"><a href="#2-关于VPS修改root密码（记得定期修改！！）" class="headerlink" title="2. 关于VPS修改root密码（记得定期修改！！）"></a>2. 关于VPS修改root密码（记得定期修改！！）</h3><p>安全的密码很关键，VPS被黑是件很糟心的事情，被人滥用后流量无缘无故被跑光，主机被停，重要的邮件收不到。所以密码一定要选安全的，而且**定期更改 **。</p>
<p>使用SolusVM，用户都可以按照上面图中示例来完成密码的修改，需要注意的是：</p>
<ul>
<li>对于KVM VPS，选择更改密码，如果成功，系统将会返回一个重置后的新密码。</li>
<li>对于OpenVZ VPS，修改密码无需重新启动系统。</li>
<li>对于XEN VPS，更改root密码后<strong>需重新启动VPS方能生效</strong>。</li>
</ul>
<p>如果懂Linux的也可以使用SSH登录VPS后，用Linux命令行完成密码修改，轻轻松松，无需重启主机。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ passwd</span><br></pre></td></tr></table></figure>

<p>输入两次新密码，便可完成密码修改。</p>
<h3 id="3-关于Console和VNC"><a href="#3-关于Console和VNC" class="headerlink" title="3. 关于Console和VNC"></a>3. 关于Console和VNC</h3><ul>
<li>对于KVM VPS，SolusVM提供功能更强大的VNC功能。</li>
<li>对于OpenVZ VPS和XEN VPS，SolusVM提供一个Serial Console/HTML5控制台（类似Linux下的Terminal，或者Windows下的Putty）供紧急情况下登录服务器，请注意，用户不应用它作为SSH的客户端使用。</li>
</ul>
<h4 id="4-安装操作系统有2种办法："><a href="#4-安装操作系统有2种办法：" class="headerlink" title="4.安装操作系统有2种办法："></a><strong>4.安装操作系统有2种办法</strong>：</h4><ul>
<li><p>点击图里面的“Reinstall”，直接用官方提供的系统模板进行安装，点击安装就会提示告知你操作系统的<strong>登录密码，记得自己记录下来</strong>。</p>
</li>
<li><p>通过CDRom来安装，先要设置好Boot Order（CDrom启动），然后通过VNC远程登录来手动安装（和本地安装一样）。安装完成之后我们还要返回settings把“Boot Order”改为 hard disk启动，接着重启VPS生效。</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>如何用WordPress搭建网站？</title>
    <url>/vps/a573c3c2.html</url>
    <content><![CDATA[<p>很多70后、80后小时候都看过这样一部动画片-《半夜鸡叫》。讲的是地主“周扒皮”为了长工们能多干些活，半夜三更起来学鸡叫让长工劳动（卖身契上规定：鸡叫就得起床干活劳动），长工们从鸡叫起床开工日落收工，周扒皮半夜鸡叫，使得那些长工们提早起床为他披星戴月地劳作。最后，还是小长工小宝献计教训了“周扒皮”一顿。</p>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191028.jpg" alt="1"></p>
<p>这让我想起了一直处于热门话题的996 工作制，没别的意思，自然而然从 996 工作制想到了“周扒皮”。当然，现实很残酷，如今996工作制有相当的普遍性。</p>
<p>今天这篇文章的主要目的并不是怼 996，我们来谈谈如何从自我剥削转向到提高生产可能曲线上来，也就利用平时下班时间或者周末时间通过学习提升自己，比如学一学跨境电商，学一学如何搭建网站，学一学如何站外引流这些等等，这些技能的提升即是高效猎捕“熊掌”，提高生产可能曲线的有效手段。长话短说，接下来我们就来学一学如何用 60 分钟通过 5 个步骤搭建独立自建站。</p>
<p>搭建独立站的方法方式很多，你可以通过 Shopify 这种商业网站在线搭建，也可用购置 Godaddy 的 1 美元主机来搭建，在独立服务器上搭建等等。但是，不得不说，每一种方式都各有利弊。比如 Shopify 的每月 29 美元月租，这个搭建成本对小卖家来说算是相当昂贵了。Godaddy 的 cPannel 面板倒是给力很多，不过问题也不少，速度性能跟不上，服务也让人头痛。</p>
<p>在反复对比权衡了各项利弊之后，最后还是选择了采用一家来自美国的公司 <a href="https://www.hostwinds.com/7600.html">Hostwinds</a> 提供的主机托管服务。那么如何用 60 分钟通过 5 个步骤采用 WordPress 来搭建独立自建站？</p>
<p>先说用什么方式搭建网站，我觉得最好的方式还是随大流，全球 32% 的网站都是采用 WordPress 开源程序搭建，所以直接采用这种方式就行。</p>
<h4 id="1、买域名"><a href="#1、买域名" class="headerlink" title="1、买域名"></a><strong>1、买域名</strong></h4><p>记住购买 .com 域名就行了，价格 一般10 美元左右。可以到<a href="https://www.namesilo.com/?rid=e15b850yt">namesilo</a>买，只要8.99美元/年，结账时输入<strong>最新优惠码：DIFF</strong>，还能再优惠1美元。</p>
<h4 id="2、买主机服务器"><a href="#2、买主机服务器" class="headerlink" title="2、买主机服务器"></a><strong>2、买主机服务器</strong></h4><p>之所以推荐 <a href="https://www.hostwinds.com/7600.html">Hostwinds</a> 的主机服务，主要还是 WordPress 官方的推荐。Hostwinds 与 WordPress 高度融合，因为其出色的速度和客服获得了行业最佳口碑。没有那么多猫腻，也没有以送域名方式诱导、年费低至 39.53 美元，30 天无条件退款。</p>
<p>进入 **<a href="https://www.hostwinds.com/7600.html">hostwinds 官网</a>**，选择一个套餐。</p>
<p>Basic：只能构建一个网站。</p>
<p>Advanced：可以构建4个网站。</p>
<p>Ultimate：构建网站数量无限制。</p>
<p><a href="https://www.hostwinds.com/7600.html">Hostwinds 新用户限时优惠链接</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191037.jpg" alt="1"></p>
<p>然后点击 Order Now，在下面左侧，输入名字、邮箱和密码进行注册。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191042.jpg" alt="2"></p>
<p>填写个人信息</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191048.jpg" alt="3"></p>
<p>选择网址</p>
<p>在Domain这一栏，输入一个自己选择的网址，确保没有别人使用。如出现下图情况，就表示该域名已经有人注册了，重新换一个域名。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191056.jpg" alt="4"></p>
<p>然后点击 Add to Cart，免费加入购物车。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191101.jpg" alt="5"></p>
<p>可以在 Package Information 中修改付费选项。其中下方的 Hostwinds Monitoring 和 Web Hosting Cloud Backups（定期备份网站）视自己的需求而定，如果不需要，可以都不勾选。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191109.jpg" alt="6"></p>
<p>最后选择支付宝完成购买</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191116.jpg" alt="7"></p>
<p><strong>进入 cPanel 管理面板</strong></p>
<p>完成购买后，你会收到一封邮件，里面包含 cPanel 的网址，用户名和密码。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191124.png" alt="8"></p>
<p>点击 cPanel 的地址，然后输入用户名和密码登录 cPanel。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191130.png" alt="9"></p>
<p><strong>在 cPannel 中通过一键安装 WordPress</strong></p>
<p>a：登录 cPanel 后，在搜索框输入 Softaculous Apps Installer，然后点击它。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191138.png" alt="10"></p>
<p>b：找到 Wordpress，然后点击 install，进行安装。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191143.png" alt="11"></p>
<p>c：在下方输入在购买阶段选择的网址</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191148.png" alt="12"></p>
<p>d：在 Admin Account 中输入用户名和密码。这是登录 Wordpress 后台的用户名和密码，确保自己保存好。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191154.png" alt="13"></p>
<p>然后拉到网页最下方，点击 install 安装即可。大概十几秒钟后，WordPress就安装好了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191159.png" alt="14"></p>
<h4 id="3、登录后台，安装模版"><a href="#3、登录后台，安装模版" class="headerlink" title="3、登录后台，安装模版"></a><strong>3、登录后台，安装模版</strong></h4><p>这时网站已经建立了，在浏览器输入你的网址，网站已经可以被正常访问。</p>
<p>如果你的网址是 website.com，在后面加上 /wp-admin，输入在第 3-d 步中的 WordPress 后台用户名和密码，就进入了 WordPress 后台。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191205.png" alt="15"></p>
<p>以后就可以在 WordPress 后台构建自己网站的内容了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191210.png" alt="16"></p>
<h4 id="4、后台基本设置，调整模版并发布；"><a href="#4、后台基本设置，调整模版并发布；" class="headerlink" title="4、后台基本设置，调整模版并发布；"></a><strong>4、后台基本设置，调整模版并发布；</strong></h4><p>现有的Demo中拥有绝大部分基本内容，修改成自己的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428191216.png" alt="wordpress18"></p>
<h4 id="5、申请收款账号"><a href="#5、申请收款账号" class="headerlink" title="5、申请收款账号"></a><strong>5、申请收款账号</strong></h4><p>独立自建站的收款方式很有限，主流就 2-3 种，PayPal 或者 Stripe。不比平台收款，因为有真实交易背景，并且所有交易通过平台审核过，所以钱款合规性有所保证。而自建站的话，卖什么的都有，没有监管，问题就来了。另一点是，自建站通常才有信用卡方式收款，根据国际条例，客户是有权利在 180 天内提出争议，要回自己的信用卡支付的钱款的，所以，一般小公司抗不起这种折腾，自然，可选的就不多了。可以注册 PayPal 或者 Stripe 账号。</p>
<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>WordPress 的可扩展性超乎想象，这也是为什么不管是独立自建站、个人博客还是商业网站都会选择 WordPress 的最主要原因。选择一个与 WordPress 高度融合，进行过专门优化的主机能减少大量繁琐安装各种程序的时间，这里自然首推 <a href="https://www.hostwinds.com/7600.html">Hostwinds</a>。</p>
]]></content>
  </entry>
  <entry>
    <title>如何选择一个自己想要的VPS？</title>
    <url>/vps/75524163.html</url>
    <content><![CDATA[<blockquote>
<p> <strong>怎么选VPS？（重点都划在这了！）</strong></p>
</blockquote>
<span id="more"></span>

<p>我玩VPS的初衷是比较简单的，大部分小伙伴可能最开始也仅仅是想搭个服务玩游戏，或者搭建一个自己的博客又或者是建站，还有可能是仅仅想体验，总之我自己是知道VPS后非常有兴趣去选了一个来用，如果你是开始先想折腾玩一下那么可以先选择一个便宜性价比高的VPS，再来扩充折腾其他的用途做更多更酷的事情，如果是对速度和稳定性都有比较高要求的肯定是价格高的CN2 GIA 线路。网上到处都是各种VPS的推荐，但是！！！看得越多，就会发现自己的选择困难症无处不在，俗话说的好：实践是检验真理的唯一标准！</p>
<p>那么究竟如何选择一个自己想要的VPS呢？以下都是我在使用过程中总结的重点：</p>
<ol>
<li><p>我要用VPS来干什么？</p>
</li>
<li><p>我要选择哪种线路？</p>
</li>
<li><p>我能接受的VPS价格是多少？</p>
</li>
<li><p>符合我预期的VPS有哪些？</p>
</li>
</ol>
<h2 id="挑选合适VPS的几个重点："><a href="#挑选合适VPS的几个重点：" class="headerlink" title="挑选合适VPS的几个重点："></a>挑选合适VPS的几个重点：</h2><h4 id="一、-关于自己的用途："><a href="#一、-关于自己的用途：" class="headerlink" title="一、 关于自己的用途："></a>一、 关于自己的用途：</h4><p>比如说是搭博客建网站，用国内的要考虑备案，国外机器不用，然后开始基本选择1核1G内存或者2核1G内存就够了，稍微高点的可以选择2核2G内存配置，再升级也行；</p>
<p>再比如有同学是为了搭服务玩游戏，有些就会比较吃内存了，那可能2 核 4G内存左右是比较合适的；</p>
<p>又或者仅仅只是想上上网，看个电影等什么的，先用1核1G内存试试水是完全OK的。</p>
<p>还有其他对服务器要求更高的用途选更高配置就行。</p>
<p>总之好坏是否合适最终是肯定要自己亲自体验才知道的，根据自己的预算情况大部分开始基本在$10/月以内就可以满足，有高要求而且不差钱的同学就另说了~</p>
<h4 id="二、关于线路的选择："><a href="#二、关于线路的选择：" class="headerlink" title="二、关于线路的选择："></a>二、关于线路的选择：</h4><p>首先这里说一下，跟自家的家宽也有一定关系，起码用起来要比较顺畅，如果速度太慢或者丢包率严重不仅及其影响使用体验，还有可能造成数据的丢失。</p>
<ul>
<li><strong>首先看线路</strong>，目前国内主要是有三大网络：163骨干网，CN2 GIA，CN2 GT：</li>
</ul>
<p>（1）163骨干网：又可称为CN1，最常见的线路，在出国线路上比较拥堵，丢包率高。但便宜。</p>
<p>（2） CN2GT：到中国国际出口拥有自己的单独线路，但是进入国内的还是使用的163出口，在出国线路上拥挤度一般，比163要好。性价比也不错。</p>
<p>（3）  CN2 GIA：拥有独立的回国链路，在出国线路上表现最好，少拥堵，低丢包，但是整个GIA的出口带宽较小，容易在较大流量攻击的时候导致整个GIA网络波动而且价格相对更贵。如果自己的使用要求比较高且经济实力能够承担，那肯定优先选择这个线路。</p>
<p>总结线路选择的优先级：CN2 GIA &gt;CN2 GT&gt;163直连，无论哪条都会有因为各种情况而产生丢包和延时显著上升的现象，比如晚高峰大家都挤着上网的时候，具体就根据自己在这方面的预算来选择合适的。</p>
<ul>
<li><strong>然后是选择机房</strong></li>
</ul>
<p>基本都是选择这几个地区的亚洲（香港、日本、新加坡、韩国）、美国、欧洲，理论上来说地理位置上离访问用户越近速度越快，不过一般亚太地区的服务器要注意下线路有无绕路，有很多日本的服务器到国内的线路就是绕路走其他地区的，而不是直接直连到国内，这样可能就会比美国直连国内的速度要查。对于新手愿意提前折腾的同学可以自行先测试线路是双向还是单向以及是否绕路，也可以先选一个合适自己能满足使用的，因为后续大部分商家都还是支持更换机房的而且不算复杂。</p>
<p>选择vultr的同学可以看看<a href="http://vps688.com/2021/04/28/Vultr%E9%80%89%E8%B4%AD%E5%8F%8A%E6%9C%BA%E6%88%BF%E9%80%89%E6%8B%A9%E6%95%99%E7%A8%8B/">《Vultr选购及机房选择教程》</a></p>
<h4 id="三、费用预算："><a href="#三、费用预算：" class="headerlink" title="三、费用预算："></a>三、费用预算：</h4><ul>
<li><p>如果只是想先玩一玩，可以挑一个比较便宜的，但不能只贪便宜，万一商家跑路了，那就啥也没了，这种一个月几美金就可以</p>
</li>
<li><p>如果想有一个稳定，并可长期使用的VPS。那么在同等配置或需求的情况下，可以尽量选择价格略高一点的。价格高低也会筛选大部分劣质客户。总之要合理预算自己VPS费用，选择合适的而不是最便宜的。</p>
<p>有的小伙伴可能会想选择使用支持windows系统的VPS，可以看这篇<a href="http://vps688.com/2021/04/28/windows-vps%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/">《Windows VPS有哪些？》</a></p>
</li>
</ul>
<h4 id="四、符合我预期的VPS有哪些？"><a href="#四、符合我预期的VPS有哪些？" class="headerlink" title="四、符合我预期的VPS有哪些？"></a>四、符合我预期的VPS有哪些？</h4><p>  这几个是针对有限预算的伙伴想选择性价比较高的VPS，可以去看看这里比较便宜的合适方案，这类够自己用途就行。</p>
<p>在后面也挑列了几个靠谱的首选线路中最好的CN2 GIA线路VPS。</p>
<h4 id="1、搬瓦工BandwagonHost"><a href="#1、搬瓦工BandwagonHost" class="headerlink" title="1、搬瓦工BandwagonHost"></a>1、<a href="https://bwh88.net/aff.php?aff=55740">搬瓦工BandwagonHost</a></h4><p>个人目前在用GIA线路机房，是一家美国老牌VPS提供商，针对国内有较好的优化，在性能和速度方面一直都比较稳。支持支付宝，可以一键备份VPS、一键迁移机房更换数据中心等自动化功能。</p>
<p>其中6个机房可选：洛杉矶（<strong>CN2 GT,CN2 GIA</strong>），凤凰城，费利蒙，佛罗里达，荷兰，**香港(三网直连，速度最好)**。</p>
<ul>
<li><p>现在最便宜的套餐是49.99刀/年的，CN2 GT线路。一直以来用他家VPS的人很多，前两年做了技术升级去年还新增了机房。</p>
</li>
<li><p>最便宜的CN2 GIA（全程CN2）套餐需要49.99刀/季度，按年付结算的话是169.99 刀，对于性能稳定性和速度要求比较高想建站又不差钱的同学的来说还是可以的，总之是否选搬瓦工就看自己的预算和用途要求。</p>
</li>
</ul>
<p>另外从服务上来说这家是已经很不错的了，我发工单基本20分钟内就回复解决了。</p>
<p>对了，我再附一个全场通用的<a href="https://bwh88.net/aff.php?aff=55740"><strong>最新优惠码BWH3HYATVBJW</strong></a>，可以省6.58%，省来的钱就是香，结账的时候记得<strong>自行激活</strong>验证就行。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170518.png" alt="搬瓦工注册"></p>
<h4 id="2、Vultr"><a href="#2、Vultr" class="headerlink" title="2、Vultr"></a>2、<a href="https://www.vultr.com/?ref=8346335">Vultr</a></h4><p>他家特点就是规模大，机房数量多可以随时更换服务器，而且支持按小时计费（随时创建随时删除，嗯挺香的），支持购买Windows系统，基于KVM虚拟。</p>
<p>目前在全球有<strong>17个机房</strong>（日本、新加坡、欧洲、美国等都有 ，很少服务商有这么多的，所以在机房选择上可以多样化），付款方式支付宝、PayPal、信用卡、比特币都可以。</p>
<p>还支持snapshot、backup、block storage、object storage、支持上传自定义ISO，支持保留IP、新增IP等等。</p>
<ul>
<li>他家最低是2.5刀/月，不过这个<strong>仅提供ipv6 ip</strong>，接下来比较划算的就是3.5刀/月和5刀/月，这几个属于便宜性价比较高类型的，在内存和流量上有一点区别，但机器性能都不太差，对于预算有限的同学来说是比较好的。</li>
<li>vultr基本上所有机房都是走NTT线路，联通用户一般来说选日本效果相对还可以，移动用户一般选新加坡、日本还行，电信用户选美国西海岸、日本、新加坡都差不多</li>
<li>另一点是vultr是少数提供 Windows 系统的，他家高性能 Windows服务器体验不错，喜欢折腾玩儿的可以入手。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428170829.png" alt="3vultr注册"></p>
<h4 id="3、RackNerd"><a href="#3、RackNerd" class="headerlink" title="3、RackNerd"></a>3、<a href="https://my.racknerd.com/aff.php?aff=268">RackNerd</a></h4><p>他家也是价格实惠，流量大，而且经常有促销活动，也是少数提供Windows 系统的服务器，在售后处理速度方面是比较快的。</p>
<p>一共有6个机房可以选，整体对于咱们国内用户来说选择美国西海岸的圣何塞、洛杉矶这两个机房比较好，经常有便宜 windows vps在促销，碰上活动的时候经常能找到便宜高性能的 vps，非常适合国内使用。</p>
<p>也有高配的CN2 GIA线路，因为经常会搞优惠活动，可以常关注。</p>
<p>racknerd的VPS一般默认为DC02机房，如果需要高防类，推荐选择sharktech，也就是DC05机房，记得下单的时候在Location里面下拉选择即可！</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/7.png" alt="image-20201018173713017"></p>
<h4 id="五、靠谱的-CN2-GIA线路VPS："><a href="#五、靠谱的-CN2-GIA线路VPS：" class="headerlink" title="五、靠谱的 CN2 GIA线路VPS："></a>五、靠谱的 CN2 GIA线路VPS：</h4><p>前面有提到选择VPS时最好的线路就是CN2 GIA，它在稳定性和速度上是最好的，少拥堵，低丢包，这种体验好太多了，就是价格相对更高。</p>
<p>以下的写出来的几个VPS服务商至少保证都有CN2 GIA网络可选，而且CN2 GIA VPS产品都还不错，比较个人看了很多挑出来的都是是比较靠谱的，尤其是在网络波动大的情况下CN2 GIA VPS绝对是优于其他的，这就是一分钱一分货的差距！</p>
<h4 id="1、搬瓦工BandwagonHost-1"><a href="#1、搬瓦工BandwagonHost-1" class="headerlink" title="1、搬瓦工BandwagonHost"></a>1、<a href="https://bwh88.net/aff.php?aff=55740">搬瓦工BandwagonHost</a></h4><p> 2.5G~10Gbps带宽，电信、联通走CN2 GIA，移动CMI，KVM虚拟，后台可以一键安装快照备份等</p>
<p>相对便宜的CN2 GIA方案是49.99刀/季度，年付169.99 刀。如果预算更加充足的可以考虑他们家香港机房，总之根据自己预算和需要的内存及流量配置来选择不同价位的VPS。</p>
<p>使用全场通用优惠码：<a href="https://bwh88.net/aff.php?aff=55740">BWH3HYATVBJW</a>，节约6.58%走起，价格高了优惠下来的钱能买的冰淇淋也多了，结账的时候记得<strong>自行激活</strong>！</p>
<h4 id="2、tripodcloud"><a href="#2、tripodcloud" class="headerlink" title="2、tripodcloud"></a>2、<a href="https://clients.tripodcloud.com/aff.php?aff=667">tripodcloud</a></h4><p>是一家比较低调的高品质国人VPS商家，虽然起步较晚，产品和售后没得说，就是这样一点一点地硬扛起来的，反正用过的基本都说稳，跟其他VPS服务提供家还是有较大的不同，非常推荐，这家有兴趣的完全可以试试看！适合自己的就是最好！</p>
<p>CN2 GIA+CU+CM三网直连，大硬盘VPS，1Gbps带宽，带宽充足，速度快+大硬盘，对于建站之类的小伙伴来说，应该是很难找到这样类型的VPS，目前最便宜的是＄39/半年，年付8.8折，71.99刀。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/8.png" alt="8"></p>
<h4 id="3、-hostdare"><a href="#3、-hostdare" class="headerlink" title="3、**hostdare**"></a>3、**<a href="https://manage.hostdare.com/aff.php?aff=2083">hostdare</a>**</h4><p>2015年成立的VPS商家，业务包括虚拟主机、VPS、服务器，支持支付宝，主要运作美国洛杉矶数据中心的VPS，有OpenVZ和KVM两种</p>
<p>支持Windows，VPS接入的是CN2 GIA网络（并且针对中联通、移动都有优化），VPS稳定而且速度快！可PayPal、<strong>支付宝</strong>付款</p>
<p>可以看到他家官网提供了CN2 GIA和CN2 GT两类线路套餐，其中CN2 GIA比较便宜的是$49.99/年和$76.99/年，CN2 GT有$11.97/季、$17.97/季等，也可以根据自己预算需要的内存及流量配置来选择不同价位的VPS。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/hostdare%E6%B3%A8%E5%86%8C.png" alt="hostdare注册"></p>
<h4 id="4、-gigsgigscloud"><a href="#4、-gigsgigscloud" class="headerlink" title="4、**gigsgigscloud**"></a>4、**<a href="https://clientarea.gigsgigscloud.com/?affid=2666">gigsgigscloud</a>**</h4><p>是马来西亚华人运作的老品牌，他家有VPS和独立服务器业务，数据中心分布在：香港、日本、马来西亚、新加坡、美国洛杉矶。</p>
<p>其中香港VPS的“Premium China Router”系列VPS网络超级给力！电信走CN2、联通走VIP线路（AS9929）9919、移动直连即将接入（AS9808）。</p>
<p>也提供高达200Mbps带宽的日本 cn2 gia vps，应该是当前提供日本cn2最大带宽的商家！</p>
<p> 洛杉矶的CN2 GIA 系列是CLOUDLET V (LAX)</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/gigi%E6%B3%A8%E5%86%8C.png" alt="gigi注册"></p>
<p><strong>写到最后想说一下：</strong>网上有非常多的VPS提供商选择介绍，其实在自己使用后就会发现影响体验的因素都是有多方面的，同一个在国内不同地区省市、不同时间使用效果都不一样，所以主要还是从<strong>预算</strong>、<strong>线路</strong>、<strong>所需的内存流量配置</strong>等多方面考虑选择<strong>合适自己</strong>的就是最好的！</p>
<p>看了这么多，选择自己喜欢和合适的就行，说实话这世界上有些路一定是要自己亲自走一遍的！有了体验之后才可以了解到更多的东西。</p>
<ul>
<li><p>选择自己合适的，有优惠的就用优惠，省钱真香</p>
<ol>
<li>搬瓦工：<a href="https://bwh88.net/aff.php?aff=55740">https://bwh88.net/</a>，全场通用力度6.58%的<a href="https://bwh88.net/aff.php?aff=55740"><strong>最新优惠码BWH3HYATVBJW</strong></a>，<strong>便宜和cn2 gia都有</strong></li>
<li>Vultr：<a href="https://www.vultr.com/?ref=8346335">https://www.vultr.com/</a>，<strong>便宜性价比高</strong><br>优惠活动：**<a href="https://link.zhihu.com/?target=https://www.vultr.com/?ref=8376265-6G">VULTR 2020 年优惠，新用户直接送 100 美元</a><strong>（30天内使用有效，</strong>这100$完全可以用来试用体验他家高性能套餐**）</li>
<li>tripodcloud：<a href="https://clients.tripodcloud.com/aff.php?aff=667">https://www.tripodcloud.com/</a>，<strong>cn2 gia 线路，年付直接8.8折优惠，无需优惠码，产品和售后好，用过的基本都说稳</strong></li>
<li>Racknerd：<a href="https://my.racknerd.com/aff.php?aff=268">https://www.racknerd.com/</a>，一般预算的同学可以选择，<strong>便宜性价比不错，大流量，经常有优惠，是非CN2线路之外优化的相当不错的</strong>，也有高配的CN2 GIA线路</li>
<li>hostdare：<a href="https://manage.hostdare.com/aff.php?aff=2083">https://www.hostdare.com</a>，<strong>有cn2 gt和cn2 gia线路</strong>，<strong>cn2 gia高端网络对国内效果友好</strong></li>
<li>gigsgigscloud：<a href="https://clientarea.gigsgigscloud.com/?affid=2666">https://www.gigsgigscloud.com</a>，<strong>cn2 gia 线路，香港（直连、大带宽、CN2），美国洛杉矶（CN2 GIA、高防），支持中文售后</strong></li>
</ol>
</li>
<li><p>VPS的开通与部署，推荐阅读《<a href="http://vps688.com/2021/04/28/VPS%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B%EF%BC%88%E7%AE%80%E5%8D%95%E6%98%93%E6%87%82%EF%BC%89/">VPS搭建教程（简单易懂）</a>》</p>
</li>
</ul>
<p><strong>PS：</strong></p>
<p>VPS使用心得：手上永远都不可能只有一只小鸡因为当你开始用搭建自己的服务体会到乐趣或者达到效果后就会发现自己根本发现停不下来。这时候小伙伴还可以从上面选择其他的VPS玩玩，都是相对好用靠谱的，合适自己的才是最好。关于VPS的其他用途可以看看<a href="http://vps688.com/2021/04/28/VPS%E7%9A%84%E6%9C%89%E8%B6%A3%E7%94%A8%E9%80%94/">《VPS的有趣用途》</a></p>
]]></content>
  </entry>
  <entry>
    <title>新手建站VPS服务器管理面板-宝塔面板安装教程</title>
    <url>/vps/de1c02bc.html</url>
    <content><![CDATA[<p>很多人买VPS是为了搭建SS或者搭建网站，<strong>利用VPS搭建网站一般都是：搭建LNMP环境 》创建虚拟主机 》创建数据库 》上传程序 》绑定域名</strong></p>
<p>但是在整个过程中都是命令操作，必须步步仔细，步步小心，要是安装中途出现小问题或者以后需要修改，面对命令行界面估计只能发呆了，这样对于新手和习惯虚拟主机的同学来说就太痛苦了，代码太多，无法轻松管理。</p>
<span id="more"></span>

<p><strong>在这里就给大家介绍一个简单的方法：那就是利用宝塔面板来操作！</strong></p>
<p>宝塔面板是一款服务器管理软件，支持windows和linux系统。</p>
<p>使用宝塔面板可以在可视界面中实现为服务器安装应用、同步文件、定期执行代码、管理服务，等操作，轻松搭建好环境，配置网站和管理网站。</p>
<h4 id="那么如何安装宝塔面板呢？"><a href="#那么如何安装宝塔面板呢？" class="headerlink" title="那么如何安装宝塔面板呢？"></a>那么如何安装宝塔面板呢？</h4><p>首先我们都知道VPS(Linux)在开通之后是默认的纯净版系统，我们可以安装CentOS、Debian、Ubuntu系统，这个我们在开通SSD VPS主机的时候是可以选择的，或者在开通之后面板中也可以重新选择系统OS。</p>
<p>接下来以**Vultr <a href="https://www.vultr.com/?ref=8346337-4F">https://www.vultr.com</a><strong>作为VPS示例来讲解以下如何给VPS主机安装宝塔面板，Vultr服务器通过</strong>宝塔面板 <a href="https://www.bt.cn/?invite_code=MV92eWd5a2g=">https://www.bt.cn</a>**直接部署WEB环境，可以配置LNMP或者LAMP快速部署，适合用户需要的CMS程序，实现可视化面板管理站点。</p>
<h3 id="一、搭建宝塔面板的要求"><a href="#一、搭建宝塔面板的要求" class="headerlink" title="一、搭建宝塔面板的要求"></a>一、搭建宝塔面板的要求</h3><p>一般来说选择的Vultr VPS都可以直接搭建宝塔面板，以下是宝塔官方对于安装宝塔的系统要求：</p>
<ol>
<li>Linux版请确保纯净系统安装，没有安装过其它环境带的Apache/Nginx/php/MySQL</li>
<li>建议系统CentOS7.1+、Ubuntu16.04+、Debian9.0+</li>
<li>宝塔Linux6.0版本是基于centos7开发的，建议使用centos7.x 系统No.5</li>
</ol>
<h3 id="二、VPS主机搭建"><a href="#二、VPS主机搭建" class="headerlink" title="二、VPS主机搭建"></a>二、VPS主机搭建</h3><p>tips：不清楚VPS服务器搭建的可参考：<a href="https://www.jianshu.com/p/f3a42d4b8cb5">《VPS搭建教程（简单易懂）》</a>。</p>
<p>宝塔面板官方显示是支持CentOS 6.x 7.x 、Ubuntu、Debian、Fedora系统的，操作系统可自行选择。
　　</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193630.jpg" alt="Vultr可选操作系统">　　</p>
<h3 id="三、Vultr安装宝塔面板步骤"><a href="#三、Vultr安装宝塔面板步骤" class="headerlink" title="三、Vultr安装宝塔面板步骤"></a>三、Vultr安装宝塔面板步骤</h3><h4 id="3-1-在本地远程连接自己的Vultr-VPS"><a href="#3-1-在本地远程连接自己的Vultr-VPS" class="headerlink" title="**3.1 在本地远程连接自己的Vultr VPS **"></a>**3.1 在本地远程连接自己的Vultr VPS **</h4><p>（1）在本地远程连接自己的Vultr VPS，Windows使用Xshell，Mac使用自带的终端，相关操作在<a href="https://www.jianshu.com/p/f3a42d4b8cb5">VPS搭建教程（简单易懂）</a>也有介绍，Xshell安装完成后，打开Xshell，新建连接</p>
<p>​    <img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193640.jpg" alt="1"></p>
<p>（2）随便取个名字，然后把你的服务器ip填上，点击确定，弹出一个窗口，选择你刚才新建的连接，点击连接，弹出输入用户名窗口，选择记住用户名</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193653.jpg" alt="2"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193658.jpg" alt="用户名"></p>
<p>（3）输入连接密码。密码是你购买的服务器系统的密码，也可以在服务器选项里面查看</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193703.jpg" alt="密码"></p>
<p>（4）把密码复制过来后，下面的记住密码也打上勾，方便以后连接，点确定。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193708.jpg" alt="服务器1"></p>
<p>（5）出现这个界面，就说明连接成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193713.jpg" alt="连接成功"></p>
<h4 id="3-2-宝塔面板安装"><a href="#3-2-宝塔面板安装" class="headerlink" title="**3.2 宝塔面板安装 **"></a>**3.2 <a href="https://www.bt.cn/?invite_code=MV92eWd5a2g=">宝塔面板</a>安装 **</h4><p>（1）宝塔版本这里我选择5.9（该版本带有过滤器，相当于防火墙，而新的版本去掉了这个功能，改为收费的防火墙了。新版本功能多些，如果不在意这个，当然选新版本更好），如果你想安装最新版本，可点<a href="https://www.bt.cn/?invite_code=MV92eWd5a2g=">最新版本宝塔安装</a>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193718.jpg" alt="宝塔面板最新"></p>
<p>点击立即安装，在弹出的页面里面复制安装命令（这是最新的7.4.5版本安装命令）</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193723.jpg" alt="Centos7.4.5安装命令"></p>
<p>（2）**注意：下面安装命令才是本次选择的5.9版本的 **</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure>

<p> 然后点确定，出现下面提示是否把宝塔面板安装在SSS文件夹里，如果你想安装在其他目录，就选n然后输入你的目录名称，如果不改动的话就输入y 回车，接下来就开始安装了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193727.jpg" alt="SSS文件夹"></p>
<p>安装时间大约一分钟左右。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193732.jpg" alt="宝塔"></p>
<p>出现这个界面，说明面板安装好了，记住上面登录信息。</p>
<p>（3）打开管理地址，输入上面的登录信息，安装套件，可以选择推荐的LNMP一键安装，当然也可以选择LAMP。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193805.jpg" alt="img"></p>
<p>（4）这个安装过程大概两三分钟。安装完成后，打开这个页面。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193817.jpg" alt="img"></p>
<p>5.9版本带有过滤器，相当于防火墙，而新的版本去掉了这个功能，改为收费的防火墙了。新版本功能多些，如果不在意这个，直接选新版本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193826.jpg" alt="img"></p>
<h4 id="3-3宝塔面板安全设置"><a href="#3-3宝塔面板安全设置" class="headerlink" title="3.3宝塔面板安全设置"></a>3.3宝塔面板安全设置</h4><p>（1）面板安装好后可以做一些安全设置，把上图过滤器打开。除POST过滤外，其他的都勾选，如果你勾选了POST过滤，在网站后台修改广告JS代码保存时，就保存不了，出现下面提示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193835" alt="img"></p>
<p>（2）在面板设置里面修改用户名和密码；</p>
<p>（3）修改默认端口</p>
<p>安全里面ssh端口修改，默认为22，修改后如果你需要用ssh连接远程工具的默认端口也要修改为相同的，不然连不上，顺便把禁ping打开</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193841.jpg" alt="img"></p>
<p>修改宝塔面板端口，默认为8888，修改为范围内的端口</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193847.jpg" alt="img"></p>
<p>修改FTP连接端口，默认为21，点击左边的FTP管理可以修改</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193853.jpg" alt="img"></p>
<p>修改mysql数据库端口，点击左边的软件管理。选择mysql5.5,点击设置，在弹出的窗口里面，端口设置，默认为3306，可自行修改</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193900.jpg" alt="img"></p>
<p>最后一步，在安全里面把刚才替换掉的端口删除，查看后面的状态，未使用的都删除掉。20、21、22、8888、888，默认的80端口不能删除。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193906.jpg" alt="img"></p>
<p>以上就是<a href="https://www.vultr.com/?ref=8346337-4F">vultr服务器</a>为例的<a href="https://www.bt.cn/?invite_code=MV92eWd5a2g=">宝塔面板</a>安装教程。</p>
]]></content>
  </entry>
  <entry>
    <title>虚拟主机和VPS（虚拟专用服务器）的区别</title>
    <url>/vps/7eab4957.html</url>
    <content><![CDATA[<p>如果要尽快建立一个网站，并能够快速地获取流量，需要寻找良好的网络托管服务，网络托管服务提供商会提供不同的托管类型。</p>
<span id="more"></span>

<p><strong>如果只是刚起步或网站流量少的网站，可以选择共享虚拟主机</strong>，但是随着网站内容和流量的增长，就会需要更多的资源和更好的性能，想要获得专用服务器的好处，但又不想花太多钱，那么<strong>虚拟专用服务器（VPS）</strong>是个完美的选择。</p>
<blockquote>
<p>相关教程 <a href="http://vps688.com/2021/04/28/VPS%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B%EF%BC%88%E7%AE%80%E5%8D%95%E6%98%93%E6%87%82%EF%BC%89/">VPS搭建教程（简单易懂）</a><br>今年最好的国外VPS <a href="https://www.vultr.com/?ref=8376265-6G">Vultr最新活动充10赠送$100</a></p>
</blockquote>
<h3 id="一、不同的网络托管服务介绍"><a href="#一、不同的网络托管服务介绍" class="headerlink" title="一、不同的网络托管服务介绍"></a>一、不同的网络托管服务介绍</h3><h4 id="共享虚拟主机"><a href="#共享虚拟主机" class="headerlink" title="共享虚拟主机"></a>共享虚拟主机</h4><p>适合新网站和博客。所有网站都存储在一台物理托管服务器上，它们在其中共享服务器资源，如存储，带宽，RAM和计算能力。</p>
<h4 id="VPS托管"><a href="#VPS托管" class="headerlink" title="VPS托管"></a><a href="https://www.vultr.com/?ref=8376265-6G">VPS托管</a></h4><p>即虚拟专用服务器。与共享虚拟主机不同，VPS具有专用的处理器、内存、硬盘、带宽等资源，并且独立于同一台服务器上的所有其他网站</p>
<blockquote>
<p>参考：<a href="http://vps688.com/2021/04/28/VPS%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/">《VPS是什么》</a></p>
</blockquote>
<h4 id="云托管"><a href="#云托管" class="headerlink" title="云托管"></a>云托管</h4><p>一种托管服务，允许许多计算机一起工作，运行应用程序以及使用组合的计算资源。云托管网站可以使用多个服务器的资源，这意味着它们不限于单个服务器位置。</p>
<h4 id="托管WordPress"><a href="#托管WordPress" class="headerlink" title="托管WordPress"></a>托管WordPress</h4><p>适合高流量WordPress网站。WordPress托管托管涵盖了与常规Web托管服务相同的托管需求，但是，其主要重点是优化WordPress网站的性能。</p>
<h4 id="专用托管"><a href="#专用托管" class="headerlink" title="专用托管"></a>专用托管</h4><p>适合大型企业网站。向网站所有者提供其网站一整个服务器资源的托管服务器的类型。这种类型的托管使网站能够处理大量流量，并能够根据CPU，RAM，磁盘空间和软件方面的需求对其进行自定义。</p>
<h3 id="二、推荐方案"><a href="#二、推荐方案" class="headerlink" title="二、推荐方案"></a>二、推荐方案</h3><p>Vultr VPS服务商成立于2014年，官方网站 <a href="https://www.vultr.com/?ref=8376265-6G">www.vultr.com</a>。<br>属于Gameservers旗下提供KVM架构云VPS主机产品的品牌项目。全部基于KVM架构，且有SSD固态硬盘，截至目前在亚洲、美洲、欧洲等世界各地的主要城市都设立了数据中心总数接近20个，算是在云主机项目中提供节点较多的服务商之一。</p>
<h4 id="vultr的优势分析"><a href="#vultr的优势分析" class="headerlink" title="vultr的优势分析"></a>vultr的优势分析</h4><p>Vultr VPS主机商能在竞争激烈的主机市场中拥有大量的用户和市场，我细致分析后，主要有以下这些关键点：</p>
<ol>
<li>与他们的产品设置、性价比有很大的关系。基于KVM架构的SSD固态硬盘，拥有强大的技术团队和实力背景支持。</li>
<li>价格优势。有月费低至5美金的配置，**对于新注册用户有赠送$100的奖励(<a href="https://www.vultr.com/?ref=8376265-6G">官网限时活动</a>)**在一定程度上可以吸引大量新用户测试使用；</li>
<li>在网络方面对中国用户做了优化，是少有的<strong>支持<font color="red">支付宝</font>和<font color="red">微信</font>支付的主机商</strong>；</li>
<li>同时，Vultr亮点优势还在于可以<strong>自定义ISO安装系统</strong>，尤其是可以安装Windows系统。适合有需要远程连接项目用户的使用；</li>
<li>拥有16个机房的选择，和可以随意删除以及可小时支付云主机。对于用户成本的节省和自由灵活的选择方案配置有一定的灵活性。</li>
</ol>
<h4 id="Vultr-VPS线路选择问题参考"><a href="#Vultr-VPS线路选择问题参考" class="headerlink" title="Vultr VPS线路选择问题参考"></a>Vultr VPS线路选择问题参考</h4><p>Vultr服务商已经拥有日本、新加坡、洛杉矶、西雅图、法国、英国等全球16个机房线路，并且今年5月推出了<font color="red">韩国数据中心</font>，价格实惠，目前使用的人数应该不多，速度估计会很快。</p>
<p>十几个机房路线对于有些用户项目需要多节点的来说会有比较不错的选择，在路线选择上可以通过实际测试是否是适合自己的网络。</p>
<p>一般来说欧洲用户项目可选择欧洲机房，美洲用户选择美国机房等，<strong>如果是中文项目，通常推荐最多的是日本</strong>，今年又新增了韩国数据中心，都可以测试看看，而且最近有看到日本和新加坡线路速度调整，但并非直连，也可以适当选择洛杉矶、西雅图等美国机房。</p>
<p>Vultr VPS云主机线路的优势在于我们可以任意的选择，而且如果开通后不满意我们直接删除机器，这样不会继续扣费，采用的是小时支付。</p>
<blockquote>
<p>见 <a href="https://zhuanlan.zhihu.com/p/257451551">《VPS取消PayPal自动扣款》</a></p>
</blockquote>
<p>同样我们也可以利用这种方式进行选择和切换IP使用。</p>
<blockquote>
<p>参考 <a href="https://zhuanlan.zhihu.com/p/256478031">《Vultr机房测速教程》</a></p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428194610.jpg" alt="VPS vultr0923发布"></p>
<h4 id="Vultr-VPS云主机项目应用"><a href="#Vultr-VPS云主机项目应用" class="headerlink" title="Vultr VPS云主机项目应用"></a>Vultr VPS云主机项目应用</h4><blockquote>
<p>详情见参考 <a href="http://vps688.com/2021/04/28/VPS%E6%9C%89%E5%93%AA%E4%BA%9B%E7%94%A8%E9%80%94%EF%BC%9F/">《VPS有哪些用途？》</a></p>
</blockquote>
<p>我们选择任何VPS、服务器产品，要么就用来建站、要么就用来部署需要的调试环境或者软件环境。</p>
<p>我使用过的Vultr，用来建站和普通web项目的都OK。与大部分Linux vps服务器一样，选择合适的系统和运行环境，创建系统后就可以部署WEB环境建站。</p>
<p>这款主机产品的优势不仅在于部署系统快，而且能提供较多的一键环境，比如Docker、Drupal、LAMP、LEMP、OwnCloud等等应用，如果我们建站用途的Web环境，还是用自己部署Web面板或者使用熟悉的一键包部署。</p>
]]></content>
  </entry>
  <entry>
    <title>解决Vultr VPS主机能PING通但是SSH无法连接问题</title>
    <url>/vps/6f0018cd.html</url>
    <content><![CDATA[<p>在使用Vultr VPS主机有时会出现这样的情况：SSH连接不上或者自己通过ping进行测试时发现可以ping通，但是SSH还是连接不上，大部分都是因为使用不当造成的，在被检测到后封锁了你的IP或者端口，也有可能是这次IP或者端口出现了大规模的封锁，导致在你这个IP段的所有IP地址都进入了黑名单，这就是你的VPS被墙了。</p>
<span id="more"></span>

<p>也就是说VPS主机能PING通但是SSH无法连接有两种可能的情况：</p>
<ul>
<li>IP被封</li>
<li>端口被封</li>
</ul>
<p>那么如何检测及解决SSH连接不上的问题呢？</p>
<h3 id="一、ping测试"><a href="#一、ping测试" class="headerlink" title="一、ping测试"></a>一、ping测试</h3><p>ping测试分为国内和国外，可以使用在线工具进行检测，如站长工具：<a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></p>
<h5 id="（1）-国内检测："><a href="#（1）-国内检测：" class="headerlink" title="（1） 国内检测："></a>（1） 国内检测：</h5><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193011.png" alt="3"></p>
<h5 id="（2）-国外检测："><a href="#（2）-国外检测：" class="headerlink" title="（2） 国外检测："></a>（2） 国外检测：</h5><p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193018.png" alt="4"></p>
<h4 id="总结ping的测试结果："><a href="#总结ping的测试结果：" class="headerlink" title="总结ping的测试结果："></a><strong>总结ping的测试结果：</strong></h4><ul>
<li><strong>国内能ping通：</strong>表示IP正常</li>
<li><strong>国内ping不通，国外能ping通：</strong>表示IP被封</li>
<li><strong>国内ping不通，国外也ping不通：</strong>检测VPS是否开机，如果国外也ping不通，最大的问题是VPS处于关机状态，正常情况下国外是不可能ping不通的，请开机后再进行测。</li>
<li><strong>国内外都可以 Ping：</strong> SSH还是不能连接成功，说明端口出现问题，我们需要检测端口是否不通，进行下一步端口扫描测试</li>
</ul>
<p>如果国内无法 Ping 国外可以 Ping，这个就是典型的IP被封的问题，我们只能通过重新购买VPS直接更换 IP才能解决，如果是我们已经在用的服务器IP被封，不要先删除机器来解决问题，因为我们数据还在，建议先通过快照备份后再开通一台新的机器然后将数据快照恢复。</p>
<h3 id="二、端口扫描测试"><a href="#二、端口扫描测试" class="headerlink" title="二、端口扫描测试"></a>二、端口扫描测试</h3><p>端口扫描需要用到VPS的IP地址以及SSH的连接端口，IP地址大家应该都知道后台可以看到，不清楚可以查看文章<a href="https://zhuanlan.zhihu.com/p/260204096">如何使用SolusVM管理VPS？</a>(对VPS的管理使用问题做了详细介绍)。SSH端口Vultr默认的就是22，如果你没有更改过Vultr的默认端口，那么就是22，如果更改过端口填写你更改后的端口进行检测。  （一般VPS都是默认的端口22，不过<a href="https://bandwagonhost.com/aff.php?aff=55740">搬瓦工</a>的端口是随机生成，可以在KiwiVM管理面板进行查看）） </p>
<h4 id="1-国内测试"><a href="#1-国内测试" class="headerlink" title="1. 国内测试"></a>1. 国内测试</h4><p>（1）国内端口检测地址：<a href="http://tool.chinaz.com/port">http://tool.chinaz.com/port</a></p>
<p>按照图中提示，先输入 Vultr 机器的 IP 地址，然后输入 SSH 连接端口，然后点击开始扫描。</p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193023.png" alt="1"></p>
<p><img src="https://cdn.jsdelivr.net/gh/mmmrx/picture/BlogImg/20210428193030.png" alt="2"></p>
<p>（2）点击开始扫描按钮后，会自动扫描填写的 SSH 连接端口国内是否开启。</p>
<p>如果显示此 SSH 连接端口为开启状态，那么就说明你的 Vultr VPS没有被墙，如果SSH 连接端口为关闭状态，还不能下结论VPS被墙，要再到国外进行检测才能得出结果。</p>
<h4 id="2-国外测试"><a href="#2-国外测试" class="headerlink" title="2. 国外测试"></a>2. 国外测试</h4><p>（1）国外端口检测地址：<a href="https://www.yougetsignal.com/tools/open-ports">https://www.yougetsignal.com/tools/open-ports</a></p>
<p>先输入 Vultr 机器的 IP 地址，然后输入 SSH 连接端口，点击 Check 进行检测；</p>
<p><img src="f" alt="5"></p>
<p>如果检测结果显示“<strong>open</strong>”则表示端口没有被墙</p>
<p>检测结果显示“<strong>closed</strong>”则表示端口被墙</p>
<h5 id="端口检测结果总结："><a href="#端口检测结果总结：" class="headerlink" title="端口检测结果总结："></a><strong>端口检测结果总结：</strong></h5><ul>
<li><p>国内检测端口是开放：说明此 IP 地址并没有被封，端口正常，连接不上SSH的主要原因查看root密码以及端口是否填写正确</p>
</li>
<li><p>国内检测端口是关闭：国外检测端口是开放，可以肯定的说明你的IP 已经被封！</p>
</li>
<li><p>国内检测端口是关闭，国外检测端口也是关闭：检测一下VPS是否是在运行状态，很有可能这种情况是因为VPS没有开机的原因（正常情况下国外端口是不可能关闭的，建议开机后再进行检测），或者检查端口是否填写错误。</p>
</li>
</ul>
<h3 id="三、被封后的解决办法"><a href="#三、被封后的解决办法" class="headerlink" title="三、被封后的解决办法"></a>三、被封后的解决办法</h3><ol>
<li>IP被封：重新开一台VPS</li>
<li>如果是端口被封，可以查看服务器防火墙是否拦截了端口或者尝试更换端口，如果修改 SSH端口仍然连接不上SSH，那就直接重新购买一个VPS吧，既方便又快捷。（当然也有伙伴反映有时候被封了端口，过几天自己又可以连接了，只要IP没事就没关系）</li>
</ol>
<p>总之如果检测出VPS被墙了，不论是端口被墙，还是 IP被墙，最直接的解决办法就是重开新的VPS，删除旧机器，Vultr是计时收费，所以重开VPS后再删除旧的VPS不会多花太多钱。</p>
<p>不过对于VPS上面有大量数据的网友来说，要考虑重新购买后的数据问题，建议利用Vultr的Snapshots快照功能进行数据备份，然后再把数据完整的转移到新的VPS上面，我们先备份被墙VPS的数据，然后新开VPS恢复备份，数据就会完整的转移到新的VPS上面，最后对数据以及新开VPS进行检测都无误后删除旧的VPS，Vultr的Snapshots快照功能目前是完全免费的，备份数据也是长期有效。</p>
<p>如果您的数据特别重要，也可以先把数据下载到本地电脑保存一份再进行恢复数据，当然不差钱的可以使用Vultr的自动备份功能，不论使用哪种方式进行备份，一定要先保证我们的数据安全，在新旧VPS替换完全没有任何问题的前提下，再删除旧的VPS。</p>
<p><strong>PS：</strong>不要先删除Vultr被墙的VPS，以免再次分配到这个IP，建议先购买，保证在没有任何问题的情况下再删除旧的VPS。</p>
<blockquote>
<p>原来参考链接：<a href="https://www.vultrblog.com/vultr-ssh-cant-connect/.html">https://www.vultrblog.com/vultr-ssh-cant-connect/.html</a></p>
</blockquote>
<blockquote>
<p><a href="https://www.daniao.org/3775.html">https://www.daniao.org/3775.html</a></p>
</blockquote>
<blockquote>
<p>修改两种情况：IP被封（必须要重新购买）、端口被封（修改端口、服务器防火墙拦截了新的端口或者等几天，参考文章评价<a href="https://mr96s.com/820.html%EF%BC%89">https://mr96s.com/820.html）</a></p>
</blockquote>
]]></content>
  </entry>
</search>
